<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='employmentchangeindustryforeigners (new_jl_database)' inline='true' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1cj4mg30itkcn81g7j7wh1fcmb3x'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1cj4mg30itkcn81g7j7wh1fcmb3x' name='(jl) employment change' table='[(jl) employment change]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Local</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Foreign]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Foreign</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]&quot;' value='Foreigners' />
          <alias key='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]&quot;' value='Residents' />
        </aliases>
      </column>
      <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='real' name='[Local]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year1)' hidden='true' name='[Action (Year1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.456522' measure-ordering='alphabetic' measure-percentage='0.543478' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Local' />
        <field-sort-custom-order field='Foreign' />
      </field-sort-info>
    </datasource>
    <datasource caption='foreignemployment (new_jl_database)' inline='true' name='federated.05yfoir07jruab0zjgjk40glzxic' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1dp39390bqcfoy1h0vbcq1psm02t'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1dp39390bqcfoy1h0vbcq1psm02t' name='(jl) foreign employement passes' table='[(jl) foreign employement passes]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentPass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentPass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>EmploymentPass</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>Spass</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorkPermitPass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WorkPermitPass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>WorkPermitPass</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherWorkPasses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OtherWorkPasses]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>OtherWorkPasses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Pass' datatype='real' name='[EmploymentPass]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Other Work Passes' datatype='real' name='[OtherWorkPasses]' role='measure' type='quantitative' />
      <column caption='S Pass' datatype='real' name='[SPass]' role='measure' type='quantitative' />
      <column datatype='real' name='[Spass]' role='measure' type='quantitative' />
      <column caption='Work Permit Pass' datatype='real' name='[WorkPermitPass]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[EmploymentPass]' derivation='Sum' name='[sum:EmploymentPass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OtherWorkPasses]' derivation='Sum' name='[sum:OtherWorkPasses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SPass]' derivation='Sum' name='[sum:SPass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spass]' derivation='Sum' name='[sum:Spass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WorkPermitPass]' derivation='Sum' name='[sum:WorkPermitPass:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year) 1' hidden='true' name='[Action (Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.608696' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:SPass:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='EmploymentPass' />
        <field-sort-custom-order field='Spass' />
        <field-sort-custom-order field='WorkPermitPass' />
        <field-sort-custom-order field='OtherWorkPasses' />
        <field-sort-custom-order field='SPass' />
      </field-sort-info>
    </datasource>
    <datasource caption='graduatesnumber (new_jl_database)' inline='true' name='federated.14miaw50iyirw316i6zjx0h6q6qc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.10akrd31p3d3b91g8w7zn1pqgb8e'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.10akrd31p3d3b91g8w7zn1pqgb8e' name='(jl) graduates numbers' table='[(jl) graduates numbers]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poly</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Poly]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Poly</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uni</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Uni]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Uni</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUS</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NUS]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NUS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMU</remote-name>
            <remote-type>3</remote-type>
            <local-name>[SMU]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SMU</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SIT]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SIT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUTD</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SUTD]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SUTD</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;' value='SIT' />
          <alias key='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SUTD:qk]&quot;' value='SUTD' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[SIT]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Sutd' datatype='integer' datatype-customized='true' name='[SUTD]' role='measure' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[SIT]' derivation='Sum' name='[sum:SIT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUTD]' derivation='Sum' name='[sum:SUTD:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.304348' measure-ordering='alphabetic' measure-percentage='0.695652' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='longtermunemployedrate (new_jl_database)' inline='true' name='federated.1pahbkx17whot71agmucm1p3dln0' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0rgbplt1d5t66n1eps9oq0s0sszy'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0rgbplt1d5t66n1eps9oq0s0sszy' name='(jl) long term unemployment rate' table='[(jl) long term unemployment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Sec</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dip]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Dip</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deg]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Deg</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
      <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.347826' measure-ordering='alphabetic' measure-percentage='0.652174' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Residents' />
        <field-sort-custom-order field='Primary' />
        <field-sort-custom-order field='LowerSec' />
        <field-sort-custom-order field='Sec' />
        <field-sort-custom-order field='PostSec' />
        <field-sort-custom-order field='Dip' />
        <field-sort-custom-order field='Deg' />
        <field-sort-custom-order field='Degree' />
        <field-sort-custom-order field='Diploma' />
      </field-sort-info>
    </datasource>
    <datasource caption='residentsemployed (new_jl_database)' inline='true' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0d008tw19c8az31b9s8z01smiedp'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0d008tw19c8az31b9s8z01smiedp' name='(jl) residents employment' table='[(jl) residents employment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpperSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UpperSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>UpperSec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diploma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diploma]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Diploma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Degree]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Degree</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DipLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DipLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>DipLF</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DegLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DegLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>DegLF</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ForeignLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ForeignLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>ForeignLF</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total] - [Residents]' />
      </column>
      <column caption='% Serious (Foreign)' datatype='real' name='[Calculation_939844987988865024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_470907676544786432]/[ForeignLF]) * 100' />
      </column>
      <column caption='% Serious (Diploma)' datatype='real' name='[Calculation_939844987989004289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Diploma]/[DipLF]) * 100' />
      </column>
      <column caption='% Serious (Degree)' datatype='real' name='[Calculation_939844987989123074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Degree]/[DegLF]) * 100' />
      </column>
      <column caption='Deg LF' datatype='real' name='[DegLF]' role='measure' type='quantitative' />
      <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
      <column caption='Dip LF' datatype='real' name='[DipLF]' role='measure' type='quantitative' />
      <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
      <column caption='Foreign LF' datatype='real' name='[ForeignLF]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column caption='Upper Sec' datatype='real' name='[UpperSec]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UpperSec]' derivation='Sum' name='[sum:UpperSec:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Status)' hidden='true' name='[Action (Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.421405' measure-ordering='alphabetic' measure-percentage='0.578595' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='unemploymentrate (new_jl_database)' inline='true' name='federated.0u8qeny154dbsz15ozitc1ykmtin' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1jxt5kn0n4gwhu1friks0043hxg4'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1jxt5kn0n4gwhu1friks0043hxg4' name='(jl) unemployment rate' table='[(jl) unemployment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dip]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Dip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deg]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Deg</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
      </column>
      <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
      <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Year) 1' hidden='true' name='[Action (Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.304348' measure-ordering='alphabetic' measure-percentage='0.695652' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Residents' />
        <field-sort-custom-order field='Primary' />
        <field-sort-custom-order field='LowerSec' />
        <field-sort-custom-order field='Sec' />
        <field-sort-custom-order field='PostSec' />
        <field-sort-custom-order field='Dip' />
        <field-sort-custom-order field='Deg' />
        <field-sort-custom-order field='Calculation_939844987990724611' />
        <field-sort-custom-order field='Degree' />
        <field-sort-custom-order field='Diploma' />
      </field-sort-info>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2*) Compare Employment based on Educational Level' type='sheet' worksheet='(D2) Trend of Residents' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2*) Compare Employment based on Educational Level' />
      </command>
    </action>
    <action caption='Filter1' name='[Action3]'>
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='(D1) Employment Change for each industry,(D1) Residents &amp; Foreigners Employed' />
        <param name='special-fields' value='all' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <action caption='Filter2' name='[Action4]'>
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:%28D1%2A%29%20Compare%20Employment%20Based%20On%20Residency?%5Bfederated.05yfoir07jruab0zjgjk40glzxic%5D.%5BYear%5D~s0=&lt;[Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='(D1) Employment Change for each industry,(D1) Residents &amp; Foreigners Employed' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <datasources>
      <datasource caption='foreignemployment (new_jl_database)' name='federated.05yfoir07jruab0zjgjk40glzxic' />
      <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
    </datasources>
    <datasource-dependencies datasource='federated.05yfoir07jruab0zjgjk40glzxic'>
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='(D1) Employment Change for each industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='9'>Employment Change of foreigners and residents in </run>
            <run bold='true' fontalignment='1' fontsize='9'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='9'>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</run>
            <run bold='true' fontalignment='1' fontsize='9'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='9'> industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
          </datasources>
          <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
            <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='real' name='[Local]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]'>
            <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Services&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='% Change' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' max='90.099999999999994' min='29.5' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]</rows>
        <cols>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Foreigners View (Passes)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='9'>Number of Employed </run>
            <run bold='true' fontalignment='1' fontsize='9' underline='true'>Foreigners</run>
            <run bold='true' fontalignment='1' fontsize='9'> Passes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foreignemployment (new_jl_database)' name='federated.05yfoir07jruab0zjgjk40glzxic' />
          </datasources>
          <datasource-dependencies datasource='federated.05yfoir07jruab0zjgjk40glzxic'>
            <column caption='Employment Pass' datatype='real' name='[EmploymentPass]' role='measure' type='quantitative' />
            <column caption='Other Work Passes' datatype='real' name='[OtherWorkPasses]' role='measure' type='quantitative' />
            <column caption='S Pass' datatype='real' name='[SPass]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spass]' role='measure' type='quantitative' />
            <column caption='Work Permit Pass' datatype='real' name='[WorkPermitPass]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EmploymentPass]' derivation='Sum' name='[sum:EmploymentPass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OtherWorkPasses]' derivation='Sum' name='[sum:OtherWorkPasses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SPass]' derivation='Sum' name='[sum:SPass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spass]' derivation='Sum' name='[sum:Spass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WorkPermitPass]' derivation='Sum' name='[sum:WorkPermitPass:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:SPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year) 1]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]</column>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year)]</column>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' field-type='quantitative' max='1200.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='true' />
            <format attr='height' field='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' value='46' />
            <format attr='title' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='Number of Passes' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]</rows>
        <cols>[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Residents &amp; Foreigners Employed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&gt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'> Residents and Foreigners</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Employed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='102' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='No Of People' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
            <format attr='width' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='-90' />
            <format attr='font-size' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='Legend' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Employed Highest Education'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='11'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontsize='11'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='11'> Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column caption='Upper Sec' datatype='real' name='[UpperSec]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UpperSec]' derivation='Sum' name='[sum:UpperSec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Action (Year)]'>
            <groupfilter function='member' level='[Year]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Residents' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Long Term Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11'>Long Term Unemployment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='longtermunemployedrate (new_jl_database)' name='federated.1pahbkx17whot71agmucm1p3dln0' />
          </datasources>
          <datasource-dependencies datasource='federated.1pahbkx17whot71agmucm1p3dln0'>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sec]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sec]' derivation='Sum' name='[sum:Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Sec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Dip:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Deg:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Sec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Dip:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Deg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Degree:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Diploma:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1pahbkx17whot71agmucm1p3dln0].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]</column>
            <column>[federated.1pahbkx17whot71agmucm1p3dln0].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='% Rate' />
            <format attr='subtitle' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]</rows>
        <cols>[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Trend of Residents'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Trend of </run>
            <run bold='true' fontalignment='1' fontsize='11'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='11'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontsize='11'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='11'> Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) UnEmployement Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Unemloyment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='unemploymentrate (new_jl_database)' name='federated.0u8qeny154dbsz15ozitc1ykmtin' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8qeny154dbsz15ozitc1ykmtin'>
            <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
            </column>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987990724611]' derivation='Sum' name='[sum:Calculation_939844987990724611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sec]' derivation='Sum' name='[sum:Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Sec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Sec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Diploma:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Degree:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</column>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' field-type='quantitative' max='4.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='% Rate' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]</rows>
        <cols>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Degree Graduates (Words)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Degree</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[NP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NUS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NYP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RP]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[SIT]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[SMU]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SP]' role='measure' type='quantitative' />
            <column aggregation='Count' caption='Sutd' datatype='integer' datatype-customized='true' name='[SUTD]' role='measure' type='ordinal' />
            <column datatype='integer' name='[TP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NP]' derivation='Sum' name='[sum:NP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUS]' derivation='Sum' name='[sum:NUS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NYP]' derivation='Sum' name='[sum:NYP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RP]' derivation='Sum' name='[sum:RP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SIT]' derivation='Sum' name='[sum:SIT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SMU]' derivation='Sum' name='[sum:SMU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SP]' derivation='Sum' name='[sum:SP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUTD]' derivation='Sum' name='[sum:SUTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TP]' derivation='Sum' name='[sum:TP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NUS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SMU:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SUTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NYP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:RP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:TP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NUS:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SMU:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3) Diploma Graduates (Words)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Diploma</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[NP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NYP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[TP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NP]' derivation='Sum' name='[sum:NP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NYP]' derivation='Sum' name='[sum:NYP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RP]' derivation='Sum' name='[sum:RP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SP]' derivation='Sum' name='[sum:SP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TP]' derivation='Sum' name='[sum:TP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NYP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:RP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:TP:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3) Graduates [Chart]'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Number of Diploma &amp; Degree Graduates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[Poly]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Uni]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Poly]' derivation='Sum' name='[sum:Poly:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Uni]' derivation='Sum' name='[sum:Uni:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:Poly:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:Uni:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]</rows>
        <cols>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Number of People Employed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Employed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' max='750.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Graduates' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='Select year to view:'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Select year to view:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Number of People Unemployed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' max='30.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Graduates' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='Select year to view:'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Select year to view:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Employment Change'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tempus Sans ITC' fontsize='11'>Employment Change based on Types of Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
          </datasources>
          <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
            <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='real' name='[Local]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]'>
            <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Manufacturing&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='Foreigners' />
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='Residents' />
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='3' x-axis-name='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</rows>
        <cols>([federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk] + [federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Foreigners'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11' underline='true'>Foreigners</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Local'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11' underline='true'>Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Seriousness'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='10'>Trend of % Seriousness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column caption='% Serious (Foreign)' datatype='real' name='[Calculation_939844987988865024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_470907676544786432]/[ForeignLF]) * 100' />
            </column>
            <column caption='% Serious (Diploma)' datatype='real' name='[Calculation_939844987989004289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Diploma]/[DipLF]) * 100' />
            </column>
            <column caption='% Serious (Degree)' datatype='real' name='[Calculation_939844987989123074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Degree]/[DegLF]) * 100' />
            </column>
            <column caption='Deg LF' datatype='real' name='[DegLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column caption='Dip LF' datatype='real' name='[DipLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column caption='Foreign LF' datatype='real' name='[ForeignLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987988865024]' derivation='Sum' name='[sum:Calculation_939844987988865024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_939844987989004289]' derivation='Sum' name='[sum:Calculation_939844987989004289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_939844987989123074]' derivation='Sum' name='[sum:Calculation_939844987989123074:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='Diploma' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='Degree' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='Foreigners' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk] + ([federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk] + [federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]))</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tempus Sans ITC' fontsize='10'>Trend of Unemployment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='unemploymentrate (new_jl_database)' name='federated.0u8qeny154dbsz15ozitc1ykmtin' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8qeny154dbsz15ozitc1ykmtin'>
            <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
            </column>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987990724611]' derivation='Sum' name='[sum:Calculation_939844987990724611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk] + ([federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk] + [federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]))</rows>
        <cols>[federated.0u8qeny154dbsz15ozitc1ykmtin].[none:Year:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='(D1*) Compare Employment Based On Residency'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#eef1f3' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column datatype='string' name='[Status]' role='dimension' type='nominal' />
        <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='31' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='744' h='93000' id='29' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='93000' id='27' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='39328' id='5' param='horz' type='layout-flow' w='12600' x='87400' y='14469'>
                  <zone fixed-size='160' h='39328' id='4' is-fixed='true' param='vert' type='layout-flow' w='12600' x='87400' y='14469'>
                    <zone h='7625' id='6' mode='dropdown' name='(D1) Residents &amp; Foreigners Employed' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' show-all='false' type='filter' w='12600' x='87400' y='14469' />
                    <zone h='9000' id='7' name='(D1) Residents &amp; Foreigners Employed' pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' w='12600' x='87400' y='22094' />
                  </zone>
                </zone>
                <zone forceUpdate='true' h='4418' id='12' type='text' w='66700' x='33300' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Compare Employment based on residency</run>
                  </formatted-text>
                </zone>
                <zone h='24239' id='10' name='(D1) Foreigners View (Passes)' show-title='false' w='54400' x='0' y='68761' />
                <zone h='14469' id='18' is-scaled='1' param='C:\Users\Jun Long\Desktop\ITP232 Data Sets\Images\singapore-new-industries-workforce.jpg' type='bitmap' w='33300' x='0' y='0' />
                <zone h='39328' id='1' name='(D1) Residents &amp; Foreigners Employed' show-title='false' w='87400' x='0' y='14469' />
                <zone forceUpdate='true' h='10051' id='19' type='text' w='66700' x='33300' y='4418'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>How many residents &amp; foreigners are </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>employed</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>?&#10;How many residents &amp; foreigners are </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>unemployed</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>?&#10;&#10;Look at the chart </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>below</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'> to find out.</run>
                  </formatted-text>
                </zone>
                <zone forceUpdate='true' h='5194' id='21' type='text' w='54400' x='0' y='53797'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>How does foreigners employed in Singapore?</run>
                  </formatted-text>
                </zone>
                <zone h='31412' id='22' name='(D1) Employment Change for each industry' w='30900' x='57600' y='61588' />
                <zone h='31412' id='23' mode='dropdown' name='(D1) Employment Change for each industry' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' w='11500' x='88500' y='61588' />
                <zone forceUpdate='true' h='7791' id='25' type='text' w='42400' x='57600' y='53797'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>How does the employment of residents and foreigners in various industry?</run>
                  </formatted-text>
                </zone>
                <zone h='39203' id='26' type='empty' w='3200' x='54400' y='53797' />
                <zone forceUpdate='true' h='9770' id='32' type='text' w='54400' x='0' y='58991'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000'>They need to have foreigner&apos;s pass. &#10;Below chart shows the types of passes and how many employed foreigners get.</run>
                  </formatted-text>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D2*) Compare Employment based on Educational Level'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f6eee3' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column datatype='string' name='[Status]' role='dimension' type='nominal' />
        <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87125' id='17' param='horz' type='layout-flow' w='100000' x='0' y='12875'>
            <zone h='87125' id='13' param='horz' type='layout-flow' w='99600' x='0' y='12875'>
              <zone h='87125' id='11' type='layout-basic' w='99600' x='0' y='12875'>
                <zone h='30955' id='1' name='(D2) Trend of Residents' w='84000' x='0' y='12875' />
                <zone h='51301' id='10' name='(D2) Employed Highest Education' w='32100' x='0' y='48699' />
                <zone h='30955' id='14' mode='dropdown' name='(D2) Employed Highest Education' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' show-all='false' type='filter' w='15600' x='84000' y='12875' />
                <zone h='51301' id='18' name='(D2) Long Term Unemployment Rate' w='33100' x='35300' y='48699' />
                <zone h='51301' id='20' name='(D2) UnEmployement Rate' w='28000' x='71600' y='48699' />
                <zone forceUpdate='true' h='4869' id='21' type='text' w='99600' x='0' y='43830'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>3 things to compare employment based on educational level/highest qualification:</run>
                  </formatted-text>
                </zone>
                <zone h='51301' id='22' type='empty' w='3200' x='32100' y='48699' />
                <zone h='51301' id='23' type='empty' w='3200' x='68400' y='48699' />
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='12875' id='8' type='text' w='71000' x='29000' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='16'>Compare Employment based on educational level</run>
            </formatted-text>
          </zone>
          <zone h='12875' id='19' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\ITP232 Data Sets\Images\Rifle-Paper-Co-Graduation.jpg' type='bitmap' w='29000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D3*) Compare Employment After Graduate From Poly and University'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f1f6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='23' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='21' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='36625' id='17' param='horz' type='layout-flow' w='99600' x='0' y='13375'>
                <zone h='36625' id='13' param='horz' type='layout-flow' w='99600' x='0' y='13375'>
                  <zone h='36625' id='11' type='layout-basic' w='99600' x='0' y='13375'>
                    <zone h='19805' id='6' name='(D3) Diploma Graduates (Words)' w='30500' x='69100' y='13375' />
                    <zone h='16820' id='7' name='(D3) Degree Graduates (Words)' w='30500' x='69100' y='33180' />
                    <zone h='36625' id='5' name='(D3) Graduates [Chart]' w='69100' x='0' y='13375' />
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5750' id='8' type='text' w='99600' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Compare Employment after graduate from Poly and University</run>
                </formatted-text>
              </zone>
              <zone h='45625' id='20' name='(D3) Number of People Employed' show-title='false' w='49800' x='0' y='54375' />
              <zone fixed-size='144' h='7625' id='22' is-fixed='true' param='vert' type='layout-flow' w='99600' x='0' y='5750'>
                <zone h='7625' id='24' mode='dropdown' name='(D3) Number of People Employed' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' show-all='false' type='filter' w='99600' x='0' y='5750' />
              </zone>
              <zone h='45625' id='25' name='(D3) Number of People Unemployed' show-title='false' w='49800' x='49800' y='54375' />
              <zone h='4375' id='27' type='text' w='99600' x='0' y='50000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
                </formatted-text>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D4*) Trend'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#efebe8' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
      </datasources>
      <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='96000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='4000'>
            <zone h='96000' id='6' type='layout-basic' w='99600' x='0' y='4000'>
              <zone h='42673' id='1' name='(D4) Trend of Seriousness' w='52300' x='0' y='29077' />
              <zone h='42673' id='3' name='(D4) Trend of Unemployment Rate' w='47300' x='52300' y='29077' />
              <zone h='20959' id='4' name='(D4) Trend of Foreigners' show-title='false' w='44600' x='0' y='8118' />
              <zone h='20959' id='5' name='(D4) Trend of Local' show-title='false' w='43000' x='44600' y='8118' />
              <zone h='28250' id='10' name='(D4) Employment Change' w='84900' x='0' y='71750' />
              <zone h='4118' id='13' type='text' w='45700' x='0' y='4000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' underline='true'>Foreigners</run>
                </formatted-text>
              </zone>
              <zone forceUpdate='true' h='4118' id='14' type='text' w='53900' x='45700' y='4000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' underline='true'>Residents</run>
                </formatted-text>
              </zone>
              <zone h='28250' id='11' mode='dropdown' name='(D4) Employment Change' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' w='14700' x='84900' y='71750' />
              <zone fixed-size='112' h='20959' id='7' is-fixed='true' param='vert' type='layout-flow' w='12000' x='87600' y='8118'>
                <zone h='9000' id='9' name='(D4) Trend of Local' pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' w='12000' x='87600' y='8118' />
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4000' id='12' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Trend of Unemployed Graduates &amp; Foreigners</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='10750' id='1' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='11'>Foreign Talent Affects Diploma &amp; Degree Graduates&#10; (Also features Unemployment Data)</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='89250' id='3' type='text' w='100000' x='0' y='10750'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='10'>Goals:</run>
              <run fontcolor='#000000' fontsize='10'> &#10;Many foreigners come to Singapore and trying to take the popular and high payable jobs in Singapore. This is how the &quot;foreign talent&quot; is comes in to Singapore and taking over local talent (Residents). &#10;&#10;As many of the jobs are taken by foreigners due to their talent and their skills, the graduates might experience difficulties of finding a job and getting a job due to: &#10;·    Foreigners have higher talent than local residents. &#10;·    Most of the jobs are being taken by foreigners due to their talent. &#10;·    Residents feel unfair about foreigners. &#10;  &#10;In this section, we will be finding out how serious does the foreign talent makes the residents including the graduates difficult to find and get their jobs, resulting into unemployment. &#10;  </run>
              <run bold='true' fontcolor='#000000' fontsize='10'>&#10;Hypothesis:</run>
              <run fontcolor='#000000' fontsize='10'> &#10;·    Conditions of employment after graduate from diploma and degree  (D3)&#10;·    Seriousness of unemployment rate of the graduates and foreigners over the years (D2, D4)&#10;·    Unemployment rate of the graduates and foreigners over the years (D2, D4)&#10;·    Trend of unemployment for the graduates as well as foreigners (D1, D2, D4)&#10;·    Employment of graduates and foreigners in different industry (D1, D4) &#10;&#10;Proceed to next page to view each of the dashboard that answer my hypothesis --&gt;</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='JL Story' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='259' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5602' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5602' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16909'>
              <flipboard active-id='4' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Introduction' captured-sheet='Dashboard 5' id='6' />
                  <story-point caption='D1 Compare Employment Based On Residency' captured-sheet='(D1*) Compare Employment Based On Residency' id='1' />
                  <story-point caption='D2 Compare Employment Based On Educational Level' captured-sheet='(D2*) Compare Employment based on Educational Level' id='2'>
                    <capturedDeltas>
                      <worksheet name='(D2) UnEmployement Rate'>
                        <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year) 1]'>
                          <groupfilter function='member' level='[Year]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year)]'>
                          <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='D3 Compare Employment After Graduate From Poly &amp; University' captured-sheet='(D3*) Compare Employment After Graduate From Poly and University' id='3' />
                  <story-point caption='D4 Trend of Unemployed Graduates and Foreigners' captured-sheet='(D4*) Trend' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='(D1) Residents &amp; Foreigners Employed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1) Foreigners View (Passes)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1) Employment Change for each industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' />
            <card pane-specification-id='5' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='(D1*) Compare Employment Based On Residency'>
      <viewpoints>
        <viewpoint name='(D1) Employment Change for each industry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D1) Foreigners View (Passes)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D1) Residents &amp; Foreigners Employed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='23' />
    </window>
    <window class='worksheet' name='(D2) Trend of Residents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) Employed Highest Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) Long Term Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) UnEmployement Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='(D2*) Compare Employment based on Educational Level'>
      <viewpoints>
        <viewpoint name='(D2) Employed Highest Education'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2) Long Term Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2) Trend of Residents'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</field>
                    <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2014</value>
                  <value>81.799999999999997</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='(D2) UnEmployement Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='(D3) Graduates [Chart]'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Diploma Graduates (Words)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Degree Graduates (Words)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Number of People Employed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Number of People Unemployed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='(D3*) Compare Employment After Graduate From Poly and University'>
      <viewpoints>
        <viewpoint name='(D3) Degree Graduates (Words)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Diploma Graduates (Words)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Graduates [Chart]'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Number of People Employed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D3) Number of People Unemployed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='(D4) Trend of Seriousness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Foreigners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Local'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Employment Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Total:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='(D4*) Trend'>
      <viewpoints>
        <viewpoint name='(D4) Employment Change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Foreigners'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Local'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D4) Trend of Seriousness'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='JL Story'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(D1) Employment Change for each industry' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='(D1) Foreigners View (Passes)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATSUlEQVR4nO3daWwbd3rH8e9cJCVSIiXqlmVZli35PmM7PhLHTpxsnGQvbLp9s9juixbd
      9sUWLfqmL9oC7ZsCRV8sUKDd7b7odgssFs1md5M4cXwndg6fkS85siVb1n2LIiWeM9MXUmzJ
      cQ5T0lDyPB9AgPkXzXlI6sf5z5D8P4pt2zZCuJCiKIqa6yKEyCUJgHA1CYBwNT3XBcyWaZoz
      LsshzdfTF+shmow6sq368EoUFEe29agWfQCm/8FnMhk0TcthNYvHa02/5qP2M45s62ev/gqv
      7nVkW49q0QdA1+/fBcuyMAwjh9UsHk6e/zAMA0NfmM+LwwGwsVIT9AyMUVJeiVcHbIvYSD89
      A6PgKWDJkgryDBUzNU5nRzcpJZ+a2mp8moJtmQz13mUoZlFSVU044HO2fPHYcfQgOD7SyZG3
      D3P46GGG45Njke5Pef9sE8ORGN0t53m/6S62ZXLl9HFudA7Q3/YJp87fIm3ZRO42ceJsCyMD
      dzl1/ENG0jLfF7Pj6B5gIpZk63OvkHfyN/fG8kqX8/yBRjRNxY6Gef3UAPG0l65oiP0v78Jr
      JTh67DixiTKam7p58oWXqMmDzqYjXGsdZfeqogV6eCUWA0f3AOGaFZT4Z84FPR4vmqaQig3y
      4UfN1K6uwxgfglA1Xk1B1XVCHh8T8TFGjCLK8hRAIVBWTmZkFNkHiNnI/fsAts1YXxtHjnxA
      YcM2NtaVTP1i+uu6Atgw42TaQj2xJhaTnAcgGengzMU7PHHgIOtqS9FVBcVfDKNdJE0bK5Nh
      NJUgL6+QovQwfXEbsIn196IVhSQEYlYcPAZI09vaRm80TkfvIObVJuK1NZjt14njpefWVXqA
      vGAl9bXlVAUucPqDjynIDGOFVlCQH2T1+gqOvXuUvnIPHX06ew9KAMTsOHoQrOo6uq6zccez
      gIKmqZSsXEu6N4I1dR1NU1FUjQ179nG3vZOkWsWmuhoMVSG0bBN7Pe0MRE2eWruUYkP+/MXs
      OBgAg7Laeso+Nx5iTUnN56/uLaCuYfWMIUXVKV1ST+l8lShcJ+fHAELkkgRAuJoEQLiaBEC4
      mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoE
      QLiaBEC4mqMBsK0MQ11tDMamL2luE4/0094zfH/EthjsbOXatRv0jk7cu15ibIDmq1do6xwg
      bcmSWGL2HAuAmRrn+scneOv3r3GlJ3FvvO/mBQ69dZhj565OjdhMdF/h+LlW4uPDfHDsPQaS
      NplYP++f/ICRlEnrpQ+4fGfQqdLFY8yxVSEyyRTBuk08a8RonbaaScYI8cyzT3Pm8p3JATvB
      1QvtbH/hFZblQ13BcS7eGGKNtx1fzXp2bV5OqjbAW5fa2by8VOZwYlYcC4C3oIglBdDdOXO8
      etkKJoY67g+kkwxqQTblT6bEX1mFfXGYWEmSUDAIgCcYwh/vIw54M5l7/9WyLNLp9HzflceC
      bVtffaU5kslkUO2F+VK18BpkKKDY9v1Fb2373jKh95rBTP1DARRl5uJYD14Wufew52mhWHgB
      0L2UWGN0T9gsz4dYTzdKeDMFnlH6xiJAmFRklPF8Hz5AndYSyTTNGR1jxBdzskOMNrUi4ELk
      WFXjI93cvNVFf1sPff5LXJooYeWapXQ2XWdobJDujn7OnbvEkoZVrN9ezxuHDtFb4ae7z2L/
      N4sJpm2aj57mZGKAib4e6jY/JfN/MWuOBUAzvBQUFpK36VlqAc3IR1M0/AWFKIEC9lXVARpe
      XcNXvpoDewoYjGZo2FA5uQaoEWbP/qfp7B7EU7eSyrIip0oXjzHHAuALhKlvDH9uvKah4aHX
      L6pYSlHF9BEFb6CY+obi+SlQuJLMIoSrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kA
      hKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr
      SQCEq0kAhKtJAISrOd4hpqftGj2R+0uam4kxbnxyno8uXCWWnlz12bYtelqv8PHHF7g7GP3s
      fzMx0sW5jz7kWms3KekQI+aAYwHIJMZoOnOU40fe4UZ/cmrU4vKZE/SkPBQpwxw9dYmJjEX0
      zgXO3BglWKDxyalTdMct0pEeTr13CU9xCcM3L3DxVq9TpYvHmGNrg1omVKzeTmle/H6HGHOA
      nkiIp59Zj1+F/qNvMDJWR8flXra/8DJLfVCmj3D+00HWeDsoqF3HxoZlpEtU3rzQhdlQifal
      WxXiyzkWAI+/kAo/dN+ZNjg+TDpURb6moNg2oUAhifEog0aQLb7JlOSXV6JcGCFWkiIULATA
      CIYoiPeSYLJDjD3VMMM0TVKplFN3aVGzLOc6xKTTaRRLGmR8nqpCJoPF5FzMNE0URUE1TT7r
      I2lnMliKd+r3U0+aaZJRJjuPqOr9WZxlWWia7BO+Dic7tmiqumCfl9wGIL8ET+wi46lVFBoW
      o7Eo5YEg5coYnVGTFQGFse5u9LInKDAi9ERGsO0wydEREv68yQ4x0wKgKMqCfaAXGicDoGra
      gn1eHAtAdPAOl6/cZuBuOwN5p1EHytjwxGZWLrE5dvgdChjHLNtCSbCQ8JOref3N33G7OI+R
      cR8vfquYQFqh5ehJDh27S2p0jIad++Qcrpg157pE+sPUNxgsm2qIoepefBos37KXouERkpZO
      SVkYQwE7vJKXXixiLG4SCBZTqAFaiF3PPcfQcBQ9v5CioN+p0sVjzLmD4LwCKqoLPv8L1Uu4
      bEYrGBRFIRAqJRCaMYrhK6Ci6iG3IUSWZBYhXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0C
      IFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBc
      TQIgXE0CIFxNAiBcLbdrgwK2ZZJKp7FR8XgMVEXBtm3MTJqMaaMbBrqmAjaWaZJOZ1A0HUPX
      HF3fUjyechyANJdOvkXrcAYzEad60352rq3GjtzlD4dOY+o6Sv4SDh7cTV4myrmTJ7gdSYNt
      sHXvflaWyypxYnZyGgC7/zqtNPDN76xCN8c59MY7DC09SP/ZJlY8+13Wl+i0X3iXi61jrFJb
      iQbq+d5zaxnvvMypG7dZUb4B2QeI2chtADJJ8AbRFQXV8FMc8DIWHaErHmBPeR4qUFFXw6fX
      +xkJxQiXrkJXFYLlFehNt0gAPvt+rzDbtu81yxBfxbnHaSE/LzkNgFq5htKzh3jzret4PAaD
      3RHCaywyXgPv1HUUrxfdNLEUBY8+Va6u4wUsIDOtQ4xlWdIh5mtyskNMKpWSDjEPpQTYc/AV
      YuNxbEXl/JmTFPoDhBJRBlI2VR5IDg5gFtaTr4/QFYsCRWRiUaKeyZDohnHv5lKpFB6PJ2d3
      ZzFRVecaVni9Xry696uvmAM5PghO0HGnm0A4RKyjiXRwJeFgCG+jn1OnL7N7dYhLl/ppOLCT
      snSST967xt1KP8NXrxOqWveVxaczJtEJZ/YIeV6DPG/OT6qJR5TjZ8xATQ9y/uNP8RUv47nd
      a/Ao4Fm1h83pj7jYNMDyJ/exvFADatm/K8OHZz8isGQ1O9fUfOWtt3QM8Xc/Pz7/dwP40Yub
      +PZTqxzZlpg7OQ6ARu3aHdSunTmqKBp1G3ZTt2HGKIHyFRw4uMLJAsVjTt4JFq4mARCuJgEQ
      riYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4m
      ARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK6W88UszXSCsWgM01YJBEN4dRVs
      m0QswnjKIi9QgN9rADaZVJzI2AS6109BwIcqHWLELOU4ABkuHH+TrqQPn5om4avi+ae3YcRu
      8+bhC+QXeBnPBHnxlWfwpyN8dPwEQ/hIjydZu3sfq6uCuS1fLHq5DUCmh56Rcg68uge/anHq
      3TcZGoswdPYq67/xHRpDKj1NRzjfMsoavZV0yRpe2dZAoreZd2+00Vi1WeZwYlZyGwCtlOLA
      RW61tlPqmSBqBin02VzLFLK3yEABimqqSV0ZIFI0QVHxUlRFIT9cgjd2c7JDzLRGD7ZtY5rm
      vcuWg11JrAe2vdA52bHFsqwF+9jkuEGGTqjIS9ftFvoVm0BRBR4FTEPns7YXiuFBsywsRUHX
      ppo6aBqGPdnkZ8Yf/AMPtOXgg76Qn+SHcTIAmUwGDecacjyK3Aag7zJX4sv4o+cb0YDLx9+h
      daSE4lSE3qRNjRfifb1YRasIGKO0j0WBYjJjEaI+Dz5Am9YhxrbtGR1idN25u6dr2qLqTqOq
      zk0ePR4PHn1hPja5DUCoAt/AWW60+ghqSVpHkmz3F1GzNsyxEx+TXlHI9csRNn6jhLJ0mqaT
      TTQHFUZvXqesZssCfU0Ri0luA+Ct4vkDW2luucOQabDj2eepDOWjhLazw2zidk+EtXueocav
      AdU885RF07Xb5C/dyJoVlTktXTwecv4+QKCkhm0lD7Y70ljSuIUljdPHFPzhpex6eqmD1YnH
      nZxFFK4mARCuJgEQriYBEK4mARCuJgEQrpbz06BuMnH3Z6RGzzqyreC6f0dRvY5sazGTADjI
      So1gJbqc2ZiDn/VZzGQKJFxNAiBcTQIgXE0CIFxNAiBcLesAmKZJIpF09JtFQsy1rAPQPzjM
      z3/1fySTqbmsRwhHZR2AkcgY7R3d/OJ/f8tIZGwuaxLCMY8UgHgiwcDQCDdutvHaG0eYiCe5
      3tLKr19/m2hsfL5qFGLePNI7wR1dffznL3+DmTFJpTNYlsVTT26hsryUaGycgoB/vuoUYl48
      UgBWLl/Ki/v38Pqh49i2zY6tG/j+t19E1+Xr6WJxeqQp0PhEnM7uPjauayQ/z0fd0mr54xeL
      2iPtAT65+ikb161i49pGLl1pxuddmGu9CPF1PVIAdm7biKooKIrClg2r56smIRzzSAHQpq0m
      psjS5OIxIB+FEK6WXQDsNH0dHcTSMNzRzKn3PmQglpnj0oSYf1l9IyzZe53XT/fyw1dD/Ppn
      /8GgUUJb1MOPXtr6aDeUinGne+D+l5dUL+VV5eTpCtGhXobHTYLhUooCPsAmNRGht38UI1BE
      WXEhmirTMDE7We0BIoM9+IqKMfouMBB+gT/9k++QiXY++g2lJ+jp7qG7u5vu7i5OHD1M/1iK
      5EALbx87y53WZo68e5rRjI0VH+bM0RN8ereDc6eOc61rNJvShZghqz1AcVUdPb/5BX/922Ge
      +6t/JT34IZovi8Vq/WXs3FUGgBlpYSiWT0VI4cqhT3ni5W9R74eBa0c53zzMWk8b2pIN7NtS
      T3KwhUNNbayr2SoHMWJWsgqAXlzPn/34x9zuHKJueRBtdDUvLCvLugjbSnL17E0adzyP1xpn
      QAmyzj85vQlUVmE2DTMWThAKTvYE8waLyJ8YIAF4H2iQkclkZlx2yoPbfhjbdq4e0zTB/uJ6
      nPwYu2maZFiYx4hZvYDadopr77/NL//rp1zssoiP9dFyqyfrIhIjvbRbIVaGDBTbxlbVe2v/
      K6qKatvYgKJMlasoqFMdYmzbvvfDA5edbJE0fbtf+ONYNWDZ1pfWgoPVWNaX15KrH8hyDxBt
      PcfFdD1//q0YrRkbvz9A+5UbsL0+m4eHjpbrVDfunkyj4SOcidATt6nNg4neHuzwego8o9we
      iwDFpMcixPK95AHqtC4wlmVhTOsYc6+lkgM0TZux7YdJKs5N2AzdQNG+uB7FyVoMA0P/8scm
      V7IKgK2o6IpFMmWSjke51dHEyHh2U6DU8B1uxYp5pqZgckDxsXZTNe8cOUlkaYC21gRPvhQm
      nDa5evwc5/UJou2tVDfukPm/mLWsAlC4dCOrz/0P//32ZaLGP+Ez/PzgJwezKsDSC9n6RDn5
      2menNBUCNZvYa7fQNZxi276nqfCp4Cvn6b3baGnromrdDpbXZH/MIcRnsgqA4ink2T/+C576
      7g8YGTUpKgni0bJ7PfYVluB78PYVlbLaVZTVzhglL1TBxi0VWW1HiIfJ6q/WSvRz9PBJogS4
      +f4v+Ye//2fea+6f69qEmHdZBWCs/Ro34zoh+zbvXUiwf+8mrjVdmuvahJh3WQVAURQmhns5
      /9bv0be9zKaGJRiOnuQTYm5kFYDCZZtYY/RyqNnD9w40kohEqG2Q7weIxSe7I1dVpbJxJz/5
      278k2fQHXjtxg/LS4jkuTYj5l1UAYneaeL89SlDr4Xevn6W8PJ/THzjT+EGIuZRVADLpFIoZ
      p+39t7G3vspzuzbisRNzXZsQ8y6rAASXrqGg+yw/fb2V5/evZWKwl1DF8rmuTYh5l9UbYaq/
      kh/+zT/yw6nLmfB+qr/kcydCLFTZ9QizElw9c4L3LjWTmPqUa/WmA3x///o5LE2I+ZfVFGi8
      6wpvfNhGWO3BU7+XhnIdjLy5rk2IeZddAEaHqN68k+0rqyitbWT3U/tID92Z49KEmH9ZTYGK
      ymtIN/dSsmsHH//bv9BRBkb9y3NdmxDz7v8BMnlCPx27KnMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D1) Residents &amp; Foreigners Employed' width='192'>
      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
      8TTSABJP8/8BiM6OLuDpd4oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D1*) Compare Employment Based On Residency' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2) Employed Highest Education' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D2) Long Term Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D2) Trend of Residents' width='192'>
      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
      g/x/l0XZviX3KxAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2) UnEmployement Rate' width='192'>
      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
      tP8D8Ef+ZAqQamgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2*) Compare Employment based on Educational Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='88' name='(D3) Degree Graduates (Words)' width='144'>
      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
      /wOIn4kqNCLlhwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='109' name='(D3) Diploma Graduates (Words)' width='164'>
      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
      Jktqt9oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D3) Graduates [Chart]' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='(D3) Number of People Employed' width='192'>
      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
      /wGLXtDH7MzPGgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D3) Number of People Unemployed' width='184'>
      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
      0iTgQmn/D3FVvSyC150eAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D3*) Compare Employment After Graduate From Poly and University' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dd3CcZ37Y8e/23gt20TsIkmBvIilKJ+kkne6ku/NYPsdnx7FjT2aSiVMm
      7SYex/EkM3Hs2HESn6/47Cs6n3TSqZIUJRaxEyAKQZDovQOLXewusH333Td/QCLF04okSBD1
      /cxwhli87/P+8L77e5+3PEUWD8dEJJINSr7SAUgkK0lKAMmGJiXAIxSfHeV8S+cjKXtiqJsz
      5y8RS2cfSfm5zPtH+fDMWWYjyYcq58NTJ5coooe3IRKg7VoDZz86ybsnzy1ZmX/+Z/+d8xfO
      M+EPfe4ymcgU13pHHmo7s0PXeOf8tc98/vYHZ3i8Lp9fnLjwQOXGxlv5k++9saht/uwX7/HU
      F57EbtTc1zZe+9H3eeu91zl6puGOz5vrm+87zkDvJf7XK8cA6Gz4gDMt/QC89eo/EPtU7k+N
      DRG/j5PB4NAgg61nOds6BIDyviNZo9Jzo5xrHeFf/s7LANxsvsTAhA9H4SaaP3qLwpIK1CY7
      qbRAmTnFDb+CEq8Xi3yOloEQxeoQqpL95GnjtHX288wLX8euVzIyMc5+jRFjapz/+hc/ZVOR
      A5Nei7t8B/Uf/oKS8gp2Vnvv2KY9r5B4LM2BzR7augf54PINtlZ4Met1WAtrsRKirWeI2lI3
      F9t9lBS6ifScY1C1hecP7SDqH+e1N17nha+/TP/AKO+++xYdM0aGt3hobr3O1toa3r/Swctf
      eZ58t43O9mu8c/I8X6grwK8qpcyp4cPz9fyr3/strnX1kZybo+3qOdyVW7h+rZsip5Lz1/qw
      x/sZVG1hZ6GOxms32H34OUrsCrr7Bzj77qvM4ODwrmqar10nJcio9So53xXCrpOjU8vZcfBZ
      SvMsTM+E+Y2vPM13f3SKAmOC0alZ8srrUCoUnDz1IU8/8yxnz53hqSeeYqDnJu+eucKvf2E7
      P7/YS3lRPi88uZ+O3iFCcwvnaa0sw9h0AKhgcHqa0z/7W3AX43SX0t58juqKCvYe/gIXz57C
      qlcz5Iugnffh2PEYyck+VLYS2q9dJOPrRbn5yyQCg+u/BghPDqI0ORd+SPp572InL734NU68
      8xqxtII9ZRbm5W7arzcxMtJP5fbDXDh1HJlCw9VLF4mEx0nI1Xz3e99Dq4TQfAyAwtJKHt+3
      CyE2h6dsM8MjQzz//CHef/09fJEUVTaRj5p7IRm4tc0Pjh+j6eIJfvbmUQryrFgKqxkcHuaZ
      Lz3FqXd/zre/+yPUCoGZiUnyK3fQ2nKRwqJitu/ej0YhQy6HeHCcjqkspcVudlRXUbdtD9//
      7ncwG7WE4/N0dwyS77Yxev00V/sTpJIRktEwswk5WoWMtuYmvve336Nk7yGsGZFT5xqwmUVa
      GjtBJqe58RIFH2/zr7/zN5j0akJzYWQqA0UlpWwqtTEwM88bP/8pX/rKiwgTLTR1jbL5wDMM
      jY5wqNbJiUstAGTiIU5cuMkf/JPnOdE8yksvfZX33vwpAPr4BH/3yo/xJQwLx0aEtuYmwvEg
      ruItXGut5/t/+102HziE8eMTuzPPxdTMNKGJLkx51fjGwxx6+ot89OHrTM/6cSnDfP9vv4Mv
      MMsP3zmLEI0yExpGUBkIzAQIzYWZDs1RVORm797H6Gk+v/4TwFlzGEdqiPrGJm4O+jAr4pw6
      dZznvvJrlJeXEheUlBXYSKWzGLU6zn7wJi99/SXOX71BOpPBYi9mS2UpRw4fwuL04DDrAJCl
      oxw/+ia9vgRuuwVvnoe+pnpK9h0gHpygdQq+fGQ7Trv7jm1+4/n99EZMlHjceF1WvJ48xm80
      kFd7iMcf34vdVYDBYiHfZSAZz7LjsacZ72xEAM6dP082m0HMChhMZkq2HyQ60cHhJ46A2kK+
      w8GBw/sBcBTVEJnuYHh4EqXZzo4tVVy4dJ5MMk1JiZerl1uZjoxSVuzmxMkLOLwGLly4SjKT
      YefH2/zC44+j1NvwOm0AmPUGZCoTB3Zso66mnA9OnoL8nRzaUolZI8Pr9XClvoXdu3YC4PGU
      8NWvvoTRZMcghDn1wVG+/NVvYrabOfTCNzj1/kl+9dmFeD+JLZFVU+SxkUkkKS/wcPlqG7P+
      cQBMhVuR+bo5Vd/BP375BcxeF0KgH4W+mDyrjcqDLzLeN8CvfPUF9m6toKCsjDxXBZtK3eh0
      ejLpDE6blUNPfZ2Opgv85stfQia9B7jt3Ls/QFb7dY5U2QHoHxigorx80eX86Z/9Of/x3/+7
      nL976yffZtsLv0OFQ/dAMfqnR1GZ8rDo1XdfMB1jaDrMj1/5IX/0n7516+OhwX6KyipQAOcv
      nufI4SN3rDYwMED5A/zNixUca+etK2P87svP5YztNoHzl+o5cujQksdw4Z0fSQnwaYHpMRRG
      F1bD/d3kfZ7+wQEqynJ/ifr6+qisrHyo8u9LOs75+iYqNm2lwGV79NtbpJmJIVTWAqx61YrF
      0NffJyWAZGNb9/cAEsndSAkg2dCkBJBsaOv+Rdh689d/+d+wl+/hq0/tYzIYp+30SY5889fw
      DU+yqaKYjs5eRntbydv6ODVuA0mZjmQ0RCIaxllQgW+0F6OzECEeQqExM9J+iZC2lJ0lVuJo
      KHRbmZyaRSYTuFzfwDNPHCQYF9HIREQhg9aoITIfx+UtRrsOvj3STfAac/r467SOxdBGRhia
      irKlehOCKspA7zBuTylV2/YR6DpP9ZMvs8ur4pU33kap0HKtq4+Kqk2o4zOEZCZS/gF++5/9
      e/oa3iVo3c5oy0mSooZ/+6//Ja+88mMUciWpdJrAeC+TUTU7astIBQYIqkr4xteexe0uWBcJ
      sA7+hI0kw7QviMPqprJiB3pXnEKnGWueESGrZ++OLVxu7OTwnt30j4yyv/og8zPTfOP3/gWx
      +M+p21JFc+Mchfl5WCsKKHTbUG3dxbHGYYq8LoJZMwpklOWZyFqqiQfHKHIYcCU07CkxMxIr
      Itk3SXJ2nIR9fSSAVAOsY5mIn1Mt/Tx/ZP9Kh7JqSQkg2dBuVWLp+Bxtnb3ozQ7iwXGURjcO
      gxx/NINNI2MmHKG6dhum9VDvSSQfu/UYVKUz47Ia0WiSaHTFKIQUBcUViOk4CqWcbDpBNJZa
      yVglkiV3KwHmJnpp6hlDpbQy6+8hnEgzPNBNT18vAmpE0kSjD9cTSCJZbaR7AMmGJr0Jlmxo
      UgJINjQpASQbmpQAkg1NSgDJhiYlgGRDkxJAsqGt4wTI4vfP3vfSA72dJDJ3fhaenSaWyt7x
      8y8vs9r4fL6VDmFNUfzht/7zH690EIv1H/7N77Plsec4dfIoLocTrRIC8wlCMxNMBecJzUyg
      Mxs5/t4xDFYHNrOerq4uzHYnwdkZQuE5TCYTgelx/PNJopM3+b8/fY+Dh57grX/4Dg0t1+gY
      8uG1KEBtZGpyjFg6S1/LKWTuOuYme8nItcQic0xNjJBKZwjOx1HL0nT2DeFyOpHJsnz7r/6U
      c63dHNyzCxLT/Ic/+p+0t7fiLd9KKjzFfAoMGjkdXd2oNFqi83MEw3Nk4vMEIklMejWdnV3Y
      HE7kMhnv/PyHXGxsJqM0oZGLhEILHV0mA3PYrSb6ezr54OxFigvyb+2ToG+MUCxDf9MJTt/0
      samykO6uhTInRvqZS2YxG/UrfUhXzJpMAH/Qx9RUEBkZRsdGKHOoON3u4+q5o3R3tqNVpOme
      STE12MtI300mpn1EBYHW9j4unX4HT3kdeUb4u1ffZqy3DZPdQSijZf+OLXT19fPb3/zH3LzR
      hCLuA7WBExdbab/RQoFNQzKdof7mAC0tVwlNDpBJRjhW38lgXxduk4pTH7xDXF9CWZ6Z5qZ6
      Sitrcdhd6FVp/EkTv/vVg5w4X09LWzedXR34R3sQVGpa2/ppvHAMe2EpJz88TW9XF4GZEeKC
      wPWuUWor87l2Y5BtVQWk5QbOHn8VY14F04PtvP7GW5gMIp2TceaDAYLBmVv7JDDcxs/fP8PW
      YgczKT2+/mvEswLXO7o49vbbmPOKKSv0rPQhXTFr8hJIpjTg0qbwR9OkYnNcaW4FoLCkitLy
      ag7u3EpGyKBUKhGRIRMS3Ozoxmw2U1JdR11l8a2yRERcTidFpVULHTzSCZqa6gnHhFvLKJVK
      kMlur/NJ4xGNmcf37qCyZisOk46m1jZqqytIJhMkZ4fIGAqoP3UU/8fXTZNjg7xz/CRVFaWM
      DPWSkavICFnkokAWKCjfzM6aUiZGBhAEGYl0jJudfZhNRkBNJDRKSqGlp7MLd3ENe7dW0d7b
      T7HbSiSeRqlUkM4It/dJdo6+0RB2kwGvx0s6nSKT+rhMo5HtO7fT2NT4iI/W6rYm2wL5fNM4
      rSaGfWGcBiWBuSgGiwNZZqGxnt2sJxBLEw1MozDYKMqz09nRjqe4kkwyhsu5MFZoYHqcaFZN
      ocNAICbgspqYnhhmMjBPbe1mEnMziIkgb14e4MVnHkedjaEx5+Eb7cVgz0dMx3FajcxE0oip
      OFoVhCIJjBYndrOeof5ubO58sqIMm1HN9bZ2bHmFFHtdTE8MM59WoEmH+Ki+HrN7M4d3VeN0
      Ogn4xpmZT1NTVkhHRwcFpdVYjVrSySgd3X2UVW4iGZvH5XQyMTpABjWe/HwG+3owW+0Y1bJb
      +yQamESuM1PsddPV2Ul5dQ29XR0UlFYxOzmEwZFPnt2ygkdzZa3JBFhO2VSMUGIhqR6F6Nws
      faNTbK2tRSGX3XsFyZKSEkCyod3q3qU1P9hgrZ8miiIymXQWkzwa2YxAKpYii4ggE+69wn1Y
      0v6N2WwWhUJx7wUlkoegUCjQG5bmklTq4CtZsy6dPErSXEA8MEF8LoRBo2TLk1+n2HaPoeM/
      ZdkTYGAiyA+OfXb+qfXmv//+UysdwvqnNKDIREl9fBer1lsw6xb3lV72BIgm0twclF7XSx6e
      2WqlorqI149dpqakkgOPLX78I+kSSLJm1e1cmIrpt3/tpQcuQ0oAyZqTFQRisdiSlCUlgGTN
      6mi5QsrgITU3g5ARcJu1ROJxZhNKHE4n2zbde66zNdkWSCIBmIukCc1OMRucJd+ionV0Hk1m
      noQAweDnT2D+aVICSNa0LWV5dA77KSkvwqQ1AbB5+z6eeGzXfa0vXQJJ1qwDRxameP03v79w
      qfPsk3mLLkNKAMmaI5fLUWqWZnrVRSXAQG8XoWgGo1okHBNwuGyYVSBo7eTZTUsSkERyTzIZ
      CoWCkZ4OxgIhymu203+jHo3Fw54dWxZV1KISQKfTojYaSMXmKdaAL51gZibG/j0lCIJANptF
      FO/euDSbXZpGTKtdJrPKOw+vRdk7fxztHaL6C7tpvNSGmEqSCfY+ygTIMDo6hbuwGKU8y3RM
      wO20YnW7mJgJke+yAtyzMZxcvjEayymV0tXlUstmPnvyHOwdxOq0EZwI8tWvfW3RZS7iKCnZ
      99iBWz8Vf+o3+YverETy8A59+YXbP+zc9EBlSKcpyZojZrMkEoklKUtKAMmaI4oiYlYkMDnC
      4MQMRfluuvrHKCwupaLYu6iypBdhkjWrr7cHtcGONuVH7Sih60brosuQagDJmlVTt5vZoVYa
      x9JMx0K89MWnF12GlACSNUspzxLV5HPkcD7xrAaT7v57gt0q4xHEJZE8UjK5DIVSgdWRx07H
      QvOHB+0hLCWAZM2RyeSo1WrGhvqYDoTx5HmY8vmo3bINvWZx75lyJkBqbpKfHL3CoZ2b2FS7
      eUmCljwYwddF8tyfrnQYj5z+5b9f9DqFpZVcbz+OgxDavD2cOnmSl77y/KLKyJkAcqUapRBj
      YMwnJcAKE5PzCGMbe/zO+9HV3saeXXsXvV7OBMgK4LBZSaWl9iyS1a2qqgqrUcGRmmJcxsVf
      0d91jWRyad62SSRLSRAE5ufnAfB6F4Z2V4hxPv5oUXImQO/AEF6vF6XW+OBRSiSPiBwZcnFp
      nt/kfBNsMao5+9FZrra0LclGJJLVKmcaOYxqymp3IAip5Y5HIllWORPg6o0BdtTtoLRw8X0s
      JZK1JOcl0JGnn2Oso4H/9Tc/Wu54JJJllbMGOHfqOM6y7fy758qWOx6JZFnlTIAnv/iVnAv3
      tV5AWbSP1HSP1Clesi4s6llScVERE4BSY5A6xd/DUnWKl/bXp2TvvchiLSIBsgyPTzOnApdW
      6hR/L0vVKT4j7a9bcnWKf+jt3v+icqq23R5/XeoUL1kPpC6Rkg1NSgDJhiZ1iJGsPTIZCtXS
      3BtJCSBZc7KiQCq1NM10pASQrDkKhRK9wcBIXzuC3kM6GgCgushNz1SU4OQwzvwSKkoK7lmW
      lACSNWt01EdcFSQ5Fwag2qWms7OPubkE23bf34yR0k2wZE0rcRoYmomCkCUYDmOweXnxucO8
      +85797W+VANI1qytO3Zgsln5it6Bx2mlZ3CSp/ZV0NnezrPPP3tfZUgJIFlzRDFLOp1GbzQi
      pDPkexfGA91UXY4giFRvWhjIIZ1O37MsKQEka46YFUmn0wipGB3dQ1RXlRCeizI+Po7WaKO2
      qvS+y5LuASRr1tmTJykoLSLqG6Klf5bwjI+yRXz5QUoAyRr2xBe/SEf9Rwz75h64DOkSSLJm
      TU9Ooja5KSktxRRXokwpF/2FlhJAsubIZDJkchlFZVUUlVUB4ATAveiyHigB/FPjBOMCLpsZ
      s0HNbETAaZN6hEmWh0wuR6PVICRj3OwaoLqymJlwkny7ljF/FJNOhUmrJKkwYNLe/Sv+QPcA
      4UgCvZBmwj/NtRs92KzSl1+y/E6deJ/CshKCo528ebqBzpudXLxyiYb6emaHb9I9GblnGQ9U
      A6QzC89XVTodRrNIJJ7Gol+ambslkvv19Je+xKXTJ1DqTVg1CmYFBTo5IFsYPlF5j96J8IAJ
      UFqUTygmYDXp0Go1RKIxQEoAyfKaHB9HbfFQUVZIcZWC2fkMLpMOrVJkKBBl/9Z7X5nI4uGY
      CKA16x4qmE86xcvld7+q8gWjnG4ZfKhtLZoogky2rJv8R09vvecyoigiu0dc2bkJ0u1vL1VY
      90kElnd/aR775/dcJitkERIZZHIZSt3SnHCXLAFgIQnu1Slecpu0vxYnnUojJDKIiCzR2LhL
      +xhUOpiLI+2vxVHI5Xx6XIiGC2dQ6C2Y5TGi9jqmO69SVWjgTOMEFU4tCo8btUzHY3u2fW6Z
      6/RNcIoLH52n9UYHc0E/M8E5ert7icViCKk4SeHuYxdtSKkAPUMBenu7ScSjDA+PkomFmI3e
      u0HZSqmsLCcU8BNP3h5TqKKykpKySvRqDdv37mfOP3HXMtb1izCdTs/4tB8ZoJApmJmcII2c
      svLylQ5tVRsfG8VpVDLhF8gadNgNKx1RbvFkBqNOjbmgkv7eNixON8jV2KxGDKkEHU1XKam+
      +73Ykt4DrB5pxkYDFBZ56OvuICmqsRi0FHjtNN0YYO/Oe9+gbjwC7ddvItcZsVsM2HUwGwdR
      58BjXh1P+LIZgVQstaT3AOs0AXILB6ZBa8Vi0Kx0KJIH8EkCCIJAfImm77qVABLJRrROb4Il
      kvsjJYBkQ1u9CZCOcb2zD4CxifG7Lzo3RUv38CIKF3jtR9+mf3oOIRnh/IXzdA+NAdA/0HfH
      knNTfdzon1pU6HcTDwzfirWn4xqXGxpJCQ837reYFWhtbqB/dPKuy128cvGhtnOt6RLnL5xn
      evbujcxuXL3I3H0/PY1z6UILAEI6Tn1DA/H0wtP+ZGSW6dkIQjLCmG/2gWJuuHyZu4Wi+MNv
      /ec/fqCSH7XwEC/+zr/mxV95mTde/yklbi9aq4Wx0VEikQiTowOkstA9MIxTMccbH13HbDTg
      dtjobr9GWq4nHfEzF4mRyMjRa1X0dbUxn5YTHmzglbN9fPnpI8iDPfzfNy+SGG5mIG4iMz+N
      w6RncGSMuUSGzEwnjWMixRaR9v4xvHkuRga76R2cIJsME4qLKIUYjdeu4/Tko1LICfknaW7r
      xJufz+T4KP29PVhcXmKhKRouvE/XrJJdNSV8+//9Jd48F3/zkzd47snDtLU2ojLa0SgEGpua
      kau0hENBYuEZ5FoTrS1NWF0exMQ8zTe6yPd6kMngr/70jxBNHmYDAbw2A7NzESLxFIM9N4kK
      CmxmA+3Xm3n13WPs2VJNRmlgenIMg1ZFY9NVNEY7P/qLf0vvvJ1NlV7aWhrRW1ykIwGa2zpx
      e7wo5TL+8q/+jOrqLTjdHgJTQ3fsg/hckPGxQUSVifr3f4Fnx2GCI534I2mE2Cyixox/Ygyt
      QUtzUzN2dz7ZxBxNbQ2cP9vF4cd38fPv/xXzSgVnzt/ksT1bmeo8z9m+JNWGIK+c76HIqmGw
      rxej3U08NEXn0CRel5mBnn4GJqZJzvmIixrCIT+jg72ojQ6Ov/ULdh48yPDHxz42O4PabGVi
      fBSDRrmKEyA+S1hhorezB1GIM9x4nfLHD/KDH3yPgZtNyLQa/vpvfoyvp5WynTs4efE6I9dO
      EkkluHBzktMnj6ONDvF+6xS7ttYycfM0r18a4MoHr1NWVcWN4QBPPrYPVdLPQMzAP/+nv8rR
      144xMd2DVQjzQecsp996nZ07yhmPKnnrJz/EIPpp8Sl5+yf/h9B4F30RA+fPnaLQouL9D4/R
      0OHnyL46rjde4MTxX9DuV3L6rR9i0WS42B/i2Gs/wu0wElN72FVTwtXmFn7zt36HG80NRH29
      dAXhxPFjdF+7gMqcxzvH3ma46zqT4QQtV84gqHUc/eAsTRdPolcluNARYtfmMj5quMoXdm3i
      J++epFQb4fsftHKgtpi3jx7lu//wC8q1YS4MxpgcH8KUmiDp3MF7r/6AmlIvbx19n7dPXiJP
      G0Pr2cZI8wnGE0qOHz/B1TNv0NIzSt2eQ1h0Sl595XvMxdKU1+zi2//7T+7YB/6eNpI6M6++
      9gYegwKjRcMr716gq/4DHPkePrzcS0vjR/Rcb0DU6Dl2+iKXT7+Ly5PH8FiMJx7fRdg/whvH
      L7Nv33ZKS8uJz/QzHDVQ65LRPBLlwjs/xmqU8X7bBOeOvk7C10dI7+Lv/88PGO2+SNTg4aPT
      J+lua0BntvOzt45hUIhY1HO8/fGxL/CYuNQb5uq5D7nWcG4VXwIBarMXtzzE9HwKpTrFRx+e
      YGo2BnobLzz3LLvqtrO9toysCCqVirQACrJcb6kHzcLbm195+Zs4rXpgofGZCJQUl1BesxW7
      ceFx6ED3Tf7ur/8flY8dvLVtlUqFKJfd2kEi4kKjOqCiuo492zZz6IlncVkMvH/6NDt37UGe
      jgNw8qML7N6zk1Q8hreshi8+foBkOkEmI5L51FAdifkAp08ewxfLIs8kaay/jNZoI5FMoZAJ
      ZARAZ+U3v/ENlOl5rtRfxWx3EPZP0NQ+isOiBUCTmufGaJhExA/AV772DdJTnUQ1edgtBuLx
      OBq1mnQ6jUqpouHCKfrHZrhw6gTFtdvRqeRUllcRTyTIpOI01F9Bb7Lz9PNfwyrMcK174fLQ
      4SniyOEj2Eyaz+wDUKBSgFxx+53Bwu4ScZTvw9/2Bs7SPSSjIS5fbcZmt5PMCIhCmk8eQ350
      pZWndhTyg384hlIpw+ou4uq5Y7z29lGKC4pwF1XxpScPk0ilmBjpYySURiMmqdm6mx21tTz5
      zJewGhSgUKAgi0L56VgWjn3F3udoffN/ULbrGaJh/yp+DJqOMRZM4DEp6R4LUOG10j4wicNm
      RClXUFjgYXzch0YuoLda6e8fRGd2UFmcT09HK4LGTp5JjtZWyCddFfq62lBZvJQ4DYwFExS6
      7QjJCJeutuApKqe6tJCR0WECXZdpirr48uG9OLQCoZQKbXaevskwu+pqmRgfw6BRoDC5Cfun
      MKplTIQTWHQ6Cgq8zEwMEUqK6LQmyCbxOi1MhlOoM3ME5uNYHV68Tis9HdfwRwT27N6FWg5t
      1xox5ZUSm+zm6Ll6smozv/UrL1JYUICYTdPU2EhhxWbsOhlNbR3U7diFWadBzKZpbmrCkV+O
      U78wZ5tVJ6O5pRWrM4+K4nyutbSgt7moLHTTcqMbl9NBgdvK9Z4R8hw2CjwOrjbdYM/+Xdxo
      bsRRUIleFqN/IsTenduQyxbuAebjAjVbdpKJh+/YBx+8+QbV+/ezo243sdlJrJ5ipoY6Sass
      FNm1/I8//wv+4Ft/gkWRprGpidLqOgzyBANTs1h1FopLvETDM3SP+CnzODG6XKiAsaEe/DEZ
      OzZXMT4+ToHbxrA/hlWVpmNgnF27tuGfDqKRpzG5C/FPjfHGm69xYN9htu3aQ2BqAm9REYMf
      H3u7Jsv//N/f4Q//+L+gSEdXcQKsoPnZ6YUv0Qp18gn6J+joG2H37n1oVau6kr5lcnwcd0EB
      uZr3JSOzjAVTVBR5liWWsfFxCgtyD4w7PztNMKWk2OMApBdhkg3uVosKmWJtnGkkD0785HHr
      x6MqSD6VABqpfcy6l4omyQpZFCoFKu3qaOC20tZ1c+jFyMyN8/rJ6+zbUUPj1as8/exzTIyO
      ohRijCYM7N20cE2pUYiMz8aoKS++R4mS1aj5whliKiMuk5z+8eTqfgy6nJRGFwU2NTPhOGaz
      GT0xAoExGhtacOYXU99QT31DPR032vD5ZlY6XMkDKi4vIxoMIAImi1NKgE+k41HUBjOikMFi
      0DA2NoXCaKe8qobgxCBmvZpERkZ+UTGhUHClw5U8oGQ6g0GvRq6xkpj3PZr+AJlMZslmSpcs
      ndhcDDkyFGrlA98DrLdj+0hqgFgs9iiKlTykpTgu6+3Yrp9UfkANl8+TX1qDSSMjns6SEUSc
      NiM+fxiPIcOE4IR4iDyXHb1eRzwex+/z4S0qwT8xymwkxeZNlSv9Z0hy6OnppazQzZg/gkEN
      WpMDIR5GoTWTTc6TyEgJACwMturzz5JIJtGbTExORPDYtQz7YozMjnOwzspg3xAanYpYNEFa
      liU824ypcBO6tH+lw5fcQyYZIyyomQv3MTUTRme0YNApSMWTUgJoNRrEbBaLxcQ6JNgAAAqM
      SURBVIounUalVhENBxiaSJDvcZCWpxka9pFfXkNf53XqqsvoGZvBm5fH2OQoRpNxpf8EyefQ
      q+V094/gLShClEEmocCWymJxulHKBNK69KO5CQ4Gg2v6RikUCmG1Wu/4LJ2I4J9L4XXbVyiq
      h5eMJjHqDQ98E5zNZgmFQqhU6+cl2iP5lioUCkymtTtkes7YTSbsruWPZSklo8lFLC1+0vr7
      FrlcjlKpXNPH9pet3dO05BETGejtIRTPoFcIRFKwe+fnDzG4VkkJIPkccgx6DXPJhXkg8nQy
      Mvdeac2R3gRLcsumCM8n0ahVqBAIpzLrcgYIqQaQ5CZXU1O7aaWjeOSWNwEmffD+mWXd5H37
      3V9f6QgkK0C6BJJsaFICSDY0KQEkG5qUAJINTXoKJMlJSMXoHRjB4nATDUyhNjsozs+7+0oz
      AUimlifAB2E1g/HO6W6kBJCQzWaRyWR3TNkqU2op9LiYDsWIROex6K23psLNZHK/ElNcbUU2
      vXq7iwr7dyHW3Dk91udeAv3szeMfT4D9WaIoMDQwiJAVGRsZJpMVCfgmmY+v4uyXfK6O7n5O
      n69H/FTjn0w0yOB0mOJCF0Ul1URCs8gVilvtgXL9u9ecxytNkSP2zyRAOp3hOz98jZudfQx8
      PGT4Lxvo6iCWzjAzOoTabKO/t5OZUIrx4WWeAFvy0K7d6OSHr75DYDZELH572iGZSotJI2cu
      koRskpKKymWeOnt5fOYSKJ3JUFVeQl1tNdu2VOdcKZYWqamycaW+n31HSpmfToHaBUKGbDb7
      udWkLCvkHDpvNfi8an29U6tU7N9dx6+++OwdZ3CV1kBp6SfXy+aVCW4ZfCYB9DotTx85cNeV
      KsuK6BucYt9j2xnqaie/tJbg1DAakwO5XH6rmvwM+Wr9+rOm+y88jC2bKtmygbt05jzqYjrK
      hC9I//A0Rw7u/szvdSYbmzfbAKjdsjDlqKUid20hWf0mJiaYGe/HWbKdAvf6PdvnkvMmOBEc
      542j55ErH27qHsnaMNDVSjgpwzd191nV16OcNYDGmk9ZkYtizz2e+0rWBacrj4SoxGqxrHQo
      yy5nDZCK+BkaGeFqS9tyxyNZAZFIhJaGC8wl7ntmu3Uj952fXMtvfPO3yEQfbGY+ydohiiKe
      ojLqdu1jxr/xhnzMmQDtLZfoCukoyHPj8SzPrB6SlZGOBjl18hQut5vte4+sdDjLLuclUN3u
      A8wFpvEHVu9rbcnSUBvtbKosITgzxvSnaoB0IkJXVxeTM7P093QyOuFbwSgfnZw1gAwZWzZv
      YS4WX+54JCvAW1xBMhHDqFff+kyh1uNx2QjN+xDVLpKxMILguHtbIFFc1W+LhWwW8Zdiz/0e
      QK5hLugjI9cuS2CSlTUfWGjHZU3efuwdD/kYnolQU1pAX98EcgV3tAXKaQ20BeKXYr/r689k
      MnG3X0vWE5kKxNuNGdV6My5zllRGQUmRG6XWuKrP7g8qZwJcqb+MKMqw2dbuMICS+zM53EPP
      0CRqlRK9/nZbeZVWT36+/uOf9LlXXgdy3gTv21aFo2w7WtnGbCC2kXhLqnE7zGyqKSMcDK10
      OMsuZwLo8jahjw1jdueebFiyvmzZVEPf4CSlpYUrHcqyy5kAsekuTjf1MtTfs9zxSFZAe3cv
      6aiPwWGpLdDChxojB/fsJCkIyx2PZAWYrA7MBh15hRvvpWfOGkBERn39ZdIpqYvjRjA71kf3
      sI94YuM99ctZA8Qx8LUvPUk0m/s9gCikOPbhWZ7cW0ffZACzxUJoehq1ycLWTVWPNODVouv0
      dbrPXF/pMD7DUZbH4d977r6Xn/X52Hf4CPVNN9Bpl26SlLUiZw3QP9BHOgtB33jOlW62tqBU
      Kekb9bO1bivEfFg8FehViju6RP7yPyG7ei+pcsV7t3/Z7OrsKyGK4ufGnMvw6CCZZIKarXWM
      DA4sc7QrL/eb4Pg8vZPTmJ25nwLV7T6AdWwMj81Ix42buLzlhKZGUZvsG6ZLpFy+OscUk8lk
      i/pbttRUc/LsJUTkHHnm2Vufi0Ka1ptd7Ni2lZ7Om+itboruNS7QGpRzT1VU17DVlo/2Lvux
      qHDhkdm2uoW5tLxO29JHJ3nkommRg4cO5njpKUOrXWgblEolUSSTdx3wAFZ/W6CsmCV7P22B
      Wi9/SEhbjtdp5cDu9TctjuS2yOw0Zy5dpay0jMrabeS7Fk5o2WyWyPwc89F5HM58fLOzyO5W
      u8Oqbwskl8mR/1LsOevxJ57/OupM5I5xYiTrU1FFLY/tqiMSiaJU3W4NigzKy8qRyZSYLQY2
      1dSs6rP7g8qZyqlokLRMS3Y+vNzxSFaALxCkojSfsdFx3NaFp3gKpRqHw7HCkT16uTvF24p5
      4Zl8lMr1OCuU5Jft3XeAaX+IqsL8lQ5l2eXuFB8a570PLzA+Nb3c8UhWQFPDFZRqDan0xmv8
      mDMBFDobXpuWYEi6BNoIPHlOOm+2EQhHVzqUZZczAdLzk1zrnyITn1/ueCQrYCYwi8GkxT85
      tdKhLLucCaC1F5Gd7mZwOrLc8UhWgNmg4+K5i9i9G6/5e84ESAaG2f7Mr2NWr96mC5KlEwhH
      ee65p5iZ2ng1QM6nQA3XewnFBHQW93LHI1lmk8M9+AJhwpE4NXVFKx3OsstZAxzYvQ1BrkWr
      kR6DrnfekmpKC5xoNFq02tvHO5OMceFyPaKY4XpzC509/Yh3KWetylkDyBUisVhyuWORrJBo
      NAoy9R2fKTUL4wKRnsPgKkOWniV7rznCVnlboPseFyiTTJHOZEimNt5gqRuRIGTRaNUL4+Z8
      LBmbZ3rah9FiJzE7hspk2zjjAil0dlwW9cKZQbLumfRaeoYGsXorbzWG0+hNHD78OABet2sl
      w3uk7tqo/fMGxhLSCfoHhxFFaZbI9cBid1FQWEg6sfFOeDlrAH8oQl1dHXKVJudK0VgCl0Gk
      5VoHReVF9Pd2IsoMMDvIpk01jzRgydJKxCJoDBYKi4zk5UvDogAQmQ9x8expzl1uyrmSKKSY
      jirw2LSYTCaUpFCp9ahUSqlL5ApbbJfIWCRMf28Xx46+x9BEYJmjXXk5a4D333kdV8VO3K7c
      zWGjkSjZVApLYeGGnSVyvXSJ9I320djWQ93mWizGjTcYcs499a++9d/uulJ+cdmt/0uzRK5t
      VdsP8Qdb9gPc2SFmg9iYk+NKblEolSg26BzJcI+nQBLJeiclgGRDkxJAck/NV68wMrE+ewdu
      3Is/yX2z2WwE/H4K8pwboy2QRHJbBiEDarVm47QFkkhuU1JVu2mlg3hkpHsAyYYmJYBkQ5MS
      QLKhSQkg2dCkBJBsaEuUAFk6b7bRPzy2NMVJVpH1fWyXJgHSIdSWImQZqUfYupMOoTIXQia5
      LkeFWJoEUJoIT/UTS6/eDi+SB6Q0MTc9QCy1Po/t0rwIk6nYtXfPkhQlWWVkKnbu2b3w3xUO
      5VGQxcMxEUBrXpopMrPZLKFQKPfr8lQaZoNLsh1ElvaIeHKPgieKIrIcr/jjoSix4NKMnSoi
      IluiP0alU2P25J6vLRVLYdQbUKiVqLSLH/Tsk2OrUn3OuoEgJJfuMvjz9v0Ds5pBf+f3/P8D
      3WNPQjEzabAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D4) Employment Change' width='192'>
      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
      h81932+xWM4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Foreigners' width='192'>
      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
      X4X0SopV/x/BBw8kD+yhEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Local' width='192'>
      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
      XGf+YWEWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Seriousness' width='192'>
      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
      42w/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D4*) Trend' width='192'>
      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
      xE4mVQ+QiIUZHRvH5fFRWFxyyyhgJtLZDs53WjnSYuIPP7MHySwSdEeicZ45do2OATufv2c9
      TZVTByhLqQCv/uo5corKsLsC3P/hg3MSdilNIbyBCFf7x2g3jzMw6iFLo6S5Op91VfkLUoh+
      q4vvvnSJrzy4Je2TsJVIKgWIB+z88o3zlObrSCiy2bN13ZzqTHc7ONJiomNgnN99bOeU5whC
      ktfO93HkoolH9jWyd335jPWmHAI57SOE4iLcwZW5FHkdvUbB3vXlN27U4w/TbhrntfN9WMYn
      yNIqaa7Kp7k6n/L86XN0XedUu4VXzvQseNy52gm4RvCGItjGIkg1qduBZaCfKHJqKstwjNlw
      OBzklq0hVz99TrD5cHhrNW5/mB+/3srnP3zrqtT5TivPn+hkd3MZ3/jK4VnPl9KeImklGcM5
      vSHaTeO0m8exjE9g1KumVAhBSPLs8WsM272LMtldyUw1CZ4JIRHjWmcvzc2TK4Xmvl5Kq+uQ
      iRevHfzHCy2U5eu5f9ekzVO/1cWTb01OcB+9q3HOS+a3td1yjl7FXRsrbuwqOr0h2vrH+OU7
      XVjGvRQaNTRX5dNYmcczb3dQkqvnf31i1zJLvXro6e6mvnHt5D+EKDFkyBY50M5XHtzC3z95
      CqlETL9tMiHfFz68gfKC2fXwHyStPUAikcDn86HVro6kbWOuAB2DdrqGnGypL2RH4+o1zFsI
      3gkP4mRizj3AQH83CYma/BwDKrkEQapCJgZBEBa1HURiCZ58q4NtDUWsnWaCOxtuKIBYnp7x
      bigUQqW6c8fOq5FIODT55RaJEcvSM35fLe3gxhAoneO1lTIHWI0IQpKuIQcJIcm66qWJPOSK
      x0CITzrFL/DdJZNJBEFAEATU6pUfaeS2ngOsJhIJgdPtFl4600NdaQ7haJzXzvfx6x9ZHF+C
      xUIkEq0q19h5SWgftTI6aqemeSNJnx3ziJ2s7DzKijIZUeZKKBLjtfP9nO2wsKOplP/z+f3o
      NZPDkO4hB3//1Gm2N5bw0d31s9oEyjA3UiqAEPXz0pEzbF7XQGnZrbbrOq2WvsAQEjHEE1HC
      0RjKSDQTFWIOOCaC/Op0LwOjHg5urOAvH78L6bsN/Przqyk28FeP38UrZ3v5P987yqc/tHbB
      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
      q/GMnY0dAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      YmwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='JL Story' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
