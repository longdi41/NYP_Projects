<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;2008&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2015&quot;' />
        </members>
      </column>
      <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Arts&quot;' />
          <member value='&quot;Built Environment, Engineering &amp; Maritime&quot;' />
          <member value='&quot;Business&quot;' />
          <member value='&quot;Communication&quot;' />
          <member value='&quot;Design&quot;' />
          <member value='&quot;Digital Media &amp; Design&quot;' />
          <member value='&quot;Engineering&quot;' />
          <member value='&quot;Food &amp; Beverages&quot;' />
          <member value='&quot;Humanities&quot;' />
          <member value='&quot;Information Technology&quot;' />
          <member value='&quot;Law&quot;' />
          <member value='&quot;Science&quot;' />
          <member value='&quot;Sciences&quot;' />
          <member value='&quot;Sports&quot;' />
        </members>
      </column>
      <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Institute of Technical Education&quot;' />
          <member value='&quot;Junior Colleges / Centralised Institute&quot;' />
          <member value='&quot;Others&quot;' />
          <member value='&quot;Polytechnics&quot;' />
          <member value='&quot;Primary Schools&quot;' />
          <member value='&quot;Secondary Schools&quot;' />
          <member value='&quot;Universities&quot;' />
        </members>
      </column>
      <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
        <calculation class='tableau' formula='1960' />
        <members>
          <member value='1960' />
          <member value='1970' />
          <member value='1980' />
          <member value='1990' />
          <member value='2000' />
          <member value='2006' />
          <member value='2007' />
          <member value='2008' />
          <member value='2009' />
          <member value='2010' />
          <member value='2011' />
          <member value='2012' />
          <member value='2013' />
          <member value='2014' />
          <member value='2015' />
        </members>
      </column>
      <column caption='Zoom in?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
        <calculation class='tableau' formula='&quot;Yes&quot;' />
        <members>
          <member value='&quot;Yes&quot;' />
          <member value='&quot;No&quot;' />
        </members>
      </column>
      <column alias='Yes' caption='ColourBlind?' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot; &quot;'>
        <calculation class='tableau' formula='&quot; &quot;' />
        <aliases>
          <alias key='&quot; &quot;' value='Yes' />
          <alias key='&quot;  &quot;' value='No' />
        </aliases>
        <members>
          <member alias='Yes' value='&quot; &quot;' />
          <member alias='No' value='&quot;  &quot;' />
        </members>
      </column>
      <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
        <calculation class='tableau' formula='&quot;Yes&quot;' />
        <members>
          <member value='&quot;Yes&quot;' />
          <member value='&quot;No&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='localhost' inline='true' name='federated.0wg68ks0l3tf56178a15818qjvzo' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ta1ns41yil7m011sjulg15s0ypc'>
            <connection class='mysql' dbname='yuxuan_database' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ta1ns41yil7m011sjulg15s0ypc' name='uni_salaries_2015_csv' table='[uni_salaries_2015_csv]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>sNumber of Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sNumber of Years]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>sNumber of Years</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Courses</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Courses]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Courses</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Universities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Universities]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Universities</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Salaries]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Salaries</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Uni Courses' datatype='string' name='[uniCourses]' role='dimension' type='nominal' />
      <column caption='Uni Starting Salaries' datatype='integer' datatype-customized='true' name='[uniStartingSalaries]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Uni Courses'>
          <field>[uniCourses]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009) Uni employment rate' inline='true' name='federated.0hsjz251ee7n421e5lowp1lowhxi' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009) Uni employment rate' name='textscan.1e7b9qe10ewxiy1a8ly031m3hb69'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2009) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1e7b9qe10ewxiy1a8ly031m3hb69' name='(2009) Uni employment rate.csv' table='[(2009) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty' ordinal='1' />
            <column datatype='string' name='Instituition' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2009) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty]</local-name>
            <parent-name>[(2009) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[(2009) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2009) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year :ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Faculty:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Arts &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Design &amp; Environment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sciences&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Computing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Information Systems&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2010) Uni employment rate' inline='true' name='federated.1jaow880gn7t0x13wr7qj04b95n2' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2010) Uni employment rate' name='textscan.0o10ozd1vcnlom10sm7m91dvqe6q'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2010) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0o10ozd1vcnlom10sm7m91dvqe6q' name='(2010) Uni employment rate.csv' table='[(2010) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty ' ordinal='1' />
            <column datatype='string' name='Instituition' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2010) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty ]</local-name>
            <parent-name>[(2010) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[(2010) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2010) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2010) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Faculty' datatype='string' name='[Faculty ]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year :ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2011) Uni employment rate' inline='true' name='federated.1kpzf0r19eaq3019aphop0gy8x4v' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2011) Uni employment rate' name='textscan.1sgvx600iiyc241fj5ret0qjwqgx'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2011) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1sgvx600iiyc241fj5ret0qjwqgx' name='(2011) Uni employment rate.csv' table='[(2011) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Faculty ' ordinal='1' />
            <column datatype='string' name='Instituition' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(2011) Uni employment rate.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty ]</local-name>
            <parent-name>[(2011) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[(2011) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2011) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2011) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Faculty' datatype='string' name='[Faculty ]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2012) Uni employment rate' inline='true' name='federated.0mx5tuc1f6p0wz1enrm060vs9liy' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2012) Uni employment rate' name='textscan.05mmgjc0mu62kv1a8mdua1u7oxqx'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2012) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.05mmgjc0mu62kv1a8mdua1u7oxqx' name='(2012) Uni employment rate.csv' table='[(2012) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty ' ordinal='1' />
            <column datatype='string' name='Instituition ' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2012) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty ]</local-name>
            <parent-name>[(2012) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition ]</local-name>
            <parent-name>[(2012) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition </remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2012) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2012) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Faculty' datatype='string' name='[Faculty ]' role='dimension' type='nominal' />
      <column caption='Instituition' datatype='string' name='[Instituition ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition ]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2013) Uni employment rate' inline='true' name='federated.0hakiaa0xii0tk19p6c721t5xpxc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2013) Uni employment rate' name='textscan.18r3vte11pm9l91gspdyw1un2xn5'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2013) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18r3vte11pm9l91gspdyw1un2xn5' name='(2013) Uni employment rate.csv' table='[(2013) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty ' ordinal='1' />
            <column datatype='string' name='Instituition ' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2013) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty ]</local-name>
            <parent-name>[(2013) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition ]</local-name>
            <parent-name>[(2013) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition </remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2013) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2013) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Faculty' datatype='string' name='[Faculty ]' role='dimension' type='nominal' />
      <column caption='Instituition' datatype='string' name='[Instituition ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2014) Uni employment rate' inline='true' name='federated.0h9bu1b1lzys611byjmx81roeyfc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2014) Uni employment rate' name='textscan.11nabaa164cgph11tsx9m1l95e9p'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES/Uni employment rate' filename='(2014) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11nabaa164cgph11tsx9m1l95e9p' name='(2014) Uni employment rate.csv' table='[(2014) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty ' ordinal='1' />
            <column datatype='string' name='Instituition ' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty ]</local-name>
            <parent-name>[(2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition ]</local-name>
            <parent-name>[(2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition </remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2014) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Faculty' datatype='string' name='[Faculty ]' role='dimension' type='nominal' />
      <column caption='Instituition' datatype='string' name='[Instituition ]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2015) Employment rate of graduates under the different sectors' inline='true' name='federated.0aao5yq0bubr3t12gmra5090746a' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2015) Employment rate of graduates under the different sectors' name='textscan.11frl6l039ynj3177u5qs1rc34dz'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2015) Employment rate of graduates under the different sectors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11frl6l039ynj3177u5qs1rc34dz' name='(2015) Employment rate of graduates under the different sectors.csv' table='[(2015) Employment rate of graduates under the different sectors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Sector' ordinal='1' />
            <column datatype='real' name='Employment rate ' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(2015) Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[(2015) Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate ]</local-name>
            <parent-name>[(2015) Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Employment rate </remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2015) Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment rate' datatype='real' name='[Employment rate ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Sector)' hidden='true' name='[Action (Sector)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (GDP_Graph)' inline='true' name='federated.1nxkhdo0ocejm016tys6w0avnos1' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP_Graph' name='excel-direct.03mpa1t0emg35k11uzk8g0phnuvn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\yanqing1606\Desktop\Year2_Sem2\ITP232\TABLEAU GRAPHS\HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES\GDP_Graph.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.03mpa1t0emg35k11uzk8g0phnuvn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B3:no:A1:B3:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='real' name='GDP (USD Dollars in Billions)' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (USD Dollars in Billions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (USD Dollars in Billions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP (USD Dollars in Billions)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B3:no:A1:B3:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (SG GDP Growth rate_2014)' inline='true' name='federated.1awztta088za4b111wcgu1a3fr4q' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SG GDP Growth rate_2014' name='excel-direct.1di8rw60t33xh81gzou4c14jhwp9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\yanqing1606\Desktop\Year2_Sem2\ITP232\TABLEAU GRAPHS\HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES\ZOOM IN OF GDP UNDER QUARTERS\SG GDP Growth rate_2014.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1di8rw60t33xh81gzou4c14jhwp9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C5:no:A1:C5:0' header='yes' outcome='6'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Quarter' ordinal='1' />
            <column datatype='real' name='GDP growth rate (%)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP growth rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP growth rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP growth rate (%)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C5:no:A1:C5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[GDP growth rate (%)]' role='measure' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Quarter]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[GDP growth rate (%)]' derivation='Sum' name='[sum:GDP growth rate (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Quarter)' hidden='true' name='[Action (Quarter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Quarter]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1awztta088za4b111wcgu1a3fr4q].[sum:GDP growth rate (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1awztta088za4b111wcgu1a3fr4q].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='SG GDP Growth rate_2015' inline='true' name='federated.0qv0b5h0nbylbj13ir00z0yoiuak' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SG GDP Growth rate_2015' name='textscan.0gmw1i30l65ojy1bi5h080mz0il2'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES/ZOOM IN OF GDP UNDER QUARTERS' filename='SG GDP Growth rate_2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0gmw1i30l65ojy1bi5h080mz0il2' name='SG GDP Growth rate_2015.csv' table='[SG GDP Growth rate_2015#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Quarter ' ordinal='1' />
            <column datatype='real' name='GDP Growth rate (%)' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[SG GDP Growth rate_2015.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Quarter ]</local-name>
            <parent-name>[SG GDP Growth rate_2015.csv]</parent-name>
            <remote-alias>Quarter </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP Growth rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP Growth rate (%)]</local-name>
            <parent-name>[SG GDP Growth rate_2015.csv]</parent-name>
            <remote-alias>GDP Growth rate (%)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SG GDP Growth rate_2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Quarter' datatype='string' name='[Quarter ]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
      <group caption='Action (Quarter)' hidden='true' name='[Action (Quarter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Quarter ]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year :ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Employment rate of graduates under the different sectors' inline='true' name='federated.0kxs8rm08x4qtd12aroje1auglvb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Employment rate of graduates under the different sectors' name='textscan.0250ssy1mh4tbv126zlrv1pzeknj'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='Employment rate of graduates under the different sectors.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0250ssy1mh4tbv126zlrv1pzeknj' name='Employment rate of graduates under the different sectors.csv' table='[Employment rate of graduates under the different sectors#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Sector' ordinal='1' />
            <column datatype='real' name='Employment rate ' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate ]</local-name>
            <parent-name>[Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias>Employment rate </remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Employment rate of graduates under the different sectors.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment rate' datatype='real' name='[Employment rate ]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Sector)' hidden='true' name='[Action (Sector)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009) Compositions of GDP' inline='true' name='federated.0v7mh820mxpvr70zokk5x0p4zad5' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009) Compositions of GDP' name='textscan.0odqbux1wk5udp1dktiuv15jorn0'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2009) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0odqbux1wk5udp1dktiuv15jorn0' name='(2009) Compositions of GDP.csv' table='[(2009) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2009) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2009) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2009) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2012) Compositions of GDP' inline='true' name='federated.0tktczx1cfz7vd17x28h31qu5zge' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2012) Compositions of GDP' name='textscan.1d1j9ua1przf7b0zsa6400n5eetp'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2012) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1d1j9ua1przf7b0zsa6400n5eetp' name='(2012) Compositions of GDP.csv' table='[(2012) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2012) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2012) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2012) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2012) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2013) Compositions of GDP' inline='true' name='federated.11b4q0f1u3h1f411iysaw16umi31' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2013) Compositions of GDP' name='textscan.0de6rkb0lokoo0169v0at1rd10jl'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2013) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0de6rkb0lokoo0169v0at1rd10jl' name='(2013) Compositions of GDP.csv' table='[(2013) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2013) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2014) Compositions of GDP' inline='true' name='federated.005p8dq0q5vjs213lw7r70pa8w9x' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2014) Compositions of GDP' name='textscan.10gkkbz0h4jhoy1bvy0xy1xi1bog'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2014) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.10gkkbz0h4jhoy1bvy0xy1xi1bog' name='(2014) Compositions of GDP.csv' table='[(2014) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2014) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2014) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2014) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2014) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2011) Compositions of GDP' inline='true' name='federated.14x57hq03yjnvg1gij6aq18zlkqt' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2011) Compositions of GDP' name='textscan.11cfrxc0n3rko5192qbbn0nxrnk7'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2011) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11cfrxc0n3rko5192qbbn0nxrnk7' name='(2011) Compositions of GDP.csv' table='[(2011) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2011) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2011) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2011) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2011) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2010) Compositions of GDP' inline='true' name='federated.12vtdx7135pjhx1f1k2ig050wqkt' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2010) Compositions of GDP' name='textscan.1rvx1bh0oc8ypo1ebg5og1vepj9v'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2010) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rvx1bh0oc8ypo1ebg5og1vepj9v' name='(2010) Compositions of GDP.csv' table='[(2010) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2010) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2010) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2010) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2010) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2014) Uni employment rate' inline='true' name='federated.07ltik50j7nhp91870ouh0887bny' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009-2014) Uni employment rate' name='textscan.1q5mf9x1i4cvhr1bfrshz0vlpj58'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES' filename='(2009-2014) Uni employment rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1q5mf9x1i4cvhr1bfrshz0vlpj58' name='(2009-2014) Uni employment rate.csv' table='[(2009-2014) Uni employment rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Faculty' ordinal='1' />
            <column datatype='string' name='Instituition' ordinal='2' />
            <column datatype='real' name='Employment rate (%)' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2009-2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Faculty]</local-name>
            <parent-name>[(2009-2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Faculty</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[(2009-2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate (%)]</local-name>
            <parent-name>[(2009-2014) Uni employment rate.csv]</parent-name>
            <remote-alias>Employment rate (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009-2014) Uni employment rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Year ]' role='dimension' type='ordinal' />
      <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Instituition,Year)' hidden='true' name='[Action (Instituition,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
          <groupfilter function='level-members' level='[Year ]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year ]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Faculty:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Design &amp; Environment&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Arts &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Sciences&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Information Systems&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Computing&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2013) Real GDP by Industry' inline='true' name='federated.00ft8vg1bxlnh318l8xxq1scp5yr' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009-2013) Real GDP by Industry' name='textscan.0h5xtqp1l8oxit152s8yf0t9l3fc'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2009-2013) Real GDP by Industry.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0h5xtqp1l8oxit152s8yf0t9l3fc' name='(2009-2013) Real GDP by Industry.csv' table='[(2009-2013) Real GDP by Industry#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Sector' ordinal='1' />
            <column datatype='integer' name='Real GDP ' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(2009-2013) Real GDP by Industry.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[(2009-2013) Real GDP by Industry.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Real GDP ]</local-name>
            <parent-name>[(2009-2013) Real GDP by Industry.csv]</parent-name>
            <remote-alias>Real GDP </remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009-2013) Real GDP by Industry.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Real GDP' datatype='integer' name='[Real GDP ]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Business Services&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Information &amp; Communications&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Wholesale Retail trade&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Transportation &amp; Storage&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Finance &amp; Insurance&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2014) SG GDP Per Capita' inline='true' name='federated.07ljstm0zbw8zx1g7to491lpofyg' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009-2014) SG GDP Per Capita' name='textscan.1tzc5zo13omse81dsujdh0wcu6sr'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2009-2014) SG GDP Per Capita.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1tzc5zo13omse81dsujdh0wcu6sr' name='(2009-2014) SG GDP Per Capita.csv' table='[(2009-2014) SG GDP Per Capita#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='real' name='SG GDP Per Capita' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2009-2014) SG GDP Per Capita.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SG GDP Per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SG GDP Per Capita]</local-name>
            <parent-name>[(2009-2014) SG GDP Per Capita.csv]</parent-name>
            <remote-alias>SG GDP Per Capita</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009-2014) SG GDP Per Capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2014) Compositions of GDP' inline='true' name='federated.1gric2z0hpt1rr17qynlq083y0lc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009-2014) Compositions of GDP' name='textscan.1ojmtau0ai3kxi1g172pl0ahdxch'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/HOW DOES GDP AFFECT EMPLOYMENT RATE OF POLY &amp; UNI GRADUATES' filename='(2009-2014) Compositions of GDP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ojmtau0ai3kxi1g172pl0ahdxch' name='(2009-2013) Compositions of GDP.csv' table='[(2009-2013) Compositions of GDP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
            <column datatype='integer' name='Year ' ordinal='0' />
            <column datatype='string' name='Type of composition' ordinal='1' />
            <column datatype='integer' name='% of composition' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[(2009-2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2009-2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2009-2013) Compositions of GDP.csv]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[(2009-2013) Compositions of GDP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Type of composition1' datatype='string' name='[Type of composition]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <column-instance column='[% of composition]' derivation='None' name='[none:% of composition:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Type of composition]' derivation='None' name='[none:Type of composition:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
      <group caption='Action (% Of Composition)' hidden='true' name='[Action (% Of Composition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:% of composition:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year :ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type of composition:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumption&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Total Trade&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Investment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Government expenditure&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2014) Poly employment rate' inline='true' name='federated.07sq6kx1f36m921c099gx0jm5w5f' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2009-2014) Poly employment rate' name='textscan.0a6ahbt0wh1kec18rq29f1kjr77a'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS/ZOOM IN OF % OF EMPLOYMENT OF POLY &amp; UNI GRADUATES BY COURSES' filename='(2009-2014) Poly employment rate.csv' password='' server='' />
          </named-connection>
          <named-connection caption='127.0.0.1' name='mysql.0q8d2i90u7htb81gys65217ga6t4'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0q8d2i90u7htb81gys65217ga6t4' name='yq_(2009-2014) poly employment rate' table='[yq_(2009-2014) poly employment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of employment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of employment]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>% of employment</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Employment' datatype='real' name='[% of employment ]' role='measure' type='quantitative' />
      <column caption='% Of Employment1' datatype='real' name='[% of employment]' role='measure' type='quantitative' />
      <column caption='Course1' datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column caption='Instituition1' datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Instituition,Year)' hidden='true' name='[Action (Instituition,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Uni grads VS Poly grads employment rate_V1 (CSV Version)' inline='true' name='federated.13wju6p01fqyst16cevmf0yiow6c' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Uni grads VS Poly grads employment rate_V1 (CSV Version)' name='textscan.01mkcgr1d3mgs617n8z6916nr2sq'>
            <connection class='textscan' directory='C:/Users/yanqing1606/Desktop/Year2_Sem2/ITP232/TABLEAU GRAPHS/% OF EMPLOYMENT RATES OF GRADUATES FROM INSTITUITIONS' filename='Uni grads VS Poly grads employment rate_V1 (CSV Version).csv' password='' server='' />
          </named-connection>
          <named-connection caption='127.0.0.1' name='mysql.107aaz40uw6xs80zubqoz1ugbtft'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.107aaz40uw6xs80zubqoz1ugbtft' name='yq_uni grads vs poly grads employment rate_v1 (csv version)' table='[yq_uni grads vs poly grads employment rate_v1 (csv version)]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Institution]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Institution</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Proportion of Employment of Graduates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Proportion of Employment of Graduates]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Proportion of Employment of Graduates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Institution1' datatype='string' name='[Institution]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Institution]' derivation='None' name='[none:Institution:nk]' pivot='key' type='nominal' />
      <group caption='Action (Institution1)' hidden='true' name='[Action (Institution1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Institution]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Institution:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Polytechnic&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;University&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='itp232_teamevians' inline='true' name='federated.1fycm7f0xowcgq194uvya16mxunz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0g6wqfa0rs3cya1bz8hy418o089g'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='poly_lastest_latest15+ (tiff_database)' inline='true' name='federated.09icqm80uif4b614cplc11a25mev' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0io3gey03rofvl13wfx5f0po47s0'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0io3gey03rofvl13wfx5f0po47s0' name='poly_lastest_latest15' table='[poly_lastest_latest15]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Courses</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Courses]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>Courses</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentNumber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EmploymentNumber]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>EmploymentNumber</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentPercentage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EmploymentPercentage]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>EmploymentPercentage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment %' datatype='real' datatype-customized='true' name='[Calculation_1148699410958741504]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='FLOAT([EmploymentPercentage])' />
      </column>
      <column caption='poly lookup' datatype='real' name='[Calculation_1668865169100603392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup(POWER(ZN(SUM([EmploymentPercentage]))/ &#13;&#10;LOOKUP(ZN(SUM([EmploymentPercentage])), FIRST()),ZN(1/(INDEX()-1))) - 1,last())'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169154719748]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Courses]),lower([Parameters].[Parameter 1 1]))' />
      </column>
      <column caption='CategoriesC' datatype='string' name='[Calculation_1668865169175724039]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Categories]+[Parameters].[Parameter 3]' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1668865169207697422]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
      <column caption='Courses1' datatype='string' name='[Courses]' role='dimension' type='nominal' />
      <column caption='Employment Number' datatype='string' name='[EmploymentNumber]' role='dimension' type='nominal' />
      <column caption='Employment Percentage' datatype='integer' datatype-customized='true' name='[EmploymentPercentage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_1668865169175724039]' derivation='None' name='[none:Calculation_1668865169175724039:nk]' pivot='key' type='nominal' />
      <group caption='Action (Categories1)' hidden='true' name='[Action (Categories1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Categories, Courses'>
          <field>[Categories]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[cnt:NP:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[cnt:TP:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[sum:TP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[avg:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[cnt:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[ctd:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[min:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[std:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09icqm80uif4b614cplc11a25mev].[var:NYP:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1668865169175724039:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;APPLIED SCIENCES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HYBRID COURSES&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;HEALTH SCIENCES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BUSINESS, MANAGEMENT, DESIGN &amp; OTHERS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;INFORMATION &amp; DIGITAL TECHNOLOGIES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BUILT ENVIRONMENT, ENGINEERING &amp; MARITIME&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
        <column alias='Yes' caption='ColourBlind?' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot; &quot;'>
          <calculation class='tableau' formula='&quot; &quot;' />
          <aliases>
            <alias key='&quot; &quot;' value='Yes' />
            <alias key='&quot;  &quot;' value='No' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='nsvsuni (itp232_teamevians) (2)' inline='true' name='federated.1ec8u961j5p43p1b2kedp13k27wh' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0vb69wu1debbv21580epe0f903d9'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0vb69wu1debbv21580epe0f903d9' name='nsvsuni' table='[nsvsuni]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='polyvsus' inline='true' name='federated.1me4xdb1c8stg917qc3ct1qp6npe' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0m5fas30rwtcbj14yhv6d0jrbswf'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0m5fas30rwtcbj14yhv6d0jrbswf' name='polyvsus' table='[polyvsus]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='graduate-employment-survey-ntu-nus-sit-smu-sutd (tiff_database)' inline='true' name='federated.0lo13ug1m3jywd16yfquh01ell4k' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0azavxv0s7qmis1977gpv0exmcme'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0azavxv0s7qmis1977gpv0exmcme' name='nsgraduates' table='[nsgraduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_uni_enrolment (itp232_teamevians)' inline='true' name='federated.117ra73191xfaa12tkrf108iwowf' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.100l69b1u6bj9d15i924w1vq84ql'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.100l69b1u6bj9d15i924w1vq84ql' name='yx_uni_enrolment' table='[yx_uni_enrolment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Universities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Universities]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Universities</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Enrolment]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Enrolment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253777412]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='poly_lastest_latest15 (itp232_teamevians)' inline='true' name='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.065lkxh1uk7kwi17rljui11tbco0'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.065lkxh1uk7kwi17rljui11tbco0' name='poly_lastest_latest15' table='[poly_lastest_latest15]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Courses</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Courses]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>Courses</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentNumber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EmploymentNumber]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>EmploymentNumber</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentPercentage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EmploymentPercentage]</local-name>
            <parent-name>[poly_lastest_latest15]</parent-name>
            <remote-alias>EmploymentPercentage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169154719748]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Courses]),lower([Parameters].[Parameter 1 1]))' />
      </column>
      <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
      <column caption='Employment Number' datatype='string' name='[EmploymentNumber]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Employment Percentage' datatype='integer' datatype-customized='true' name='[EmploymentPercentage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
      <group caption='Action (Categories)' hidden='true' name='[Action (Categories)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories1)' hidden='true' name='[Action (Categories1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories1]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Categories, Courses'>
          <field>[Categories]</field>
          <field>[Courses]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[cnt:NP:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[cnt:TP:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[sum:TP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[avg:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[cnt:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[ctd:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[min:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[std:NYP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[var:NYP:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Categories:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BUILT ENVIRONMENT, ENGINEERING &amp; MARITIME&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;INFORMATION &amp; DIGITAL TECHNOLOGIES&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;APPLIED SCIENCES&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HEALTH SCIENCES&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;HYBRID COURSES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BUSINESS, MANAGEMENT, DESIGN &amp; OTHERS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='uni graduates(ver2) (itp232_teamevians)' inline='true' name='federated.0fbq8zp1brsd8y10kpunt0fo0pzo' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.01wyc6m1jpbnsa1cd9tz81kb05o1'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.01wyc6m1jpbnsa1cd9tz81kb05o1' name='uni graduates(ver2)' table='[uni graduates(ver2)]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Degree]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>Degree</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NTU</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NTU]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>NTU</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NUS]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>NUS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMU</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SMU]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>SMU</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentNo</remote-name>
            <remote-type>3</remote-type>
            <local-name>[EmploymentNo]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>EmploymentNo</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate(%)]</local-name>
            <parent-name>[uni graduates(ver2)]</parent-name>
            <remote-alias>EmploymentRate(%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169157484549]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Degree]),lower([Parameters].[Parameter 1 1]))' />
      </column>
      <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
      <column caption='Employment No' datatype='integer' name='[EmploymentNo]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Categories, Degree'>
          <field>[Categories]</field>
          <field>[Degree]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Categories:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='polyvsus (itp232_teamevians)' inline='true' name='federated.1nt76jc1qmm4hc1fywto017ejw4y' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1mh2wmr1hvdsvx17o81yl1hqoqqx'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1mh2wmr1hvdsvx17o81yl1hqoqqx' name='polyvsus' table='[polyvsus]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[polyvsus]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Zoomed in value' datatype='integer' name='[Calculation_1668865169169948678]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 2]=&apos;No&apos;,0,NULL)' />
      </column>
      <column caption='Latest Rate' datatype='real' name='[Calculation_1668865169185513480]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF(LAST()=0,SUM([EmploymentRate]),NULL)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Last Year Volume' datatype='real' name='[Calculation_1668865169190776841]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(sum(iif([Last 2 Year (copy)],[EmploymentRate],null))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max Year' datatype='date' name='[Calculation_1668865169193033738]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{MAX([Year])}' />
      </column>
      <column caption='Last 2 Year' datatype='boolean' name='[Calculation_1668865169193791499]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&lt;2' />
      </column>
      <column caption='Change new' datatype='real' name='[Calculation_1668865169201549325]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='([Calculation_1668865169190776841]-[Last Year Volume (copy)])/100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column caption='Last Year' datatype='boolean' name='[Last 2 Year (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&lt;1' />
      </column>
      <column caption='Prior Year' datatype='boolean' name='[Last Year (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&lt;2' />
      </column>
      <column caption='Prior Year Volume' datatype='real' name='[Last Year Volume (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(sum(iif([Last Year (copy)],[EmploymentRate],null))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
      <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
      <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1668865169185513480]' derivation='User' name='[usr:Calculation_1668865169185513480:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Schools:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Poly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nt76jc1qmm4hc1fywto017ejw4y].[pcdf:sum:EmploymentRate:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nt76jc1qmm4hc1fywto017ejw4y].[pcdf:sum:EmploymentRate:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Zoom in?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='employmentratediffuniandpoly (itp232_teamevians)' inline='true' name='federated.099aqpr0lgdpc91b9vb291yzdvc1' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.156hcpr1wywru718ogcfp1hntarf'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.156hcpr1wywru718ogcfp1hntarf' name='employmentratediffuniandpoly' table='[employmentratediffuniandpoly]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>School</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>School</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate(%)]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>EmploymentRate(%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
      <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='Day' name='[dy:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Hour' name='[hr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Quarter' name='[qr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Categories,School,YEAR(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories1]' />
          <groupfilter function='level-members' level='[School1]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories1]' />
          <groupfilter function='level-members' level='[School1]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
          <groupfilter function='level-members' level='[qr:Year:ok]' />
          <groupfilter function='level-members' level='[mn:Year:ok]' />
          <groupfilter function='level-members' level='[dy:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year),HOUR(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year),HOUR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories1]' />
          <groupfilter function='level-members' level='[School1]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
          <groupfilter function='level-members' level='[qr:Year:ok]' />
          <groupfilter function='level-members' level='[mn:Year:ok]' />
          <groupfilter function='level-members' level='[dy:Year:ok]' />
          <groupfilter function='level-members' level='[hr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories1,School1,YEAR(Year))' hidden='true' name='[Action (Categories1,School1,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
          <groupfilter function='level-members' level='[School]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Year:ok]' palette='superfishel_stone_10_0' type='palette' />
          <encoding attr='color' field='[none:School:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Degree&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poly&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='employmentratediffuniandpoly (tiff_database) (3)' inline='true' name='federated.0p5kc0v0hal63e17bwk1w1cpoi5f' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.16m3gb61t6i1h111bj58e1byf4qr'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.16m3gb61t6i1h111bj58e1byf4qr' name='employmentratediffuniandpoly' table='[employmentratediffuniandpoly]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>School</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>School</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate(%)]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>EmploymentRate(%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[employmentratediffuniandpoly]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[School]' derivation='Attribute' name='[attr:School:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Day' name='[dy:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Hour' name='[hr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Month' name='[mn:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Quarter' name='[qr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Categories,School,YEAR(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
          <groupfilter function='level-members' level='[School]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
          <groupfilter function='level-members' level='[School]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
          <groupfilter function='level-members' level='[qr:Year:ok]' />
          <groupfilter function='level-members' level='[mn:Year:ok]' />
          <groupfilter function='level-members' level='[dy:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year),HOUR(Year))' hidden='true' name='[Action (Categories,School,YEAR(Year),QUARTER(Year),MONTH(Year),DAY(Year),HOUR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Categories]' />
          <groupfilter function='level-members' level='[School]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
          <groupfilter function='level-members' level='[qr:Year:ok]' />
          <groupfilter function='level-members' level='[mn:Year:ok]' />
          <groupfilter function='level-members' level='[dy:Year:ok]' />
          <groupfilter function='level-members' level='[hr:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Year:ok]' palette='superfishel_stone_10_0' type='palette' />
          <encoding attr='color' field='[attr:School:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Degree&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poly&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:School:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Degree&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poly&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='nsgraduates (itp232_teamevians)' inline='true' name='federated.03a2gm5005la8x1g29pcg0fsk740' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.194sixc0mc2bce17v6lap1c6u180'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.194sixc0mc2bce17v6lap1c6u180' name='nsgraduates' table='[nsgraduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[nsgraduates]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column caption='Graduates1' datatype='string' name='[Graduates]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='nsgraduates2 (itp232_teamevians)' inline='true' name='federated.15aa7e10nj99k31gbnm4r08ms0wj' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.14pnr7c0vg8y2g1e4jvzm056a0qb'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.14pnr7c0vg8y2g1e4jvzm056a0qb' name='nsgraduates2' table='[nsgraduates2]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[nsgraduates2]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[nsgraduates2]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nsgraduates2]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[nsgraduates2]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='nsvsuni (itp232_teamevians)' inline='true' name='federated.1upimfi1a3kygl155wgxq1lxxv99' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1srrbzq13vukv910986i218swysb'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1srrbzq13vukv910986i218swysb' name='nsvsuni' table='[nsvsuni]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Schools</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Schools]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Schools</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentRate]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>EmploymentRate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[nsvsuni]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
      <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Schools:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Poly&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uni&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' inline='true' name='federated.00zutmp1ui2e8s12xk1nm03g6374' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.15pleuj0maz02z18ym5ug0ry2fpy'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.15pleuj0maz02z18ym5ug0ry2fpy' name='recruitmentrate_differentindustry_mabel' table='[recruitmentrate_differentindustry_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[recruitmentrate_differentindustry_mabel]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub Industry]</local-name>
            <parent-name>[recruitmentrate_differentindustry_mabel]</parent-name>
            <remote-alias>Sub Industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupational Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupational Group]</local-name>
            <parent-name>[recruitmentrate_differentindustry_mabel]</parent-name>
            <remote-alias>Occupational Group</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[recruitmentrate_differentindustry_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recruitment Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recruitment Rate]</local-name>
            <parent-name>[recruitmentrate_differentindustry_mabel]</parent-name>
            <remote-alias>Recruitment Rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years ' datatype='integer' name='[Calculation_877076067992436737]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Occupational Group1' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
      <column caption='Sub Industry' datatype='string' name='[Sub Industry]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
      <group caption='Action (Occupational Group,Industry)' hidden='true' name='[Action (Occupational Group,Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupational Group]' />
          <groupfilter function='level-members' level='[Industry]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Industry, Sub Industry'>
          <field>[Industry]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Occupational Group:nk]' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Clerical, Sales &amp; Services Workers&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Production &amp; Related Workers&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;PMETs&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Sub Industry' />
        <field-sort-custom-order field='Occupational Group' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Recruitment Rate' />
        <field-sort-custom-order field='Calculation_877076067992436737' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' inline='true' name='federated.1apdhlk1d6ie281a9br7h0175d2q' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1pi7cc70jhd94f15019wt18siwlq'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1pi7cc70jhd94f15019wt18siwlq' name='yx_average_monthly_earnings_per_employee_rate_of_change' table='[yx_average_monthly_earnings_per_employee_rate_of_change]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Change (%) Over Corresponding Period of Previous Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Annual Change (%) Over Corresponding Period of Previous Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Annual Change (%) Over Corresponding Period of Previous Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[1st Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>1st Quarter Change (%)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2nd Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>2nd Quarter Change (%)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[3rd Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>3rd Quarter Change (%)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[4th Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>4th Quarter Change (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[1st Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[2nd Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[3rd Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[4th Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[Annual Change (%) Over Corresponding Period of Previous Year]' role='measure' type='quantitative' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737257639945]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Annual Change (%) Over Corresponding Period of Previous Year]' derivation='None' name='[none:Annual Change (%) Over Corresponding Period of Previous Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Annual Change (%) Over Corresponding Period of Previous Year)' hidden='true' name='[Action (Annual Change (%) Over Corresponding Period of Previous Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Annual Change (%) Over Corresponding Period of Previous Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' inline='true' name='federated.0rru1jo1cr3lie16hemn61sks6od' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.14ctt0l1q7qvpy18p1cc01ci3gui'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.14ctt0l1q7qvpy18p1cc01ci3gui' name='yx_overall_poly_graduates' table='[yx_overall_poly_graduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Monthly Gross Starting Salary ($)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Median Monthly Gross Starting Salary ($)]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Median Monthly Gross Starting Salary ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Survey</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year of Survey]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Year of Survey</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course Category]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Course Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fresh Graduate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Fresh Graduate]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Fresh Graduate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>After National Service</remote-name>
            <remote-type>130</remote-type>
            <local-name>[After National Service]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>After National Service</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Avg Salary per Course' datatype='real' name='[Calculation_741686603187695620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({INCLUDE [Course] : sum([Median Monthly Gross Starting Salary ($)])})' />
      </column>
      <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
      <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='None' name='[none:Median Monthly Gross Starting Salary ($):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_741686603187695620]' derivation='User' name='[usr:Calculation_741686603187695620:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category (Poly))' hidden='true' name='[Action (Category (Poly))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category (Poly)]' />
        </groupfilter>
      </group>
      <group caption='Action (Course Category)' hidden='true' name='[Action (Course Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Course Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Course)' hidden='true' name='[Action (Course)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Course]' />
        </groupfilter>
      </group>
      <group caption='Action (Median Monthly Gross Starting Salary ($))' hidden='true' name='[Action (Median Monthly Gross Starting Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Median Monthly Gross Starting Salary ($):ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Course'>
          <field>[Course Category]</field>
          <field>[Course]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603184336899:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Course Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Food &amp; Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Communication&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Humanities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Digital Media &amp; Design&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Built Environment, Engineering &amp; Maritime&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' inline='true' name='federated.04gzwsu0pff89w1bv9tri1sd8904' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ylf5i000tnxg813nz1gj0298kpz'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ylf5i000tnxg813nz1gj0298kpz' name='yx_overall_uni_graduates' table='[yx_overall_uni_graduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Qualification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Qualification]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Qualification</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Faculty]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Faculty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Salary ($)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Average Salary ($)]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Average Salary ($)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Institution]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Institution</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Survey</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year of Survey]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Year of Survey</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
      <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Faculty (Uni) Filter' datatype='boolean' name='[Calculation_741686603182530562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Faculty] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Avg Salary per Faculty (Uni)' datatype='real' name='[Calculation_741686603192209415]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({ INCLUDE [Qualification] : SUM([Average Salary ($)]) })' />
      </column>
      <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
      <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Salary ($)]' derivation='None' name='[none:Average Salary ($):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
      <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_741686603192209415]' derivation='User' name='[usr:Calculation_741686603192209415:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Average Salary ($))' hidden='true' name='[Action (Average Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Salary ($):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty (Uni))' hidden='true' name='[Action (Faculty (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty (Uni)]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty (Uni),Year (Uni))' hidden='true' name='[Action (Faculty (Uni),Year (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty]' />
          <groupfilter function='level-members' level='[Year of Survey]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty)' hidden='true' name='[Action (Faculty)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty]' />
        </groupfilter>
      </group>
      <group caption='Action (Uni Average Salary ($))' hidden='true' name='[Action (Uni Average Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Salary ($):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year (Uni))' hidden='true' name='[Action (Year (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year of Survey]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Faculty,Qualification)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Faculty:nk]' />
          <groupfilter function='level-members' level='[none:Qualification:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Course'>
          <field>[Faculty]</field>
          <field>[Qualification]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Faculty:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Social Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Computing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Languages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food &amp; Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Social Sciences&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;National Institute of Education (NIE)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Humanities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' inline='true' name='federated.05yhkm914172bb12yhoqp014nyph' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1bxtyg512n7o1812z4mtd0rl9sw2'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1bxtyg512n7o1812z4mtd0rl9sw2' name='yx_total_wage_change_by_industry' table='[yx_total_wage_change_by_industry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Wage Change by Industry (per Cent)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Wage Change by Industry (per Cent)]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Total Wage Change by Industry (per Cent)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161744916484]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <group caption='Action (Occupations)' hidden='true' name='[Action (Occupations)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupations]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' inline='true' name='federated.0q93mpa1twersg183rr751s9dy7h' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.18pcvms0a69xoa0zsvfbf0t6ydj0'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.18pcvms0a69xoa0zsvfbf0t6ydj0' name='yx_median_gross_salary_with_cpf' table='[yx_median_gross_salary_with_cpf]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Salary]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoom in Value' datatype='integer' name='[Calculation_922956489143459842]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Salary]' derivation='None' name='[none:Salary:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Salary)' hidden='true' name='[Action (Salary)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Salary:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' inline='true' name='federated.0dapth9192cwx41e23ppn1meqf8l' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0ar3e5v0vyjpkd11fitz51tvwn87'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0ar3e5v0vyjpkd11fitz51tvwn87' name='yx_basic_wage_change_by_industry' table='[yx_basic_wage_change_by_industry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic wage change by industry (cents)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Basic wage change by industry (cents)]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Basic wage change by industry (cents)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161739481090]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <group caption='Action (Occupations)' hidden='true' name='[Action (Occupations)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupations]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' inline='true' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0q80kms1j7ykt91ekrf2219449we'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0q80kms1j7ykt91ekrf2219449we' name='yx_average_monthly_earnings_per_employee' table='[yx_average_monthly_earnings_per_employee]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Annual]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Annual</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[1st Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>1st Quarter</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[2nd Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>2nd Quarter</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[3rd Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>3rd Quarter</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[4th Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>4th Quarter</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[1st Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[2nd Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[3rd Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[4th Quarter]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_992199331712028673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[1st Quarter]' derivation='Avg' name='[avg:1st Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2nd Quarter]' derivation='Avg' name='[avg:2nd Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3rd Quarter]' derivation='Avg' name='[avg:3rd Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[4th Quarter]' derivation='Avg' name='[avg:4th Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual]' derivation='Avg' name='[avg:Annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual]' derivation='None' name='[none:Annual:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[Annual]' derivation='Sum' name='[sum:Annual:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Annual)' hidden='true' name='[Action (Annual)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Annual:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender,Year)' hidden='true' name='[Action (Gender,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
          <groupfilter function='level-members' level='[none:Year:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.39' measure-ordering='alphabetic' measure-percentage='0.305' parameter-percentage='0.305' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:1st Quarter:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Annual:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:1st Quarter:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:4th Quarter:qk]&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:4th Quarter:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:3rd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:3rd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:2nd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:2nd Quarter:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_median_gross_monthly_income_ft_pt (itp232_teamevians)' inline='true' name='federated.1u0wll11udgl4l1f8jc0010w1a4z' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0avmt5e0xsbym71g0pops08wx6sw'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0avmt5e0xsbym71g0pops08wx6sw' name='yx_median_gross_monthly_income_ft_pt' table='[yx_median_gross_monthly_income_ft_pt]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Full Time</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Full Time]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Full Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Part Time</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Part Time]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Part Time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Full Time]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Part Time]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Full Time]' derivation='Avg' name='[avg:Full Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Part Time]' derivation='Avg' name='[avg:Part Time:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[sum:Full Time:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[sum:Part Time:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_graduates_prefer_part_time (itp232_teamevians)' inline='true' name='federated.1il27gc0jhlnda1fgoyg40ewddvb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.01t04oy1r3008f177wd7v1ct0fie'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.01t04oy1r3008f177wd7v1ct0fie' name='yx_graduates_prefer_part_time' table='[yx_graduates_prefer_part_time]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age Range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Range]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Age Range</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Male]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Male</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Female]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Female</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Female]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Male]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Female]' derivation='CountD' name='[ctd:Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male]' derivation='CountD' name='[ctd:Male:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Female]' derivation='Sum' name='[sum:Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male]' derivation='Sum' name='[sum:Male:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[ctd:Male:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[ctd:Female:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_industry_with_best_wage_increase (itp232_teamevians)' inline='true' name='federated.05b65bu1f20hlw15pm1np0bjehoj' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.00d249z1vxyk1a176ar9q1ll3xjc'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.00d249z1vxyk1a176ar9q1ll3xjc' name='yx_industry_with_best_wage_increase' table='[yx_industry_with_best_wage_increase]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_with_best_wage_increase]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Possible Wage Increase</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Possible Wage Increase]</local-name>
            <parent-name>[yx_industry_with_best_wage_increase]</parent-name>
            <remote-alias>Possible Wage Increase</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Industry:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Wholesale &amp; Retail Trade&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Accomodation&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Real Estate Services&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Community, Social &amp; Personal Services&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Transport &amp; Storage&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Information &amp; Communications&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Financial &amp; Insurance Services&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;F&amp;B Services&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Wholesale Trade&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Adminstrative &amp; Support Services&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Service&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Accomodation &amp; Food Services&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Retail Trade&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_industry_salaries (itp232_teamevians)' inline='true' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0z2wxt50u0nxmx172s2qo062rsb3'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0z2wxt50u0nxmx172s2qo062rsb3' name='yx_industry_salaries' table='[yx_industry_salaries]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Qualification]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Qualification</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience (Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience (Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Experience (Years)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min. Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Min. Salary]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Min. Salary</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max. Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Max. Salary]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Max. Salary</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Experience (&gt; 5 Years)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min. Salary (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Min. Salary (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Min. Salary (&gt; 5 Years)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max. Salary (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Max. Salary (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Max. Salary (&gt; 5 Years)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Max. Salary]' derivation='Attribute' name='[attr:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary]' derivation='Avg' name='[avg:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Min. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Min. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Min. Salary]' derivation='Avg' name='[avg:Min. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='CountD' name='[ctd:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary]' derivation='CountD' name='[ctd:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <group caption='Action (Industry)' hidden='true' name='[Action (Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Industry]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[attr:Max. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]&#10;[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#55ad89'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#767676'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#767676'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a9b5ae'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bb7693'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bb7693'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_industry_labour_cost (itp232_teamevians)' inline='true' name='federated.0liuevi0x7uiju1dhtsjw0uv1b96' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.15ja3u41r32vmn1eiaytx1x4fom5'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.15ja3u41r32vmn1eiaytx1x4fom5' name='yx_industry_labour_cost' table='[yx_industry_labour_cost]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Labour Cost</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Labour Cost]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Total Labour Cost</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic Wage Overtime &amp; Other Regular Payments</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Basic Wage Overtime &amp; Other Regular Payments]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Basic Wage Overtime &amp; Other Regular Payments</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Variable Component (Annual Wage Supplements)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Annual Variable Component (Annual Wage Supplements)]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Annual Variable Component (Annual Wage Supplements)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer CPF Contributons</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Employer CPF Contributons]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Employer CPF Contributons</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Levy</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Levy]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Levy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medical Cost &amp; Other Insurance</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Medical Cost &amp; Other Insurance]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Medical Cost &amp; Other Insurance</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Training Cost</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Net Training Cost]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Net Training Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Labour Costs</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Other Labour Costs]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Other Labour Costs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Annual Variable Component (Annual Wage Supplements)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Basic Wage Overtime &amp; Other Regular Payments]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Employer CPF Contributons]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Levy]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Medical Cost &amp; Other Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Net Training Cost]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Other Labour Costs]' role='measure' type='quantitative' />
      <column-instance column='[Annual Variable Component (Annual Wage Supplements)]' derivation='Sum' name='[sum:Annual Variable Component (Annual Wage Supplements):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Basic Wage Overtime &amp; Other Regular Payments]' derivation='Sum' name='[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Employer CPF Contributons]' derivation='Sum' name='[sum:Employer CPF Contributons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Levy]' derivation='Sum' name='[sum:Levy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medical Cost &amp; Other Insurance]' derivation='Sum' name='[sum:Medical Cost &amp; Other Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Training Cost]' derivation='Sum' name='[sum:Net Training Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other Labour Costs]' derivation='Sum' name='[sum:Other Labour Costs:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Basic Wage Overtime &amp; Other Regular Payments)' hidden='true' name='[Action (Basic Wage Overtime &amp; Other Regular Payments)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Basic Wage Overtime &amp; Other Regular Payments:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Medical Cost &amp; Other Insurance:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Annual Variable Component (Annual Wage Supplements):qk]&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Levy:qk]&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Other Labour Costs:qk]&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Net Training Cost:qk]&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Employer CPF Contributons:qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' inline='true' name='federated.1a2otfp1j4hke7112gdjq18gfoas' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1p3a34w005cuic1gjrw8u0a5kwyc'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1p3a34w005cuic1gjrw8u0a5kwyc' name='yx_no_of_graduates_from_courses' table='[yx_no_of_graduates_from_courses]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No. of Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[No. of Graduates]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>No. of Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737254830086]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Course:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Natural, Physical &amp; Mathematical Sciences&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Engineering Sciences&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Mass Communication&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_poly_enrolment (itp232_teamevians)' inline='true' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ti1oxd0lasw3w15g5w9912wjclv'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ti1oxd0lasw3w15g5w9912wjclv' name='yx_poly_enrolment' table='[yx_poly_enrolment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polytechnic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Polytechnic]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Polytechnic</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poly Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Poly Enrolment]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Poly Enrolment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253560322]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Poly Enrolment]' role='measure' type='quantitative' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Poly Enrolment]' derivation='None' name='[none:Poly Enrolment:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Poly Enrolment)' hidden='true' name='[Action (Poly Enrolment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Poly Enrolment:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.342593' measure-ordering='alphabetic' measure-percentage='0.324074' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' inline='true' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.07yl0bc00z37791fs7axg1vopo6p'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.07yl0bc00z37791fs7axg1vopo6p' name='enrolmentfigures_mabel' table='[enrolmentfigures_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[enrolmentfigures_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[enrolmentfigures_mabel]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[enrolmentfigures_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name of Institution]</local-name>
            <parent-name>[enrolmentfigures_mabel]</parent-name>
            <remote-alias>Name of Institution</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Enrolment]</local-name>
            <parent-name>[enrolmentfigures_mabel]</parent-name>
            <remote-alias>Number of Enrolment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years ' datatype='integer' name='[Calculation_347621635205959680]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10; &#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Education Type,Gender)' hidden='true' name='[Action (Education Type,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Education Type,Gender,Year)' hidden='true' name='[Action (Education Type,Gender,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Education Type,Name of Institution,Gender)' hidden='true' name='[Action (Education Type,Name of Institution,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Name of Institution]' />
          <groupfilter function='level-members' level='[Sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Education Type,Year)' hidden='true' name='[Action (Education Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sex]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Education Type, Name of Institution'>
          <field>[Education Type]</field>
          <field>[Name of Institution]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Education Type:nk]' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Polytechnic&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;University&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Sex' />
        <field-sort-custom-order field='Education Type' />
        <field-sort-custom-order field='Name of Institution' />
        <field-sort-custom-order field='No Of Enrolment' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='enrolmentbygender&amp;coursespoly_mabel (itp232_teamevians)' inline='true' name='federated.173co5b0a3e1e614iuhu01d8hdju' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0x8585v07ouhl31cp0fx7025vet5'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0x8585v07ouhl31cp0fx7025vet5' name='enrolment courses _ gender_poly_mabel' table='[enrolment courses _ gender_poly_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[enrolment courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[enrolment courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Course]</local-name>
            <parent-name>[enrolment courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Type of Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[enrolment courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Enrolment]</local-name>
            <parent-name>[enrolment courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Number of Enrolment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_770960001586753536]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2010&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Education Type,Gender)' hidden='true' name='[Action (Education Type,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Select Years)' hidden='true' name='[Action (Select Years)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_770960001586753536]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type of Course:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Legal Studies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engineering Services&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mass Communication &amp; Information Science&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Science &amp; Related Technologies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Education Type' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Type of Course' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Number of Enrolment' />
        <field-sort-custom-order field='Calculation_770960001586753536' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='enrolmentbygender&amp;coursesuni_mabel (itp232_teamevians)' inline='true' name='federated.1lzuenn10qywcc1fnlm5t0j8kcb1' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.112rlfb1ky1ex71fkdam11lxccqt'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.112rlfb1ky1ex71fkdam11lxccqt' name='enrolment courses _ gender_university_mabel' table='[enrolment courses _ gender_university_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[enrolment courses _ gender_university_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[enrolment courses _ gender_university_mabel]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Course]</local-name>
            <parent-name>[enrolment courses _ gender_university_mabel]</parent-name>
            <remote-alias>Type of Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[enrolment courses _ gender_university_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Enrolment]</local-name>
            <parent-name>[enrolment courses _ gender_university_mabel]</parent-name>
            <remote-alias>Number of Enrolment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_1052434978362343426]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Education Type,Gender)' hidden='true' name='[Action (Education Type,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type of Course:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Engineering Sciences&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Physical &amp; Mathematical Sciences&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mass Communication&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='noofgrad (itp232_teamevians)' inline='true' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0uc5nx01waybtb12pxd7z0p9dtok'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0uc5nx01waybtb12pxd7z0p9dtok' name='numofgrad_v2_mabel' table='[numofgrad_v2_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[numofgrad_v2_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[numofgrad_v2_mabel]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[numofgrad_v2_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name of Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name of Institution]</local-name>
            <parent-name>[numofgrad_v2_mabel]</parent-name>
            <remote-alias>Name of Institution</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Graduates</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Graduates]</local-name>
            <parent-name>[numofgrad_v2_mabel]</parent-name>
            <remote-alias>Number of Graduates</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Edu Type' datatype='string' name='[Education Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Edu Type,Gender,Year) 1' hidden='true' name='[Action (Edu Type,Gender,Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Education Type]' />
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Gender,Year)' hidden='true' name='[Action (Edu Type,Gender,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[sex]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Name Of Institution)' hidden='true' name='[Action (Edu Type,Name Of Institution)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[nameOfInstitution]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Name Of Institution,Gender)' hidden='true' name='[Action (Edu Type,Name Of Institution,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[nameOfInstitution]' />
          <groupfilter function='level-members' level='[sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Name Of Institution,Sex)' hidden='true' name='[Action (Edu Type,Name Of Institution,Sex)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[nameOfInstitution]' />
          <groupfilter function='level-members' level='[sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Name Of Institution,Sex,Year)' hidden='true' name='[Action (Edu Type,Name Of Institution,Sex,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[nameOfInstitution]' />
          <groupfilter function='level-members' level='[sex]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Name Of Institution,Year)' hidden='true' name='[Action (Edu Type,Name Of Institution,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[nameOfInstitution]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Sex)' hidden='true' name='[Action (Edu Type,Sex)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Sex,Year)' hidden='true' name='[Action (Edu Type,Sex,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[sex]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Edu Type,Year)' hidden='true' name='[Action (Edu Type,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[eduType]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[sex]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Edu Type, Name of Institution'>
          <field>[Education Type]</field>
          <field>[Name of Institution]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0o5hfuo1uxwnz318zq6f01xhwjqc].[sum:No Of Enrolment:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1arc57x1dl54pe1dvapq30zzu1zh]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Education Type:nk]' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Polytechnic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='sex' />
        <field-sort-custom-order field='eduType' />
        <field-sort-custom-order field='nameOfInstitution' />
        <field-sort-custom-order field='noOfGraduates' />
        <field-sort-custom-order field='Calculation_895090458157256705' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Sex' />
        <field-sort-custom-order field='Education Type' />
        <field-sort-custom-order field='Name of Institution' />
        <field-sort-custom-order field='Number of Graduates' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='graduatesbycourse&amp;genderpoly_mabel (itp232_teamevians)' inline='true' name='federated.1h7v2m11diyhbz13axnid0vj3q1i' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.08am6h518zwevb1b47nvr0qhny9f'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.08am6h518zwevb1b47nvr0qhny9f' name='graduates courses _ gender_poly_mabel' table='[graduates courses _ gender_poly_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[graduates courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[graduates courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Course]</local-name>
            <parent-name>[graduates courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Type of Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[graduates courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Graduates</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Graduates]</local-name>
            <parent-name>[graduates courses _ gender_poly_mabel]</parent-name>
            <remote-alias>Number of Graduates</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years ' datatype='integer' name='[Calculation_1052434978356871168]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type of Course:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Legal Studies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engineering Services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mass Communication &amp; Information Science&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Physical &amp; Mathematical Sciences&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mass Communication&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Engineering Sciences&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Science &amp; Related Technologies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='graduatesbycourse&amp;genderuni_mabel (itp232_teamevians)' inline='true' name='federated.193r8p40646y5i1eep8lk188l5vi' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.16j4ab116cm7zm1fuhs591sv5llx'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.16j4ab116cm7zm1fuhs591sv5llx' name='graduates courses _ gender_uni_mabel' table='[graduates courses _ gender_uni_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Education Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Type]</local-name>
            <parent-name>[graduates courses _ gender_uni_mabel]</parent-name>
            <remote-alias>Education Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[graduates courses _ gender_uni_mabel]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Course]</local-name>
            <parent-name>[graduates courses _ gender_uni_mabel]</parent-name>
            <remote-alias>Type of Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[graduates courses _ gender_uni_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Graduates</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Graduates]</local-name>
            <parent-name>[graduates courses _ gender_uni_mabel]</parent-name>
            <remote-alias>Number of Graduates</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_1052434978361569281]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type of Course:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Engineering Sciences&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Physical &amp; Mathematical Sciences&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mass Communication&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='changeinemploymentbyindustry_mabel (itp232_teamevians)' inline='true' name='federated.1rr7kee148ndz41a3lzd21ui9oqf' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.159f36x0bpg6rt18rgbhc0nj5hqs'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.159f36x0bpg6rt18rgbhc0nj5hqs' name='change in employment by sector_mabel' table='[change in employment by sector_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[change in employment by sector_mabel]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub Industry]</local-name>
            <parent-name>[change in employment by sector_mabel]</parent-name>
            <remote-alias>Sub Industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[change in employment by sector_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Employed People</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Employed People]</local-name>
            <parent-name>[change in employment by sector_mabel]</parent-name>
            <remote-alias>Number of Employed People</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_877076068000169987]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Industry, Sub Industry'>
          <field>[Industry]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#8cc2ca'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Sub Industry' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Number of Employed People' />
        <field-sort-custom-order field='Calculation_877076068000169987' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='employedresidentsbyqualifications_mabel (itp232_teamevians)' inline='true' name='federated.0tnpyf0024rc1416s2exz120vj26' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1nydaoa0nq8qr81aresdn0vnobt1'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1nydaoa0nq8qr81aresdn0vnobt1' name='employed residents by qualifications_mabel' table='[employed residents by qualifications_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[employed residents by qualifications_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[employed residents by qualifications_mabel]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualifications</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Qualifications]</local-name>
            <parent-name>[employed residents by qualifications_mabel]</parent-name>
            <remote-alias>Qualifications</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Employed Residents</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Employed Residents]</local-name>
            <parent-name>[employed residents by qualifications_mabel]</parent-name>
            <remote-alias>Number of Employed Residents</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_877076067998408706]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Gender' datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' datatype-customized='true' name='[Number of Employed Residents]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Qualification' datatype='string' name='[Qualifications]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.431034' measure-ordering='alphabetic' measure-percentage='0.284483' parameter-percentage='0.284483' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Qualifications' />
        <field-sort-custom-order field='Number of Employed Residents' />
        <field-sort-custom-order field='Calculation_877076067998408706' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yq_(2009-2014) poly employment rate (itp232_teamevians)' inline='true' name='federated.05w03zw1b34mz41fg29qj1tlmnp8' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.1y3qrol0imp61v10ooh2t00nwbow'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1y3qrol0imp61v10ooh2t00nwbow' name='yq_(2009-2014) poly employment rate' table='[yq_(2009-2014) poly employment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of employment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of employment]</local-name>
            <parent-name>[yq_(2009-2014) poly employment rate]</parent-name>
            <remote-alias>% of employment</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Employment' datatype='real' name='[% of employment]' role='measure' type='quantitative' />
      <column datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Course:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Applied Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Information &amp; Digital Technologies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Business, Management, Design &amp; Others&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Hybrid Courses&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Built Environment&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yq_uni grads vs poly grads employment rate_v1 (csv version) (itp232_teamevians)' inline='true' name='federated.1md79lv13dphog0zzqquv01dsv6w' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.1pwt16u035ebhz19cr50i0240nu4'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1pwt16u035ebhz19cr50i0240nu4' name='yq_uni grads vs poly grads employment rate_v1 (csv version)' table='[yq_uni grads vs poly grads employment rate_v1 (csv version)]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Institution]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Institution</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Proportion of Employment of Graduates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Proportion of Employment of Graduates]</local-name>
            <parent-name>[yq_uni grads vs poly grads employment rate_v1 (csv version)]</parent-name>
            <remote-alias>Proportion of Employment of Graduates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yq_(2009-2014) uni employment rate (itp232_teamevians)' inline='true' name='federated.0osp06n17fpqzq1azgcpj16kipfd' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.1v26nbv0tb14f217kbnnd0ltampu'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1v26nbv0tb14f217kbnnd0ltampu' name='yq_(2009-2014) uni employment rate' table='[yq_(2009-2014) uni employment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_(2009-2014) uni employment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Faculty]</local-name>
            <parent-name>[yq_(2009-2014) uni employment rate]</parent-name>
            <remote-alias>Faculty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Instituition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Instituition]</local-name>
            <parent-name>[yq_(2009-2014) uni employment rate]</parent-name>
            <remote-alias>Instituition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employment rate %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employment rate %]</local-name>
            <parent-name>[yq_(2009-2014) uni employment rate]</parent-name>
            <remote-alias>Employment rate %</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
      <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
      <group caption='Action (Instituition)' hidden='true' name='[Action (Instituition)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Instituition]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Faculty:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Arts &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Design &amp; Environment&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sciences&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Computing&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Information Systems&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='employmentchangeindustryforeigners (new_jl_database)' inline='true' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1cj4mg30itkcn81g7j7wh1fcmb3x'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1cj4mg30itkcn81g7j7wh1fcmb3x' name='(jl) employment change' table='[(jl) employment change]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Local</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Foreign]</local-name>
            <parent-name>[(jl) employment change]</parent-name>
            <remote-alias>Foreign</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]&quot;' value='Foreigners' />
          <alias key='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]&quot;' value='Residents' />
        </aliases>
      </column>
      <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='real' name='[Local]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year1)' hidden='true' name='[Action (Year1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Local' />
        <field-sort-custom-order field='Foreign' />
      </field-sort-info>
    </datasource>
    <datasource caption='residentsemployed (new_jl_database)' inline='true' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0d008tw19c8az31b9s8z01smiedp'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0d008tw19c8az31b9s8z01smiedp' name='(jl) residents employment' table='[(jl) residents employment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UpperSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UpperSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>UpperSec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diploma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diploma]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Diploma</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Degree]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>Degree</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DipLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DipLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>DipLF</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DegLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DegLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>DegLF</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ForeignLF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ForeignLF]</local-name>
            <parent-name>[(jl) residents employment]</parent-name>
            <remote-alias>ForeignLF</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total] - [Residents]' />
      </column>
      <column caption='% Serious (Foreign)' datatype='real' name='[Calculation_939844987988865024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_470907676544786432]/[ForeignLF]) * 100' />
      </column>
      <column caption='% Serious (Diploma)' datatype='real' name='[Calculation_939844987989004289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Diploma]/[DipLF]) * 100' />
      </column>
      <column caption='% Serious (Degree)' datatype='real' name='[Calculation_939844987989123074]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Degree]/[DegLF]) * 100' />
      </column>
      <column caption='Deg LF' datatype='real' name='[DegLF]' role='measure' type='quantitative' />
      <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
      <column caption='Dip LF' datatype='real' name='[DipLF]' role='measure' type='quantitative' />
      <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
      <column caption='Foreign LF' datatype='real' name='[ForeignLF]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column caption='Upper Sec' datatype='real' name='[UpperSec]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UpperSec]' derivation='Sum' name='[sum:UpperSec:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Status)' hidden='true' name='[Action (Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='foreignemployment (new_jl_database)' inline='true' name='federated.05yfoir07jruab0zjgjk40glzxic' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1dp39390bqcfoy1h0vbcq1psm02t'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1dp39390bqcfoy1h0vbcq1psm02t' name='(jl) foreign employement passes' table='[(jl) foreign employement passes]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentPass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EmploymentPass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>EmploymentPass</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>Spass</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WorkPermitPass</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WorkPermitPass]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>WorkPermitPass</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherWorkPasses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OtherWorkPasses]</local-name>
            <parent-name>[(jl) foreign employement passes]</parent-name>
            <remote-alias>OtherWorkPasses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Employment Pass' datatype='real' name='[EmploymentPass]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Other Work Passes' datatype='real' name='[OtherWorkPasses]' role='measure' type='quantitative' />
      <column datatype='real' name='[Spass]' role='measure' type='quantitative' />
      <column caption='Work Permit Pass' datatype='real' name='[WorkPermitPass]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[EmploymentPass]' derivation='Sum' name='[sum:EmploymentPass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OtherWorkPasses]' derivation='Sum' name='[sum:OtherWorkPasses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spass]' derivation='Sum' name='[sum:Spass:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WorkPermitPass]' derivation='Sum' name='[sum:WorkPermitPass:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year) 1' hidden='true' name='[Action (Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.336207' measure-ordering='alphabetic' measure-percentage='0.327586' parameter-percentage='0.336207' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:SPass:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='EmploymentPass' />
        <field-sort-custom-order field='Spass' />
        <field-sort-custom-order field='WorkPermitPass' />
        <field-sort-custom-order field='OtherWorkPasses' />
        <field-sort-custom-order field='SPass' />
      </field-sort-info>
    </datasource>
    <datasource caption='longtermunemployedrate (new_jl_database)' inline='true' name='federated.1pahbkx17whot71agmucm1p3dln0' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0rgbplt1d5t66n1eps9oq0s0sszy'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0rgbplt1d5t66n1eps9oq0s0sszy' name='(jl) long term unemployment rate' table='[(jl) long term unemployment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Sec</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dip]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Dip</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deg]</local-name>
            <parent-name>[(jl) long term unemployment rate]</parent-name>
            <remote-alias>Deg</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
      <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Residents' />
        <field-sort-custom-order field='Primary' />
        <field-sort-custom-order field='LowerSec' />
        <field-sort-custom-order field='Sec' />
        <field-sort-custom-order field='PostSec' />
        <field-sort-custom-order field='Dip' />
        <field-sort-custom-order field='Deg' />
        <field-sort-custom-order field='Degree' />
        <field-sort-custom-order field='Diploma' />
      </field-sort-info>
    </datasource>
    <datasource caption='unemploymentrate (new_jl_database)' inline='true' name='federated.0u8qeny154dbsz15ozitc1ykmtin' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1jxt5kn0n4gwhu1friks0043hxg4'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1jxt5kn0n4gwhu1friks0043hxg4' name='(jl) unemployment rate' table='[(jl) unemployment rate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowerSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LowerSec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>LowerSec</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostSec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PostSec]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>PostSec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dip]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Dip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deg]</local-name>
            <parent-name>[(jl) unemployment rate]</parent-name>
            <remote-alias>Deg</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
      </column>
      <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
      <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
      <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Year) 1' hidden='true' name='[Action (Year) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Total' />
        <field-sort-custom-order field='Residents' />
        <field-sort-custom-order field='Primary' />
        <field-sort-custom-order field='LowerSec' />
        <field-sort-custom-order field='Sec' />
        <field-sort-custom-order field='PostSec' />
        <field-sort-custom-order field='Dip' />
        <field-sort-custom-order field='Deg' />
        <field-sort-custom-order field='Calculation_939844987990724611' />
        <field-sort-custom-order field='Degree' />
        <field-sort-custom-order field='Diploma' />
      </field-sort-info>
    </datasource>
    <datasource caption='graduatesnumber (new_jl_database)' inline='true' name='federated.14miaw50iyirw316i6zjx0h6q6qc' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.10akrd31p3d3b91g8w7zn1pqgb8e'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.10akrd31p3d3b91g8w7zn1pqgb8e' name='(jl) graduates numbers' table='[(jl) graduates numbers]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poly</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Poly]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Poly</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uni</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Uni]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>Uni</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUS</remote-name>
            <remote-type>3</remote-type>
            <local-name>[NUS]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>NUS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMU</remote-name>
            <remote-type>3</remote-type>
            <local-name>[SMU]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SMU</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SIT]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SIT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUTD</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SUTD]</local-name>
            <parent-name>[(jl) graduates numbers]</parent-name>
            <remote-alias>SUTD</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;' value='SIT' />
          <alias key='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SUTD:qk]&quot;' value='SUTD' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[SIT]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Sutd' datatype='integer' datatype-customized='true' name='[SUTD]' role='measure' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[SIT]' derivation='Sum' name='[sum:SIT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUTD]' derivation='Sum' name='[sum:SUTD:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yq_(2009-2014) sg gdp per capita (itp232_teamevians)' inline='true' name='federated.0vkeuz71g4kbvu10u62io0wa6ztx' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0i44r8n00f5ew916umyii17i64yd'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0i44r8n00f5ew916umyii17i64yd' name='yq_(2009-2014) sg gdp per capita' table='[yq_(2009-2014) sg gdp per capita]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_(2009-2014) sg gdp per capita]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SG GDP Per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SG GDP Per Capita]</local-name>
            <parent-name>[yq_(2009-2014) sg gdp per capita]</parent-name>
            <remote-alias>SG GDP Per Capita</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yq_(2009-2013) real gdp by industry (itp232_teamevians)' inline='true' name='federated.04n7m8v0vngs461dcwcf11wyp8lr' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.083tp240iirad415pxyig1x0xwg1'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.083tp240iirad415pxyig1x0xwg1' name='yq_(2009-2013) real gdp by industry' table='[yq_(2009-2013) real gdp by industry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yq_(2009-2013) real gdp by industry]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[yq_(2009-2013) real gdp by industry]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Real GDP]</local-name>
            <parent-name>[yq_(2009-2013) real gdp by industry]</parent-name>
            <remote-alias>Real GDP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Business Services&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Information &amp; Communications&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wholesale Retail trade&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finance &amp; Insurance&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Transportation &amp; Storage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='(2009-2013) compositions of gdp (itp232_teamevians)' inline='true' name='federated.0tg89pp1j9k68g11y5r6o0giztjp' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0ffa1551ptmgnk1ezib620cwvg7g'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='127.0.0.1' source-charset='' username='root ' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0ffa1551ptmgnk1ezib620cwvg7g' name='(2009-2013) compositions of gdp' table='[(2009-2013) compositions of gdp]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[(2009-2013) compositions of gdp]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of composition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of composition]</local-name>
            <parent-name>[(2009-2013) compositions of gdp]</parent-name>
            <remote-alias>Type of composition</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of composition</remote-name>
            <remote-type>3</remote-type>
            <local-name>[% of composition]</local-name>
            <parent-name>[(2009-2013) compositions of gdp]</parent-name>
            <remote-alias>% of composition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_govt_expenditure (itp232_teamevians)' inline='true' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0ccj4e30utkv2j1gfjwjh1gtff6p'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0ccj4e30utkv2j1gfjwjh1gtff6p' name='yx_govt_expenditure' table='[yx_govt_expenditure]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sector Group]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Sector Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating Expenditure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Operating Expenditure]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Operating Expenditure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <group caption='Action (Sector)' hidden='true' name='[Action (Sector)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.335' measure-ordering='alphabetic' measure-percentage='0.33' parameter-percentage='0.335' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Trade and Industry&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Communications and Information&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;National Development&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Manpower (excl. Financial Security)&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Environment and Water Resources&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Social and Family Development&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Manpower (Financial Security)&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Home Affairs&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Foreign Affairs&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Info-Communications and Media Development&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Prime Minister&apos;s Office&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Culture, Community and Youth&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Defence&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Organs of State&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_total_expenditure_on_edu (itp232_teamevians)' inline='true' name='federated.1msqecj11mxdsj1g3d5li1ylyeuf' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.08jcqye1lgqa1u19r4tld1fmp4zf'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.08jcqye1lgqa1u19r4tld1fmp4zf' name='yx_total_expenditure_on_edu' table='[yx_total_expenditure_on_edu]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_total_expenditure_on_edu]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenditure on Education</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Expenditure on Education]</local-name>
            <parent-name>[yx_total_expenditure_on_edu]</parent-name>
            <remote-alias>Total Expenditure on Education</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.31' measure-ordering='alphabetic' measure-percentage='0.355' parameter-percentage='0.335' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' inline='true' name='federated.1i5nz8t0ykkxjd13yybds0mas423' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0e4zbtv1a0aybw14ryhmn0vdpzib'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0e4zbtv1a0aybw14ryhmn0vdpzib' name='yx_govt_edu_institutions_expenditure' table='[yx_govt_edu_institutions_expenditure]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Educational Institutions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Educational Institutions]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Educational Institutions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expenditure</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Expenditure]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Expenditure</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Prior Year' datatype='boolean' name='[Calculation_1141381071504027650]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&lt;2' />
      </column>
      <column caption='Last Year Volume' datatype='integer' name='[Calculation_1141381071504158723]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_947726287379984388],[Expenditure],NULL))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Prior Year Volume' datatype='integer' name='[Calculation_1141381071505260549]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_1141381071504027650],[Expenditure],null))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Change New' datatype='integer' name='[Calculation_1141381071505543174]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='([Calculation_1141381071504158723]-[Calculation_1141381071505260549])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Change' datatype='real' default-format='p0.0%' name='[Calculation_1141381071512084488]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Calculation_1141381071505543174]/[Calculation_1141381071505260549]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Header' datatype='string' name='[Calculation_1141381071514488842]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Last Year as of: &quot; +str([Calculation_947726287379755010])' />
      </column>
      <column caption='Institutions Filter' datatype='boolean' name='[Calculation_776026551146143744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 14]=[Educational Institutions] OR [Parameters].[Parameter 14]=&apos;(All)&apos;' />
      </column>
      <column aggregation='Count' caption='Max Year' datatype='datetime' datatype-customized='true' name='[Calculation_947726287379755010]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETIME({MAX([Year])})' />
      </column>
      <column caption='Last Year' datatype='boolean' name='[Calculation_947726287379984388]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year], [Calculation_947726287379755010])&lt;1' />
      </column>
      <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
      <column-instance column='[Expenditure]' derivation='None' name='[none:Expenditure:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Expenditure)' hidden='true' name='[Action (Expenditure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Expenditure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Expenditure1)' hidden='true' name='[Action (Expenditure1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Expenditure:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Educational Institutions:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Primary Schools&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Institute of Technical Education&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Polytechnics&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Universities&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Secondary Schools&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Junior Colleges / Centralised Institute&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' inline='true' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1r4qxpg0x6ljv717tpp130ktx0fk'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1r4qxpg0x6ljv717tpp130ktx0fk' name='jobvacancybyindustry_og_mabel' table='[jobvacancybyindustry_og_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>lndustry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[lndustry]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>lndustry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub Category]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>Sub Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupational Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupational Group]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>Occupational Group</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Job Vacancies</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number of Job Vacancies]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>Number of Job Vacancies</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Vacancy Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Job Vacancy Rate]</local-name>
            <parent-name>[jobvacancybyindustry_og_mabel]</parent-name>
            <remote-alias>Job Vacancy Rate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
      <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
      <group caption='Action (Industry,Occupational Group)' hidden='true' name='[Action (Industry,Occupational Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[industry]' />
          <groupfilter function='level-members' level='[Occupational Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Industry,Sub Category Industry)' hidden='true' name='[Action (Industry,Sub Category Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[industry]' />
          <groupfilter function='level-members' level='[subCategoryIndustry]' />
        </groupfilter>
      </group>
      <group caption='Action (Industry,Year)' hidden='true' name='[Action (Industry,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[industry]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Occupational Group,Industry)' hidden='true' name='[Action (Occupational Group,Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupational Group]' />
          <groupfilter function='level-members' level='[industry]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub Category,Industry)' hidden='true' name='[Action (Sub Category,Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub Category]' />
          <groupfilter function='level-members' level='[lndustry]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Industry, Sub Category'>
          <field>[lndustry]</field>
          <field>[Sub Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vft1k709xhyb31dxb9hl0lhr28y].[avg:jobVacancyRate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:jobVacancyRate:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vft1k709xhyb31dxb9hl0lhr28y]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vft1k709xhyb31dxb9hl0lhr28y].[avg:noOfJobVacancy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:noOfJobVacancy:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Occupational Group:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;PMETs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Production &amp; Related Workers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clerical, Sales &amp; Services Workers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:lndustry:nk]' type='palette'>
            <map to='#8cc2ca'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='lndustry' />
        <field-sort-custom-order field='Sub Category' />
        <field-sort-custom-order field='Occupational Group' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Number of Job Vacancies' />
        <field-sort-custom-order field='Job Vacancy Rate' />
        <field-sort-custom-order field='Calculation_730427605007749120' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='overalljobvacanciesnoannual (itp232_teamevians)' inline='true' name='federated.0fh2wh0162pgdo14eqw5a0pa8mgm' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.02hxzzh0b5v18r1bpjppc01l96vc'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.02hxzzh0b5v18r1bpjppc01l96vc' name='jobvacanciesnumber_mabel' table='[jobvacanciesnumber_mabel]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[jobvacanciesnumber_mabel]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Job Vacancies</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Number Of Job Vacancies]</local-name>
            <parent-name>[jobvacanciesnumber_mabel]</parent-name>
            <remote-alias>Number Of Job Vacancies</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Job Vacancy Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Job Vacancy Rate]</local-name>
            <parent-name>[jobvacanciesnumber_mabel]</parent-name>
            <remote-alias>Job Vacancy Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Select Years' datatype='integer' name='[Calculation_347621635207565313]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;end' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.25' measure-ordering='alphabetic' measure-percentage='0.293605' parameter-percentage='0.456395' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
          <calculation class='tableau' formula='1960' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.00zutmp1ui2e8s12xk1nm03g6374'>
      <datasources>
        <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' name='federated.00zutmp1ui2e8s12xk1nm03g6374' />
      </datasources>
      <datasource-dependencies datasource='federated.00zutmp1ui2e8s12xk1nm03g6374'>
        <column caption='Occupational Group1' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
        <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]'>
        <groupfilter function='level-members' level='[none:Occupational Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0fbq8zp1brsd8y10kpunt0fo0pzo'>
      <datasources>
        <datasource caption='uni graduates(ver2) (itp232_teamevians)' name='federated.0fbq8zp1brsd8y10kpunt0fo0pzo' />
      </datasources>
      <datasource-dependencies datasource='federated.0fbq8zp1brsd8y10kpunt0fo0pzo'>
        <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169157484549]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Degree]),lower([Parameters].[Parameter 1 1]))' />
        </column>
        <column-instance column='[Calculation_1668865169157484549]' derivation='None' name='[none:Calculation_1668865169157484549:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]'>
        <groupfilter function='member' level='[none:Calculation_1668865169157484549:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0fh2wh0162pgdo14eqw5a0pa8mgm'>
      <datasources>
        <datasource caption='overalljobvacanciesnoannual (itp232_teamevians)' name='federated.0fh2wh0162pgdo14eqw5a0pa8mgm' />
      </datasources>
      <datasource-dependencies datasource='federated.0fh2wh0162pgdo14eqw5a0pa8mgm'>
        <column caption='Select Years' datatype='integer' name='[Calculation_347621635207565313]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;end' />
        </column>
        <column-instance column='[Calculation_347621635207565313]' derivation='None' name='[none:Calculation_347621635207565313:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[none:Calculation_347621635207565313:ok]'>
        <groupfilter function='level-members' level='[none:Calculation_347621635207565313:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut'>
      <datasources>
        <datasource caption='poly_lastest_latest15 (itp232_teamevians)' name='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut' />
      </datasources>
      <datasource-dependencies datasource='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut'>
        <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169154719748]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Courses]),lower([Parameters].[Parameter 1 1]))' />
        </column>
        <column-instance column='[Calculation_1668865169154719748]' derivation='None' name='[none:Calculation_1668865169154719748:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169154719748:nk]'>
        <groupfilter function='member' level='[none:Calculation_1668865169154719748:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.193r8p40646y5i1eep8lk188l5vi'>
      <datasources>
        <datasource caption='graduatesbycourse&amp;genderuni_mabel (itp232_teamevians)' name='federated.193r8p40646y5i1eep8lk188l5vi' />
      </datasources>
      <datasource-dependencies datasource='federated.193r8p40646y5i1eep8lk188l5vi'>
        <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
        <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]'>
        <groupfilter function='level-members' level='[none:Type of Course:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
      <datasources>
        <datasource caption='noofgrad (itp232_teamevians)' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' />
      </datasources>
      <datasource-dependencies datasource='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
        <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_895090458157256705]' derivation='None' name='[none:Calculation_895090458157256705:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]'>
        <groupfilter function='level-members' level='[none:Calculation_895090458157256705:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 6 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Different Institution Uni' type='sheet' worksheet='(D1) Enrolment by Courses_Uni' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Different Institution Uni' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2)Graduates in Singapore' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender1' />
        <param name='target' value='(D2)Graduates in Singapore' />
      </command>
    </action>
    <action caption='Highlight 4 (generated)' name='[Action12]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different universities' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender' />
        <param name='target' value='(D2) Graduates from different universities' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2)Graduates in Singapore' type='sheet' worksheet='(D2)Gradutes from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2)Graduates in Singapore' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2)Graduates in Singapore' type='sheet' worksheet='(D2)Gender Distribution' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2)Graduates in Singapore' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2)Graduates in Singapore' type='sheet' worksheet='(D2)Number of Graduates' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2)Graduates in Singapore' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Singapore' type='sheet' worksheet='(D1)Gender Distribution (Enrolment)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Singapore' />
      </command>
    </action>
    <action caption='Highlight 5 (generated)' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different Polytechnic' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender' />
        <param name='target' value='(D2) Graduates from different Polytechnic' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action18]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different Polytechnic' type='sheet' worksheet='(D2)Gradutes from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2) Graduates from different Polytechnic' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action19]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different Polytechnic' type='sheet' worksheet='(D2) Number of Graduates by Course_poly' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2) Graduates from different Polytechnic' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='(D2)Gradutes from Different Institutions' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender1' />
        <param name='target' value='(D2)Gradutes from Different Institutions' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different universities' type='sheet' worksheet='(D2)Gradutes from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2) Graduates from different universities' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2) Graduates from different universities' type='sheet' worksheet='(D2) Number of Gradutes by Course_Uni' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2) Graduates from different universities' />
      </command>
    </action>
    <action caption='Filter 15 (generated)' name='[Action22]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D3) Job Vacancy Overview' type='sheet' worksheet='(D3)Industry Size' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D3) Job Vacancy Overview' />
      </command>
    </action>
    <action caption='Filter 16 (generated)' name='[Action23]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D3) Job Vacancy Overview' type='sheet' worksheet='(D3)Annual JV' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D3) Job Vacancy Overview' />
      </command>
    </action>
    <action caption='Filter 17 (generated)' name='[Action24]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D3) Job Vacancy By Industry' type='sheet' worksheet='(D3)JV by Industry &amp; Sub Industry' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D3) Job Vacancy By Industry' />
      </command>
    </action>
    <action caption='Filter 18 (generated)' name='[Action25]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D5) Comparing Employment Rate in Industries &amp; Qualifications' type='sheet' worksheet='(D5) Change in employment rate' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D5) Comparing Employment Rate in Industries &amp; Qualifications' />
      </command>
    </action>
    <action caption='Filter 19 (generated)' name='[Action26]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D5) Comparing Employment Rate in Industries &amp; Qualifications' type='sheet' worksheet='(D5) Employment Rate in different qualifications' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D5) Comparing Employment Rate in Industries &amp; Qualifications' />
      </command>
    </action>
    <action caption='Filter 20 (generated)' name='[Action27]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D4) Comparing Job Vacancy &amp; Recruitment Rate' type='sheet' worksheet='(D4) Job Vacancy by Industry &amp; Occupational Group' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D4) Comparing Job Vacancy &amp; Recruitment Rate' />
      </command>
    </action>
    <action caption='Filter 21 (generated)' name='[Action28]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D4) Comparing Job Vacancy &amp; Recruitment Rate' type='sheet' worksheet='(D4) Recruitment Rate ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D4) Comparing Job Vacancy &amp; Recruitment Rate' />
      </command>
    </action>
    <action caption='Filter3' name='[Action29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D4) Comparing Job Vacancy &amp; Recruitment Rate' type='sheet' worksheet='(D4) Job Vacancy by Industry &amp; Occupational Group' />
      <link caption='Filter3' delimiter=',' escape='\' expression='tsl:%28D4%29%20Comparing%20Job%20Vacancy%20%26%20Recruitment%20Rate?%5Bfederated.00zutmp1ui2e8s12xk1nm03g6374%5D.%5BSub%20Industry%5D~s0=&lt;[subCategoryIndustry]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='(D4) Job Vacancy by Industry &amp; Occupational Group' />
        <param name='on-empty' value='none' />
        <param name='target' value='(D4) Comparing Job Vacancy &amp; Recruitment Rate' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Different Institutions Poly' type='sheet' worksheet='(D1) Courses Offered_Poly' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Different Institutions Poly' />
      </command>
    </action>
    <action caption='Linking avg monthly salary per Employee vs Employee (%)' name='[Action30]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg monthly salary per Employee vs Employee (%)' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0dapth9192cwx41e23ppn1meqf8l%5D.%5BBasic%20wage%20change%20by%20industry%20%28cents%29%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Filter2' name='[Action31]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of University Graduates' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Faculty]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of University Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Filter4' name='[Action32]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Filter4' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BMedian%20Monthly%20Gross%20Starting%20Salary%20%28%24%29%5D~s0=&lt;[Median Monthly Gross Starting Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Uni Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Linking avg month annual to %' name='[Action33]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg month annual to %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Poly Salary to Monthly Salary' name='[Action34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Poly Salary' />
      <link caption='Linking Poly Salary to Monthly Salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BAnnual%5D~s0=&lt;[Median Monthly Gross Starting Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action35]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking Uni to Monthly Salary' name='[Action36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Uni Salary' />
      <link caption='Linking Uni to Monthly Salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BAnnual%5D~s0=&lt;[Average Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking employee rate of change to %' name='[Action37]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking employee rate of change to %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action38]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.04gzwsu0pff89w1bv9tri1sd8904%5D.%5BFaculty%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of Polytechnic Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking avg' name='[Action39]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Linking avg' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Course Category]~na&gt;&amp;%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of Polytechnic Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Different Institutions Poly' type='sheet' worksheet='(D1)Enrolment from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Different Institutions Poly' />
      </command>
    </action>
    <action caption='Linking median to industry salaries' name='[Action40]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
      <link caption='Linking median to industry salaries' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BMax.%20Salary%5D~s0=&lt;[Salary]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &lt; 5),Industry Salaries (Year &gt; 5)' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <action caption='Linking with wage to govt expenditure' name='[Action41]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &lt; 5)' />
      <link caption='Linking with wage to govt expenditure' delimiter=',' escape='\' expression='tsl:Govt.%20Expenditure1?%5Bfederated.0oo26sn1vrd6z11b5izd71pxt88j%5D.%5BSector%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.0oo26sn1vrd6z11b5izd71pxt88j%5D.%5BOperating%20Expenditure%5D~s0=&lt;[Max. Salary]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Govt. Expenditure,Govt. Expenditure by Institutions' />
        <param name='target' value='Govt. Expenditure1' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to comparing govt expenditure' name='[Action42]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Govt. Expenditure1' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to comparing govt expenditure' delimiter=',' escape='\' expression='tsl:Comparing%20Govt.%20Expenditure%20vs%20Poly%2FUni%20Salary?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BEducational%20Institutions%5D~s0=&lt;[Educational Institutions]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Poly Salary (Line),Uni Salary (Line)' />
        <param name='single-select' value='' />
        <param name='target' value='Comparing Govt. Expenditure vs Poly/Uni Salary' />
      </command>
    </action>
    <action caption='Linking Avg rate of change to median salary' name='[Action43]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking Avg rate of change to median salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Poly Enrolment gender to uni enrolment' name='[Action44]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Poly Enrolment' />
      <link caption='Linking Poly Enrolment gender to uni enrolment' delimiter=',' escape='\' expression='tsl:Uni%20Enrolment?%5Bfederated.117ra73191xfaa12tkrf108iwowf%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;&amp;%5Bfederated.117ra73191xfaa12tkrf108iwowf%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Uni Enrolment' />
      </command>
    </action>
    <action caption='Linking monthly salary per employee to avg salary anually' name='[Action45]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking monthly salary per employee to avg salary anually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking monthly salary per employee rate &amp; avg monthly salary' name='[Action46]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking monthly salary per employee rate &amp; avg monthly salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking salary per quarter and employee rate' name='[Action47]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking salary per quarter and employee rate' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee (per Quarter)' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking salary per rate to anually' name='[Action48]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking salary per rate to anually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking basic to total wage' name='[Action49]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Basic Wage Change by Industry' />
      <link caption='Linking basic to total wage' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.05yhkm914172bb12yhoqp014nyph%5D.%5BOccupations%5D~s0=&lt;[Occupations]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Singapore' type='sheet' worksheet='(D1)Enrolment from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Singapore' />
      </command>
    </action>
    <action caption='Linking total to basic wage' name='[Action50]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Total Wage Change by Industry(%)' />
      <link caption='Linking total to basic wage' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0dapth9192cwx41e23ppn1meqf8l%5D.%5BOccupations%5D~s0=&lt;[Occupations]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking month salary anually &amp; %' name='[Action51]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking month salary anually &amp; %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to Govt Expenditure (expand)' name='[Action52]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparing Govt. Expenditure vs Poly/Uni Salary' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to Govt Expenditure (expand)' delimiter=',' escape='\' expression='tsl:Govt.%20Expenditure%20%28Expand%29?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BExpenditure%5D~s0=&lt;[Expenditure]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Govt. Expenditure (Expand)' />
      </command>
    </action>
    <action caption='Linking Avg Salary per Quarter Gender' name='[Action53]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking Avg Salary per Quarter Gender' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee (per Quarter)' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking avg salary to rate of change' name='[Action54]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg salary to rate of change' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Monthly Salary Employee to &amp;' name='[Action55]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking Monthly Salary Employee to &amp;' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to details' name='[Action56]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Govt. Expenditure1' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to details' delimiter=',' escape='\' expression='tsl:Comparing%20Govt.%20Expenditure%20vs%20Poly%2FUni%20Salary?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BExpenditure%5D~s0=&lt;[Expenditure]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Poly Salary (Line),Uni Salary (Line)' />
        <param name='target' value='Comparing Govt. Expenditure vs Poly/Uni Salary' />
      </command>
    </action>
    <action caption='Linking Poly &amp; Uni Salary' name='[Action57]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Poly Salary' />
      <link caption='Linking Poly &amp; Uni Salary' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.04gzwsu0pff89w1bv9tri1sd8904%5D.%5BFaculty%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Poly Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Linking Uni &amp; Poly Salary' name='[Action58]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Uni Salary' />
      <link caption='Linking Uni &amp; Poly Salary' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Faculty]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Uni Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Filter3' name='[Action59]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparing Poly &amp; Uni Courses' type='sheet' worksheet='No. of Graduates from Courses' />
      <link caption='Filter3' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BMedian%20Monthly%20Gross%20Starting%20Salary%20%28%24%29%5D~s0=&lt;[No. of Graduates]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of University Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='(D2)Gender Distribution' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gender1' />
        <param name='target' value='(D2)Gender Distribution' />
      </command>
    </action>
    <action caption='Linking avg month per employee gender to annually' name='[Action60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking avg month per employee gender to annually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking Industry Salary year less 5 to more than 5' name='[Action61]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &lt; 5)' />
      <link caption='Linking Industry Salary year less 5 to more than 5' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &lt; 5),Industry with Wage Increase' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action62]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Employment Rate' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Categories,CategoriesC' />
        <param name='target' value='Employment Rate' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action63]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Employment Rate' type='sheet' worksheet='Uni c employment' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Employment Rate' />
      </command>
    </action>
    <action caption='Filter5' name='[Action64]'>
      <activation type='on-select' />
      <source dashboard='Employment Rate' type='sheet' worksheet='Poly vs Uni' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 12' />
        <param name='special-fields' value='all' />
        <param name='target' value='PolyVsUniEmploymentRate' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action65]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='PolyVsUniEmploymentRate' type='sheet' worksheet='polyvsuniemployment' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='PolyVsUniEmploymentRate' />
      </command>
    </action>
    <action caption='Filter1' name='[Action66]'>
      <source datasource='federated.099aqpr0lgdpc91b9vb291yzdvc1' type='datasource'>
        <exclude-sheet name='Sheet 12' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sheet 12' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action67]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action68]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D2*) Compare Employment based on Educational Level' type='sheet' worksheet='(D2) Trend of Residents' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D2*) Compare Employment based on Educational Level' />
      </command>
    </action>
    <action caption='Filter1' name='[Action69]'>
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='(D1) Employment Change for each industry,(D1) Residents &amp; Foreigners Employed' />
        <param name='special-fields' value='all' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Singapore' type='sheet' worksheet='(D1)Enrolment Over the Years' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Singapore' />
      </command>
    </action>
    <action caption='Filter2' name='[Action70]'>
      <source dashboard='(D1*) Compare Employment Based On Residency' type='sheet' worksheet='(D1) Residents &amp; Foreigners Employed' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:%28D1%2A%29%20Compare%20Employment%20Based%20On%20Residency?%5Bfederated.05yfoir07jruab0zjgjk40glzxic%5D.%5BYear%5D~s0=&lt;[Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='(D1) Employment Change for each industry,(D1) Residents &amp; Foreigners Employed' />
        <param name='target' value='(D1*) Compare Employment Based On Residency' />
      </command>
    </action>
    <action caption='Filter 22 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D3) Job Vacancy Overview' type='sheet' worksheet='(D3) Industry Size Figures' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D3) Job Vacancy Overview' />
      </command>
    </action>
    <action caption='Linking Industry Salaries more than 5 years to less than 5 years' name='[Action8]'>
      <activation type='on-hover' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &gt; 5)' />
      <link caption='Linking Industry Salaries more than 5 years to less than 5 years' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &gt; 5),Industry with Wage Increase' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='(D1) Enrolment in Different Institution Uni' type='sheet' worksheet='(D1)Enrolment from Different Institutions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='(D1) Enrolment in Different Institution Uni' />
      </command>
    </action>
    <datasources>
      <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' name='federated.00zutmp1ui2e8s12xk1nm03g6374' />
      <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
      <datasource caption='foreignemployment (new_jl_database)' name='federated.05yfoir07jruab0zjgjk40glzxic' />
      <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' name='federated.05yhkm914172bb12yhoqp014nyph' />
      <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' name='federated.0dapth9192cwx41e23ppn1meqf8l' />
      <datasource caption='yx_poly_enrolment (itp232_teamevians)' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' />
      <datasource caption='yx_govt_expenditure (itp232_teamevians)' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' />
      <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' name='federated.0q93mpa1twersg183rr751s9dy7h' />
      <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
      <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
      <datasource caption='yx_uni_enrolment (itp232_teamevians)' name='federated.117ra73191xfaa12tkrf108iwowf' />
      <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' name='federated.1a2otfp1j4hke7112gdjq18gfoas' />
      <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' name='federated.1apdhlk1d6ie281a9br7h0175d2q' />
      <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
      <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
      <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
    </datasources>
    <datasource-dependencies datasource='federated.00zutmp1ui2e8s12xk1nm03g6374'>
      <column caption='Sub Industry' datatype='string' name='[Sub Industry]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
      <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.05yfoir07jruab0zjgjk40glzxic'>
      <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.05yhkm914172bb12yhoqp014nyph'>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0dapth9192cwx41e23ppn1meqf8l'>
      <column datatype='real' name='[Basic wage change by industry (cents)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0g2iv9z130aagi18y0udj1x2q6yk'>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0oo26sn1vrd6z11b5izd71pxt88j'>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0q93mpa1twersg183rr751s9dy7h'>
      <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
      <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
      <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
    <datasource-dependencies datasource='federated.117ra73191xfaa12tkrf108iwowf'>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1a2otfp1j4hke7112gdjq18gfoas'>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1apdhlk1d6ie281a9br7h0175d2q'>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[Annual Change (%) Over Corresponding Period of Previous Year]' role='measure' type='quantitative' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
      <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='(2009-2013) Compositions of GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(2009-2013) Compositions of GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='(2009-2013) compositions of gdp (itp232_teamevians)' name='federated.0tg89pp1j9k68g11y5r6o0giztjp' />
          </datasources>
          <datasource-dependencies datasource='federated.0tg89pp1j9k68g11y5r6o0giztjp'>
            <column caption='% Of Composition' datatype='integer' name='[% of composition]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of composition]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Type of composition]' derivation='None' name='[none:Type of composition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% of composition]' derivation='Sum' name='[sum:% of composition:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' />
          </filter>
          <filter class='quantitative' column='[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:qk]</column>
            <column>[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Type of composition:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0tg89pp1j9k68g11y5r6o0giztjp].[sum:% of composition:qk]</rows>
        <cols>[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Type of composition:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='(2009-2013) GDP per industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(2009-2013) GDP per industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yq_(2009-2013) real gdp by industry (itp232_teamevians)' name='federated.04n7m8v0vngs461dcwcf11wyp8lr' />
          </datasources>
          <datasource-dependencies datasource='federated.04n7m8v0vngs461dcwcf11wyp8lr'>
            <column datatype='integer' name='[Real GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]'>
            <groupfilter function='level-members' level='[none:Sector:nk]' />
          </filter>
          <sort class='manual' column='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Business Services&quot;</bucket>
              <bucket>&quot;Construction&quot;</bucket>
              <bucket>&quot;Finance &amp; Insurance&quot;</bucket>
              <bucket>&quot;Information &amp; Communications&quot;</bucket>
              <bucket>&quot;Transportation &amp; Storage&quot;</bucket>
              <bucket>&quot;Wholesale Retail trade&quot;</bucket>
              <bucket>&quot;Manufacturing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' />
          </filter>
          <filter class='quantitative' column='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Year:qk]</column>
            <column>[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Year:ok]</column>
            <column>[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04n7m8v0vngs461dcwcf11wyp8lr].[sum:Real GDP:qk]</rows>
        <cols>[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='(2009-2013) SG GDP Per Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(2009-2013) SG GDP Per Capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yq_(2009-2014) sg gdp per capita (itp232_teamevians)' name='federated.0vkeuz71g4kbvu10u62io0wa6ztx' />
          </datasources>
          <datasource-dependencies datasource='federated.0vkeuz71g4kbvu10u62io0wa6ztx'>
            <column datatype='real' name='[SG GDP Per Capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SG GDP Per Capita]' derivation='Sum' name='[sum:SG GDP Per Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vkeuz71g4kbvu10u62io0wa6ztx].[sum:SG GDP Per Capita:qk]' field-type='quantitative' max='52000.0' min='40000.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0vkeuz71g4kbvu10u62io0wa6ztx].[sum:SG GDP Per Capita:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0vkeuz71g4kbvu10u62io0wa6ztx].[sum:SG GDP Per Capita:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0vkeuz71g4kbvu10u62io0wa6ztx].[sum:SG GDP Per Capita:qk]</rows>
        <cols>[federated.0vkeuz71g4kbvu10u62io0wa6ztx].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='(2009-2014)Poly employment rate '>
      <layout-options>
        <title>
          <formatted-text>
            <run>(2009-2014) Poly employment rate </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yq_(2009-2014) poly employment rate (itp232_teamevians)' name='federated.05w03zw1b34mz41fg29qj1tlmnp8' />
          </datasources>
          <datasource-dependencies datasource='federated.05w03zw1b34mz41fg29qj1tlmnp8'>
            <column caption='% Of Employment' datatype='real' name='[% of employment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Instituition]' derivation='None' name='[none:Instituition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% of employment]' derivation='Sum' name='[sum:% of employment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Year:ok]</column>
            <column>[federated.05w03zw1b34mz41fg29qj1tlmnp8].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Course:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05w03zw1b34mz41fg29qj1tlmnp8].[sum:% of employment:qk]</rows>
        <cols>([federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Instituition:nk] / [federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Course:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='(2009-2014)Uni employment rate '>
      <layout-options>
        <title>
          <formatted-text>
            <run>(2009-2014)Uni employment rate </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yq_(2009-2014) uni employment rate (itp232_teamevians)' name='federated.0osp06n17fpqzq1azgcpj16kipfd' />
          </datasources>
          <datasource-dependencies datasource='federated.0osp06n17fpqzq1azgcpj16kipfd'>
            <column datatype='real' name='[Employment rate %]' role='measure' type='quantitative' />
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Instituition]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Instituition]' derivation='None' name='[none:Instituition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Employment rate %]' derivation='Sum' name='[sum:Employment rate %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0osp06n17fpqzq1azgcpj16kipfd].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:ok]'>
            <groupfilter from='2010' function='range' level='[none:Year:ok]' to='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:qk]</column>
            <column>[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:ok]</column>
            <column>[federated.0osp06n17fpqzq1azgcpj16kipfd].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Faculty:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0osp06n17fpqzq1azgcpj16kipfd].[sum:Employment rate %:qk]</rows>
        <cols>([federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Instituition:nk] / [federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Faculty:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Courses Offered_Poly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Enrolment in Different Type of Polytechnic Course</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='enrolmentbygender&amp;coursespoly_mabel (itp232_teamevians)' name='federated.173co5b0a3e1e614iuhu01d8hdju' />
            <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.173co5b0a3e1e614iuhu01d8hdju'>
            <column caption='Select Years' datatype='integer' name='[Calculation_770960001586753536]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2010&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_770960001586753536]' derivation='Attribute' name='[attr:Calculation_770960001586753536:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_770960001586753536]' derivation='None' name='[none:Calculation_770960001586753536:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Enrolment]' derivation='Sum' name='[sum:Number of Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.173co5b0a3e1e614iuhu01d8hdju].[Action (Education Type,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Calculation_770960001586753536:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_770960001586753536:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]'>
            <groupfilter function='level-members' level='[none:Type of Course:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Education Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]' />
          </filter>
          <slices>
            <column>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Calculation_770960001586753536:ok]</column>
            <column>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]</column>
            <column>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]</column>
            <column>[federated.173co5b0a3e1e614iuhu01d8hdju].[Action (Education Type,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' value='31' />
            <format attr='font-size' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Education Type:nk]' value='12' />
            <format attr='font-size' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-orientation' data-class='subtotal' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Education Type:nk]' value='0' />
            <format attr='height' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' value='-90' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' />
              <tooltip column='[federated.173co5b0a3e1e614iuhu01d8hdju].[attr:Calculation_770960001586753536:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.173co5b0a3e1e614iuhu01d8hdju].[sum:Number of Enrolment:qk]</rows>
        <cols>([federated.173co5b0a3e1e614iuhu01d8hdju].[none:Education Type:nk] / ([federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk] / [federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Employment Change for each industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='9'>Employment Change of foreigners and residents in </run>
            <run bold='true' fontalignment='1' fontsize='9'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='9'>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</run>
            <run bold='true' fontalignment='1' fontsize='9'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='9'> industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
          </datasources>
          <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
            <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='real' name='[Local]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]'>
            <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Manufacturing&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' scope='rows' value='% Change' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' max='90.099999999999994' min='29.5' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]</rows>
        <cols>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Enrolment by Courses_Uni'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Enrolment in Different Type of University Courses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='enrolmentbygender&amp;coursesuni_mabel (itp232_teamevians)' name='federated.1lzuenn10qywcc1fnlm5t0j8kcb1' />
            <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1lzuenn10qywcc1fnlm5t0j8kcb1'>
            <column caption='Select Years' datatype='integer' name='[Calculation_1052434978362343426]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1052434978362343426]' derivation='Attribute' name='[attr:Calculation_1052434978362343426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1052434978362343426]' derivation='None' name='[none:Calculation_1052434978362343426:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Enrolment]' derivation='Sum' name='[sum:Number of Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[Action (Education Type,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Gender]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[attr:Calculation_1052434978362343426:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Calculation_1052434978362343426:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_1052434978362343426:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Gender:nk]'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]'>
            <groupfilter function='level-members' level='[none:Type of Course:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Education Type:nk]' />
          </filter>
          <slices>
            <column>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Calculation_1052434978362343426:ok]</column>
            <column>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]</column>
            <column>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Gender:nk]</column>
            <column>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[Action (Education Type,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]</column>
            <column>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[attr:Calculation_1052434978362343426:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Education Type:nk]' value='21' />
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]' />
              <tooltip column='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[attr:Calculation_1052434978362343426:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[sum:Number of Enrolment:qk]</rows>
        <cols>([federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Education Type:nk] / ([federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Gender:nk] / [federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Foreigners View (Passes)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='9'>Number of Employed </run>
            <run bold='true' fontalignment='1' fontsize='9' underline='true'>Foreigners</run>
            <run bold='true' fontalignment='1' fontsize='9'> Passes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foreignemployment (new_jl_database)' name='federated.05yfoir07jruab0zjgjk40glzxic' />
          </datasources>
          <datasource-dependencies datasource='federated.05yfoir07jruab0zjgjk40glzxic'>
            <column caption='Employment Pass' datatype='real' name='[EmploymentPass]' role='measure' type='quantitative' />
            <column caption='Other Work Passes' datatype='real' name='[OtherWorkPasses]' role='measure' type='quantitative' />
            <column datatype='real' name='[Spass]' role='measure' type='quantitative' />
            <column caption='Work Permit Pass' datatype='real' name='[WorkPermitPass]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EmploymentPass]' derivation='Sum' name='[sum:EmploymentPass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OtherWorkPasses]' derivation='Sum' name='[sum:OtherWorkPasses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spass]' derivation='Sum' name='[sum:Spass:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WorkPermitPass]' derivation='Sum' name='[sum:WorkPermitPass:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:EmploymentPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:SPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:Spass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:WorkPermitPass:qk]&quot;</bucket>
              <bucket>&quot;[federated.05yfoir07jruab0zjgjk40glzxic].[sum:OtherWorkPasses:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year) 1]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]</column>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year)]</column>
            <column>[federated.05yfoir07jruab0zjgjk40glzxic].[Action (Year) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' field-type='quantitative' max='1200.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='true' />
            <format attr='height' field='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' value='46' />
            <format attr='title' class='0' field='[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]' scope='rows' value='Number of Passes' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.05yfoir07jruab0zjgjk40glzxic].[Multiple Values]</rows>
        <cols>[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D1) Residents &amp; Foreigners Employed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&gt;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'> Residents and Foreigners</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Total:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Employed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='102' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='No Of People' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
            <format attr='width' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='-90' />
            <format attr='font-size' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='Legend' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D1)Enrolment Over the Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Number of Enrolment Over the Years&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
            <datasource name='Parameters' />
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_347621635205959680]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10; &#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Enrolment]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_347621635205959680]' derivation='None' name='[none:Calculation_347621635205959680:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Enrolment]' derivation='Sum' name='[sum:Number of Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Name of Institution,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Name of Institution]' />
              <groupfilter function='level-members' level='[Sex]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Calculation_347621635205959680:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' />
          </filter>
          <slices>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Name of Institution,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender,Year)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' value='Type'>
              <formatted-text>
                <run>Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[sum:Number of Enrolment:qk]</rows>
        <cols>([federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk] * [federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D1)Enrolment from Different Institutions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Enrolment from Different Institutions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
            <datasource name='Parameters' />
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_347621635205959680]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10; &#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Enrolment]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_347621635205959680]' derivation='None' name='[none:Calculation_347621635205959680:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Enrolment]' derivation='Sum' name='[sum:Number of Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Sex]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Calculation_347621635205959680:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' />
          </filter>
          <slices>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Year)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender,Year)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' value='59' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' value='65' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' value='41' />
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[sum:Number of Enrolment:qk]</rows>
        <cols>([federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk] / ([federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk] / [federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D1)Gender Distribution (Enrolment)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Gender Distribution for Enrolment </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
            <datasource name='Parameters' />
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_347621635205959680]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10; &#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Enrolment]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_347621635205959680]' derivation='None' name='[none:Calculation_347621635205959680:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Enrolment]' derivation='Sum' name='[sum:Number of Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Name of Institution,Gender)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Name of Institution]' />
              <groupfilter function='level-members' level='[Sex]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Year)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Calculation_347621635205959680:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' />
          </filter>
          <sort class='manual' column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Male&quot;</bucket>
              <bucket>&quot;Female&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Year)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[Action (Education Type,Name of Institution,Gender)]</column>
            <column>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1u7lmzt0tln6cf1fsow230pur7jk].[sum:Number of Enrolment:qk]</rows>
        <cols>([federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk] * [federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Employed Highest Education'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='11'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontsize='11'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='11'> Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column caption='Upper Sec' datatype='real' name='[UpperSec]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UpperSec]' derivation='Sum' name='[sum:UpperSec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:UpperSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Action (Year)]'>
            <groupfilter function='member' level='[Year]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Residents' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Long Term Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11'>Long Term Unemployment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='longtermunemployedrate (new_jl_database)' name='federated.1pahbkx17whot71agmucm1p3dln0' />
          </datasources>
          <datasource-dependencies datasource='federated.1pahbkx17whot71agmucm1p3dln0'>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sec]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sec]' derivation='Sum' name='[sum:Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Sec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Dip:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Deg:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Sec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Dip:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Deg:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Degree:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pahbkx17whot71agmucm1p3dln0].[sum:Diploma:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1pahbkx17whot71agmucm1p3dln0].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]</column>
            <column>[federated.1pahbkx17whot71agmucm1p3dln0].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='% Rate' />
            <format attr='subtitle' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pahbkx17whot71agmucm1p3dln0].[Multiple Values]</rows>
        <cols>[federated.1pahbkx17whot71agmucm1p3dln0].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Number of Graduates by Course_poly'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Graduates from Different Type of Polytechnic Courses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesbycourse&amp;genderpoly_mabel (itp232_teamevians)' name='federated.1h7v2m11diyhbz13axnid0vj3q1i' />
            <datasource name='Parameters' />
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h7v2m11diyhbz13axnid0vj3q1i'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_1052434978356871168]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Graduates]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1052434978356871168]' derivation='Attribute' name='[attr:Calculation_1052434978356871168:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1052434978356871168]' derivation='None' name='[none:Calculation_1052434978356871168:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Graduates]' derivation='Sum' name='[sum:Number of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Calculation_1052434978356871168:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Calculation_1052434978356871168:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_1052434978356871168:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]' filter-group='15'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]'>
            <groupfilter function='level-members' level='[none:Type of Course:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]</column>
            <column>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]</column>
            <column>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Calculation_1052434978356871168:ok]</column>
            <column>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[Action (Gender)]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' value='27' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[sum:Number of Graduates:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' />
              <lod column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[attr:Calculation_1052434978356871168:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[sum:Number of Graduates:qk]</rows>
        <cols>([federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Education Type:nk] / ([federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk] / [federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Number of Gradutes by Course_Uni'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Graduates from Different Type of University Courses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesbycourse&amp;genderuni_mabel (itp232_teamevians)' name='federated.193r8p40646y5i1eep8lk188l5vi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.193r8p40646y5i1eep8lk188l5vi'>
            <column caption='Select Years' datatype='integer' name='[Calculation_1052434978361569281]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Graduates]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1052434978361569281]' derivation='Attribute' name='[attr:Calculation_1052434978361569281:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1052434978361569281]' derivation='None' name='[none:Calculation_1052434978361569281:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Graduates]' derivation='Sum' name='[sum:Number of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193r8p40646y5i1eep8lk188l5vi].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Calculation_1052434978361569281:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_1052434978361569281:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]' filter-group='16'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]' />
          </filter>
          <slices>
            <column>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]</column>
            <column>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]</column>
            <column>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Calculation_1052434978361569281:ok]</column>
            <column>[federated.193r8p40646y5i1eep8lk188l5vi].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' value='148' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' />
              <tooltip column='[federated.193r8p40646y5i1eep8lk188l5vi].[attr:Calculation_1052434978361569281:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.193r8p40646y5i1eep8lk188l5vi].[sum:Number of Graduates:qk]</rows>
        <cols>([federated.193r8p40646y5i1eep8lk188l5vi].[none:Education Type:nk] / ([federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk] / [federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) Trend of Residents'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Trend of </run>
            <run bold='true' fontalignment='1' fontsize='11'>&lt;</run>
            <run bold='true' fontalignment='1' fontsize='11'>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</run>
            <run bold='true' fontalignment='1' fontsize='11'>&gt;</run>
            <run bold='true' fontalignment='1' fontsize='11'> Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Residents]' derivation='Sum' name='[sum:Residents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2) UnEmployement Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Unemloyment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='unemploymentrate (new_jl_database)' name='federated.0u8qeny154dbsz15ozitc1ykmtin' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8qeny154dbsz15ozitc1ykmtin'>
            <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
            </column>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column caption='Lower Sec' datatype='real' name='[LowerSec]' role='measure' type='quantitative' />
            <column caption='Post Sec' datatype='real' name='[PostSec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Primary]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sec]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987990724611]' derivation='Sum' name='[sum:Calculation_939844987990724611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LowerSec]' derivation='Sum' name='[sum:LowerSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostSec]' derivation='Sum' name='[sum:PostSec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Primary]' derivation='Sum' name='[sum:Primary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sec]' derivation='Sum' name='[sum:Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Primary:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:LowerSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Sec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:PostSec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Primary:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:LowerSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Sec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:PostSec:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Diploma:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Degree:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</column>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' field-type='quantitative' max='4.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='% Rate' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0u8qeny154dbsz15ozitc1ykmtin].[Multiple Values]</rows>
        <cols>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D2)Gender Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Gender Distribution of Graduates&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noofgrad (itp232_teamevians)' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
            <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Edu Type' datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Graduates]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_895090458157256705]' derivation='None' name='[none:Calculation_895090458157256705:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Graduates]' derivation='Sum' name='[sum:Number of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' />
          </filter>
          <slices>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]' value='Select Years'>
              <formatted-text>
                <run>Select Years</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='20'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='789' />
                <format attr='maxwidth' value='789' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[sum:Number of Graduates:qk]</rows>
        <cols>([federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk] * [federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D2)Gradutes from Different Institutions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Graduates from Different Institutions&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noofgrad (itp232_teamevians)' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' />
            <datasource caption='graduatesbycourse&amp;genderuni_mabel (itp232_teamevians)' name='federated.193r8p40646y5i1eep8lk188l5vi' />
            <datasource name='Parameters' />
            <datasource caption='graduatesbycourse&amp;genderpoly_mabel (itp232_teamevians)' name='federated.1h7v2m11diyhbz13axnid0vj3q1i' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.193r8p40646y5i1eep8lk188l5vi'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
            <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Edu Type' datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Graduates]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_895090458157256705]' derivation='None' name='[none:Calculation_895090458157256705:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Graduates]' derivation='Sum' name='[sum:Number of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h7v2m11diyhbz13axnid0vj3q1i'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]' filter-group='16'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[Action (Edu Type,Gender,Year) 1]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]' filter-group='15'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' />
          </filter>
          <slices>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[Action (Edu Type,Gender,Year) 1]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</column>
            <column>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]</column>
            <column>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' value='29' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[sum:Number of Graduates:qk]</rows>
        <cols>([federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk] / ([federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk] / [federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D2)Number of Graduates'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Number of Graduates over the Years&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noofgrad (itp232_teamevians)' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
            <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Edu Type' datatype='string' name='[Education Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Graduates]' role='measure' type='quantitative' />
            <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_895090458157256705]' derivation='None' name='[none:Calculation_895090458157256705:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Graduates]' derivation='Sum' name='[sum:Number of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[Action (Edu Type,Gender,Year) 1]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Education Type]' />
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' filter-group='13'>
            <groupfilter function='level-members' level='[none:Education Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Name of Institution:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]</column>
            <column>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[Action (Edu Type,Gender,Year) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Edu Type:&#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</run>
                <run fontcolor='#787878'>&gt;</run>
                <run fontcolor='#787878'> &#10;Year:&#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk]</run>
                <run fontcolor='#787878'>&gt;</run>
                <run fontcolor='#787878'>&#10;Gender: &#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</run>
                <run fontcolor='#787878'>&gt;</run>
                <run fontcolor='#787878'>&#10;No Of Graduates:&#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[sum:Number of Graduates:qk]</run>
                <run fontcolor='#787878'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='352' />
                <format attr='maxwidth' value='352' />
                <format attr='minheight' value='183' />
                <format attr='maxheight' value='183' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='352' />
                <format attr='maxwidth' value='352' />
                <format attr='minheight' value='223' />
                <format attr='maxheight' value='223' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='352' />
                <format attr='maxwidth' value='352' />
                <format attr='minheight' value='183' />
                <format attr='maxheight' value='183' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='352' />
                <format attr='maxwidth' value='352' />
                <format attr='minheight' value='183' />
                <format attr='maxheight' value='183' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[sum:Number of Graduates:qk]</rows>
        <cols>([federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk] * [federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Degree Graduates (Words)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Degree</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[NP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NUS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NYP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RP]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[SIT]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[SMU]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SP]' role='measure' type='quantitative' />
            <column aggregation='Count' caption='Sutd' datatype='integer' datatype-customized='true' name='[SUTD]' role='measure' type='ordinal' />
            <column datatype='integer' name='[TP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NP]' derivation='Sum' name='[sum:NP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUS]' derivation='Sum' name='[sum:NUS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NYP]' derivation='Sum' name='[sum:NYP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RP]' derivation='Sum' name='[sum:RP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SIT]' derivation='Sum' name='[sum:SIT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SMU]' derivation='Sum' name='[sum:SMU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SP]' derivation='Sum' name='[sum:SP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUTD]' derivation='Sum' name='[sum:SUTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TP]' derivation='Sum' name='[sum:TP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NUS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SMU:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SUTD:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NYP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:RP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:TP:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NUS:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SIT:qk]&quot;</bucket>
              <bucket>&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SMU:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3) Diploma Graduates (Words)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Diploma</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[NP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[NYP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[TP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NP]' derivation='Sum' name='[sum:NP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NYP]' derivation='Sum' name='[sum:NYP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RP]' derivation='Sum' name='[sum:RP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SP]' derivation='Sum' name='[sum:SP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TP]' derivation='Sum' name='[sum:TP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:NYP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:RP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:SP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:TP:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3) Graduates [Chart]'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Number of Diploma &amp; Degree Graduates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='graduatesnumber (new_jl_database)' name='federated.14miaw50iyirw316i6zjx0h6q6qc' />
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.14miaw50iyirw316i6zjx0h6q6qc'>
            <column datatype='integer' name='[Poly]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Uni]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Poly]' derivation='Sum' name='[sum:Poly:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Uni]' derivation='Sum' name='[sum:Uni:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:Poly:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14miaw50iyirw316i6zjx0h6q6qc].[sum:Uni:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.14miaw50iyirw316i6zjx0h6q6qc].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</column>
            <column>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Action (Year)]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14miaw50iyirw316i6zjx0h6q6qc].[Multiple Values]</rows>
        <cols>[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Industry Size Figures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Industry Size Figures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Job Vacancies]' role='measure' type='quantitative' />
            <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub Category]' derivation='None' name='[none:Sub Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Job Vacancies]' derivation='Sum' name='[sum:Number of Job Vacancies:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[Action (Sub Category,Industry)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sub Category]' />
              <groupfilter function='level-members' level='[lndustry]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Occupational Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[Action (Sub Category,Industry)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' />
              <text column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk] / [federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3) Number of People Employed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Employed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' max='750.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Graduates' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='Select year to view:'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Select year to view:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D3) Number of People Unemployed'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' filter-group='5'>
            <groupfilter function='member' level='[none:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' max='30.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='Number of Graduates' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' value='Select year to view:'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Select year to view:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk] / [federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='(D3)Annual JV'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Annual Job Vacancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='overalljobvacanciesnoannual (itp232_teamevians)' name='federated.0fh2wh0162pgdo14eqw5a0pa8mgm' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0fh2wh0162pgdo14eqw5a0pa8mgm'>
            <column caption='Select Years' datatype='integer' name='[Calculation_347621635207565313]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;end' />
            </column>
            <column datatype='real' name='[Job Vacancy Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number Of Job Vacancies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Job Vacancy Rate]' derivation='Avg' name='[avg:Job Vacancy Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_347621635207565313]' derivation='None' name='[none:Calculation_347621635207565313:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number Of Job Vacancies]' derivation='Sum' name='[sum:Number Of Job Vacancies:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[none:Calculation_347621635207565313:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[sum:Number Of Job Vacancies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='solid' />
                <format attr='stroke-color' value='#b4b4b467' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[avg:Job Vacancy Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='solid' />
                <format attr='stroke-color' value='#b4b4b467' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[sum:Number Of Job Vacancies:qk] + [federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[avg:Job Vacancy Rate:qk])</rows>
        <cols>[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='(D3)Industry Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Industry Size</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Job Vacancy Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Job Vacancies]' role='measure' type='quantitative' />
            <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Job Vacancy Rate]' derivation='Avg' name='[avg:Job Vacancy Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub Category]' derivation='None' name='[none:Sub Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Job Vacancies]' derivation='Sum' name='[sum:Number of Job Vacancies:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Occupational Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' value='228' />
            <format attr='height' field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]' value='29' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' />
              <lod column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[avg:Job Vacancy Rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk] / [federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='(D3)JV by Industry &amp; Sub Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Job Vacancy By Industry &amp; Sub-Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Job Vacancy Rate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Job Vacancies]' role='measure' type='quantitative' />
            <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Job Vacancy Rate]' derivation='Avg' name='[avg:Job Vacancy Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub Category]' derivation='None' name='[none:Sub Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Job Vacancies]' derivation='Sum' name='[sum:Number of Job Vacancies:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Occupational Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]'>
            <groupfilter function='level-members' level='[none:lndustry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' value='#b4b4b44b' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[avg:Job Vacancy Rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='solid' />
                <format attr='stroke-color' value='#b4b4b467' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='solid' />
                <format attr='stroke-color' value='#b4b4b467' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk] + [federated.0vft1k709xhyb31dxb9hl0lhr28y].[avg:Job Vacancy Rate:qk])</rows>
        <cols>(([federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk] / [federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]) * [federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Employment Change'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tempus Sans ITC' fontsize='11'>Employment Change based on Types of Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
          </datasources>
          <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
            <column datatype='real' name='[Foreign]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='real' name='[Local]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Foreign]' derivation='Sum' name='[sum:Foreign:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local]' derivation='Sum' name='[sum:Local:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]'>
            <groupfilter function='level-members' level='[Year]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]'>
            <groupfilter function='member' level='[none:Industry:nk]' member='&quot;Construction&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Action (Year)]</column>
            <column>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='Foreigners' />
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='Residents' />
            <format attr='subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' center='0.0' field='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='3' x-axis-name='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</rows>
        <cols>([federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk] + [federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Job Vacancy by Industry &amp; Occupational Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Job Vacancy by Industry &amp; Occupational Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
            <datasource name='Parameters' />
            <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' name='federated.00zutmp1ui2e8s12xk1nm03g6374' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00zutmp1ui2e8s12xk1nm03g6374'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_877076067992436737]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_877076067992436737]' derivation='None' name='[none:Calculation_877076067992436737:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Job Vacancies]' role='measure' type='quantitative' />
            <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub Category]' derivation='None' name='[none:Sub Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Job Vacancies]' derivation='Sum' name='[sum:Number of Job Vacancies:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_877076067992436737:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' />
          </filter>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Occupational Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]'>
            <groupfilter from='&quot;Accomodation &amp; Food&quot;' function='range' level='[none:Sub Category:nk]' to='&quot;Wholesale &amp; Retail Trade&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]'>
            <groupfilter from='&quot;Construction&quot;' function='range' level='[none:lndustry:nk]' to='&quot;Services&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]</rows>
        <cols>([federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk] / [federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Recruitment Rate '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Recruitment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' name='federated.00zutmp1ui2e8s12xk1nm03g6374' />
            <datasource name='Parameters' />
            <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.00zutmp1ui2e8s12xk1nm03g6374'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_877076067992436737]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column caption='Occupational Group1' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Recruitment Rate]' role='measure' type='quantitative' />
            <column caption='Sub Industry' datatype='string' name='[Sub Industry]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Recruitment Rate]' derivation='Avg' name='[avg:Recruitment Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_877076067992436737]' derivation='None' name='[none:Calculation_877076067992436737:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub Industry]' derivation='None' name='[none:Sub Industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
            <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[Action (Occupational Group,Industry)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Occupational Group]' />
              <groupfilter function='level-members' level='[Industry]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_877076067992436737:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' />
          </filter>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]' />
          </filter>
          <sort class='manual' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;PMETs&quot;</bucket>
              <bucket>&quot;Clerical, Sales &amp; Services Workers&quot;</bucket>
              <bucket>&quot;Production &amp; Related Workers&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk]'>
            <groupfilter function='level-members' level='[none:Sub Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_730427605007749120:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' />
          </filter>
          <slices>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]</column>
            <column>[federated.00zutmp1ui2e8s12xk1nm03g6374].[Action (Occupational Group,Industry)]</column>
            <column>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' value='79' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='height' field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk]' value='19' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-style' value='normal' />
            <format attr='text-decoration' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='175' />
                <format attr='maxwidth' value='175' />
                <format attr='minheight' value='239' />
                <format attr='maxheight' value='239' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00zutmp1ui2e8s12xk1nm03g6374].[avg:Recruitment Rate:qk]</rows>
        <cols>([federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk] / ([federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk] / [federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Foreigners'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='11' underline='true'>Foreigners</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_470907676544786432]' derivation='Sum' name='[sum:Calculation_470907676544786432:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_470907676544786432:qk]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Local'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11' underline='true'>Residents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Degree]' derivation='Sum' name='[sum:Degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diploma]' derivation='Sum' name='[sum:Diploma:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Degree:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Diploma:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' value='Legend'>
              <formatted-text>
                <run>Legend</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[Multiple Values]</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Seriousness'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='10'>Trend of % Seriousness</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
            <column caption='Foreigners' datatype='real' name='[Calculation_470907676544786432]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total] - [Residents]' />
            </column>
            <column caption='% Serious (Foreign)' datatype='real' name='[Calculation_939844987988865024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_470907676544786432]/[ForeignLF]) * 100' />
            </column>
            <column caption='% Serious (Diploma)' datatype='real' name='[Calculation_939844987989004289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Diploma]/[DipLF]) * 100' />
            </column>
            <column caption='% Serious (Degree)' datatype='real' name='[Calculation_939844987989123074]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Degree]/[DegLF]) * 100' />
            </column>
            <column caption='Deg LF' datatype='real' name='[DegLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Degree]' role='measure' type='quantitative' />
            <column caption='Dip LF' datatype='real' name='[DipLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Diploma]' role='measure' type='quantitative' />
            <column caption='Foreign LF' datatype='real' name='[ForeignLF]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987988865024]' derivation='Sum' name='[sum:Calculation_939844987988865024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_939844987989004289]' derivation='Sum' name='[sum:Calculation_939844987989004289:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_939844987989123074]' derivation='Sum' name='[sum:Calculation_939844987989123074:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='&quot;Unemployed&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]</column>
            <column>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]' scope='rows' value='Diploma' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]' scope='rows' value='Degree' />
            <format attr='title' class='0' field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]' scope='rows' value='Foreigners' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989004289:qk] + ([federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987989123074:qk] + [federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Calculation_939844987988865024:qk]))</rows>
        <cols>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D4) Trend of Unemployment Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tempus Sans ITC' fontsize='10'>Trend of Unemployment Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='unemploymentrate (new_jl_database)' name='federated.0u8qeny154dbsz15ozitc1ykmtin' />
          </datasources>
          <datasource-dependencies datasource='federated.0u8qeny154dbsz15ozitc1ykmtin'>
            <column caption='Foreigners' datatype='real' name='[Calculation_939844987990724611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Total] * 2) - [Residents]' />
            </column>
            <column caption='Degree' datatype='real' name='[Deg]' role='measure' type='quantitative' />
            <column caption='Diploma' datatype='real' name='[Dip]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residents]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_939844987990724611]' derivation='Sum' name='[sum:Calculation_939844987990724611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deg]' derivation='Sum' name='[sum:Deg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dip]' derivation='Sum' name='[sum:Dip:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0u8qeny154dbsz15ozitc1ykmtin].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Dip:qk] + ([federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Deg:qk] + [federated.0u8qeny154dbsz15ozitc1ykmtin].[sum:Calculation_939844987990724611:qk]))</rows>
        <cols>[federated.0u8qeny154dbsz15ozitc1ykmtin].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='(D5) Change in employment rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Change in Employment Rate in Industries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='changeinemploymentbyindustry_mabel (itp232_teamevians)' name='federated.1rr7kee148ndz41a3lzd21ui9oqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rr7kee148ndz41a3lzd21ui9oqf'>
            <column caption='Select Years' datatype='integer' name='[Calculation_877076068000169987]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Employed People]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_877076068000169987]' derivation='None' name='[none:Calculation_877076068000169987:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Employed People]' derivation='Sum' name='[sum:Number of Employed People:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Calculation_877076068000169987:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]' />
          </filter>
          <filter class='categorical' column='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]'>
            <groupfilter function='level-members' level='[none:Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]</column>
            <column>[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' value='189' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rr7kee148ndz41a3lzd21ui9oqf].[sum:Number of Employed People:qk]</rows>
        <cols>[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='(D5) Employment Rate in different qualifications'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Employment Rate with Highest Qualifications</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employedresidentsbyqualifications_mabel (itp232_teamevians)' name='federated.0tnpyf0024rc1416s2exz120vj26' />
            <datasource name='Parameters' />
            <datasource caption='changeinemploymentbyindustry_mabel (itp232_teamevians)' name='federated.1rr7kee148ndz41a3lzd21ui9oqf' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Years_Parameter' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1960'>
              <calculation class='tableau' formula='1960' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0tnpyf0024rc1416s2exz120vj26'>
            <column caption='Select Years' datatype='integer' name='[Calculation_877076067998408706]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Gender' datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' datatype-customized='true' name='[Number of Employed Residents]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_877076067998408706]' derivation='None' name='[none:Calculation_877076067998408706:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Employed Residents]' derivation='Sum' name='[sum:Number of Employed Residents:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rr7kee148ndz41a3lzd21ui9oqf'>
            <column caption='Select Years' datatype='integer' name='[Calculation_877076068000169987]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_877076068000169987]' derivation='None' name='[none:Calculation_877076068000169987:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Calculation_877076067998408706:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_877076067998408706:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Calculation_877076068000169987:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            <target field='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Calculation_877076067998408706:ok]' />
          </filter>
          <slices>
            <column>[federated.0tnpyf0024rc1416s2exz120vj26].[none:Calculation_877076067998408706:ok]</column>
            <column>[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]</column>
            <column>[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tnpyf0024rc1416s2exz120vj26].[sum:Number of Employed Residents:qk]</rows>
        <cols>([federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk] * [federated.0tnpyf0024rc1416s2exz120vj26].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_median_gross_monthly_income_ft_pt (itp232_teamevians)' name='federated.1u0wll11udgl4l1f8jc0010w1a4z' />
          </datasources>
          <datasource-dependencies datasource='federated.1u0wll11udgl4l1f8jc0010w1a4z'>
            <column datatype='integer' name='[Full Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Part Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Full Time]' derivation='Avg' name='[avg:Full Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Part Time]' derivation='Avg' name='[avg:Part Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' field-type='quantitative' max='5000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' field-type='quantitative' fold='true' max='5000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk] + [federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk])</rows>
        <cols>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2449.0</value>
                <value>2006</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3949.0</value>
                <value>2015</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>565.0</value>
                <value>2006</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>943.0</value>
                <value>2015</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee (Anually)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
            <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_992199331712028673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Annual]' derivation='Avg' name='[avg:Annual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737256247304]' derivation='None' name='[none:Calculation_942659737256247304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_992199331712028673]' derivation='Sum' name='[sum:Calculation_992199331712028673:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737256247304:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' field-type='quantitative' max='7000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' value='80' />
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' />
              <lod column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='1' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='2' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]</rows>
        <cols>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee (per Quarter)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
            <column aggregation='Sum' datatype='integer' name='[1st Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[2nd Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[3rd Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[4th Quarter]' role='dimension' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[1st Quarter]' derivation='Avg' name='[avg:1st Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd Quarter]' derivation='Avg' name='[avg:2nd Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd Quarter]' derivation='Avg' name='[avg:3rd Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th Quarter]' derivation='Avg' name='[avg:4th Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737256247304]' derivation='None' name='[none:Calculation_942659737256247304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:1st Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:2nd Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:3rd Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:4th Quarter:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737256247304:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' field-type='quantitative' max='7000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]</rows>
        <cols>([federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk] / [federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee Rate of Change in %'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' name='federated.1apdhlk1d6ie281a9br7h0175d2q' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1apdhlk1d6ie281a9br7h0175d2q'>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[1st Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[2nd Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[3rd Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[4th Quarter Change (%)]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737257639945]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[1st Quarter Change (%)]' derivation='Avg' name='[avg:1st Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd Quarter Change (%)]' derivation='Avg' name='[avg:2nd Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd Quarter Change (%)]' derivation='Avg' name='[avg:3rd Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th Quarter Change (%)]' derivation='Avg' name='[avg:4th Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737257639945]' derivation='None' name='[none:Calculation_942659737257639945:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737257639945:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk]' value='127' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk]' value='88' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' num-steps='2' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk] + ([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk] + ([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk] + [federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk])))</rows>
        <cols>([federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk] / [federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Average salary of Polytechnic Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489140781056]' derivation='Sum' name='[sum:Calculation_922956489140781056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]'>
            <groupfilter function='level-members' level='[Course Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' value='136' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='68' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average salary of University Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489142702081]' derivation='Sum' name='[sum:Calculation_922956489142702081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]'>
            <groupfilter function='level-members' level='[Faculty]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-pattern' id='refline3' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-pane' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='2' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='3' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline3' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>([federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk] / [federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Basic Wage Change by Industry'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' name='federated.0dapth9192cwx41e23ppn1meqf8l' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dapth9192cwx41e23ppn1meqf8l'>
            <column datatype='real' name='[Basic wage change by industry (cents)]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161739481090]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Basic wage change by industry (cents)]' derivation='Avg' name='[avg:Basic wage change by industry (cents):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_645422161739481090]' derivation='None' name='[none:Calculation_645422161739481090:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dapth9192cwx41e23ppn1meqf8l].[Action (Occupations)]'>
            <groupfilter function='level-members' level='[Occupations]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]'>
            <groupfilter function='member' level='[none:Calculation_645422161739481090:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]</column>
            <column>[federated.0dapth9192cwx41e23ppn1meqf8l].[Action (Occupations)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' field-type='quantitative' max='10.0' min='-6.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]' value='55' />
            <format attr='width' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' max='7.0' min='-5.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' />
              <size column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]</rows>
        <cols>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Employment rate of Poly and Uni Graduates '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Employment rate of Poly and Uni Graduates </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='yq_uni grads vs poly grads employment rate_v1 (csv version) (itp232_teamevians)' name='federated.1md79lv13dphog0zzqquv01dsv6w' />
          </datasources>
          <datasource-dependencies datasource='federated.1md79lv13dphog0zzqquv01dsv6w'>
            <column datatype='string' name='[Institution]' role='dimension' type='nominal' />
            <column datatype='real' name='[Proportion of Employment of Graduates]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Institution]' derivation='None' name='[none:Institution:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Proportion of Employment of Graduates]' derivation='Sum' name='[sum:Proportion of Employment of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[sum:Proportion of Employment of Graduates:qk]' field-type='quantitative' max='100.0' min='80.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[sum:Proportion of Employment of Graduates:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[sum:Proportion of Employment of Graduates:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Year:qk]' field-type='quantitative' max='2015' min='2009' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Institution:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1md79lv13dphog0zzqquv01dsv6w].[sum:Proportion of Employment of Graduates:qk]</rows>
        <cols>[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_expenditure (itp232_teamevians)' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' />
          </datasources>
          <datasource-dependencies datasource='federated.0oo26sn1vrd6z11b5izd71pxt88j'>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operating Expenditure]' derivation='Sum' name='[sum:Operating Expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Culture, Community and Youth&quot;' />
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Info-Communications and Media Development&quot;' />
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Manpower (Financial Security)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' value='84' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='76' />
            <format attr='width' field='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.94453036785125732' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</rows>
        <cols>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[sum:Operating Expenditure:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure '>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
            <column caption='Prior Year' datatype='boolean' name='[Calculation_1141381071504027650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&lt;2' />
            </column>
            <column caption='Last Year Volume' datatype='integer' name='[Calculation_1141381071504158723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_947726287379984388],[Expenditure],NULL))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Prior Year Volume' datatype='integer' name='[Calculation_1141381071505260549]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_1141381071504027650],[Expenditure],null))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Change New' datatype='integer' name='[Calculation_1141381071505543174]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='([Calculation_1141381071504158723]-[Calculation_1141381071505260549])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Change' datatype='real' default-format='p0.0%' name='[Calculation_1141381071512084488]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Calculation_1141381071505543174]/[Calculation_1141381071505260549]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Header' datatype='string' name='[Calculation_1141381071514488842]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Last Year as of: &quot; +str([Calculation_947726287379755010])' />
            </column>
            <column aggregation='Count' caption='Max Year' datatype='datetime' datatype-customized='true' name='[Calculation_947726287379755010]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETIME({MAX([Year])})' />
            </column>
            <column caption='Last Year' datatype='boolean' name='[Calculation_947726287379984388]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year], [Calculation_947726287379755010])&lt;1' />
            </column>
            <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1141381071514488842]' derivation='None' name='[none:Calculation_1141381071514488842:nk]' pivot='key' type='nominal' />
            <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expenditure]' derivation='Sum' name='[sum:Expenditure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1141381071504158723]' derivation='User' name='[usr:Calculation_1141381071504158723:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1141381071505260549]' derivation='User' name='[usr:Calculation_1141381071505260549:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1141381071512084488]' derivation='User' name='[usr:Calculation_1141381071512084488:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071505543174]' ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071504158723]' ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071505260549]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]'>
            <groupfilter function='member' level='[none:Calculation_1141381071514488842:nk]' member='&quot;Last Year as of: Jan 1 2015 12:00AM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Educational Institutions:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Educational Institutions:nk]' member='&quot;Others&quot;' />
                <groupfilter function='member' level='[none:Educational Institutions:nk]' member='&quot;Primary Schools&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Universities&quot;</bucket>
              <bucket>&quot;Polytechnics&quot;</bucket>
              <bucket>&quot;Secondary Schools&quot;</bucket>
              <bucket>&quot;Primary Schools&quot;</bucket>
              <bucket>&quot;Others&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' included-values='in-range'>
            <min>712732</min>
            <max>11400000</max>
          </filter>
          <slices>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</column>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[:Measure Names]</column>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' field-type='quantitative' max='3098974' min='589102' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' value='176' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' value='220' />
            <format attr='height-header' value='60' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok]' value='160' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok]' value='148' />
            <format attr='height' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]' value='56' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071512084488:ok:1]' value='156' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok]' value='right' />
            <format attr='text-align' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok]' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk] / ([federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok] / ([federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok] / [federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071512084488:ok:1]))) * [federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk])</rows>
        <cols>([federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk] * [federated.1i5nz8t0ykkxjd13yybds0mas423].[tyr:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure by Institutions'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
            <column caption='Institutions Filter' datatype='boolean' name='[Calculation_776026551146143744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 14]=[Educational Institutions] OR [Parameters].[Parameter 14]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_776026551146143744]' derivation='None' name='[none:Calculation_776026551146143744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Expenditure]' derivation='Sum' name='[sum:Expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_776026551146143744:nk]'>
            <groupfilter function='member' level='[none:Calculation_776026551146143744:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_776026551146143744:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' />
              <lod column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</rows>
        <cols>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Graduates who prefer Part Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_graduates_prefer_part_time (itp232_teamevians)' name='federated.1il27gc0jhlnda1fgoyg40ewddvb' />
          </datasources>
          <datasource-dependencies datasource='federated.1il27gc0jhlnda1fgoyg40ewddvb'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Female]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Male]' role='measure' type='quantitative' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Female]' derivation='Sum' name='[sum:Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Male]' derivation='Sum' name='[sum:Male:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[none:Age Range:nk]' value='101' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.59270715713500977' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.59270715713500977' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk] + [federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk])</rows>
        <cols>[federated.1il27gc0jhlnda1fgoyg40ewddvb].[none:Age Range:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Industry Salaries (Year &lt; 5)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
          </datasources>
          <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Max. Salary]' derivation='Avg' name='[avg:Max. Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min. Salary]' derivation='Avg' name='[avg:Min. Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' value='189' />
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
            <format attr='height' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.66966849565505981' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk] + [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk])</rows>
        <cols>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk] / [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Industry Salaries (Year &gt; 5)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
          </datasources>
          <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Min. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]'>
            <groupfilter function='level-members' level='[Industry]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]'>
            <groupfilter function='level-members' level='[none:Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]</column>
            <column>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.55972373485565186' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk] + [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk])</rows>
        <cols>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk] / [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Industry with Wage Increase'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_with_best_wage_increase (itp232_teamevians)' name='federated.05b65bu1f20hlw15pm1np0bjehoj' />
          </datasources>
          <datasource-dependencies datasource='federated.05b65bu1f20hlw15pm1np0bjehoj'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Possible Wage Increase]' role='measure' type='quantitative' />
            <column-instance column='[Possible Wage Increase]' derivation='Avg' name='[avg:Possible Wage Increase:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' field-type='quantitative' max='53000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' value='460' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]</rows>
        <cols>[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' name='federated.0q93mpa1twersg183rr751s9dy7h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0q93mpa1twersg183rr751s9dy7h'>
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoom in Value' datatype='integer' name='[Calculation_922956489143459842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Salary]' derivation='Avg' name='[avg:Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489143459842]' derivation='Sum' name='[sum:Calculation_922956489143459842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Calculation_741686603181281281:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='60' />
            <format attr='height' field='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' />
              <lod column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' z-order='1' />
            <reference-line axis-column='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]</rows>
        <cols>([federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk] / [federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='No. of Graduates from Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' name='federated.1a2otfp1j4hke7112gdjq18gfoas' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1a2otfp1j4hke7112gdjq18gfoas'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737254830086]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737254830086]' derivation='None' name='[none:Calculation_942659737254830086:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[No. of Graduates]' derivation='Sum' name='[sum:No. of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Calculation_942659737254830086:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737254830086:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Calculation_942659737254830086:nk]</column>
            <column>[federated.1a2otfp1j4hke7112gdjq18gfoas].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='48' />
            <format attr='height-header' value='44' />
            <format attr='width' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='208' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</rows>
        <cols>[federated.1a2otfp1j4hke7112gdjq18gfoas].[sum:No. of Graduates:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Average salary of Poly Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Avg Salary per Course' datatype='real' name='[Calculation_741686603187695620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({INCLUDE [Course] : sum([Median Monthly Gross Starting Salary ($)])})' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_741686603187695620]' derivation='User' name='[usr:Calculation_741686603187695620:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' field-type='quantitative' fold='true' max='10000.0' min='0.0' range-type='fixed' scope='cols' synchronized='true' type='space' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' value='117' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' value='117' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='55' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='2' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</rows>
        <cols>([federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk] + [federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Average salary of Uni Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Avg Salary per Faculty (Uni)' datatype='real' name='[Calculation_741686603192209415]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({ INCLUDE [Qualification] : SUM([Average Salary ($)]) })' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_741686603192209415]' derivation='User' name='[usr:Calculation_741686603192209415:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Exclusions (Faculty,Qualification)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Faculty:nk]' />
                <groupfilter function='level-members' level='[none:Qualification:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Arts&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Arts (Architecture)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Computing&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computational Biology)&quot;' />
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computer Engineering)&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Design&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Building)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Engineering&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Electrical &amp; Electronic Engineering &amp; Economics&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Information Technology&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computational Biology)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Science&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Computational Biology)&quot;' />
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Nursing) (Hons)&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Exclusions (Faculty,Qualification)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' field-type='quantitative' fold='true' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='61' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='236' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' />
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</rows>
        <cols>([federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk] + [federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Poly Salary'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]'>
            <groupfilter function='level-members' level='[Course Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Uni Salary'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]'>
            <groupfilter function='level-members' level='[Faculty]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='6000.0' min='-293.04208563533194' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='string' name='[Fresh Graduate]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fresh Graduate]' derivation='None' name='[none:Fresh Graduate:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course)]'>
            <groupfilter function='level-members' level='[Course]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Fresh Graduate:nk]' />
              <groupfilter function='member' level='[none:Fresh Graduate:nk]' member='&quot;Fresh Graduate&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' value='89' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' value='1060' />
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='292' />
            <format attr='height-header' value='56' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]' value='44' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk] / [federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk])</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Enrolment'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_poly_enrolment (itp232_teamevians)' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2iv9z130aagi18y0udj1x2q6yk'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253560322]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Poly Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Polytechnic]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737253560322]' derivation='None' name='[none:Calculation_942659737253560322:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Polytechnic]' derivation='None' name='[none:Polytechnic:nk]' pivot='key' type='nominal' />
            <column-instance column='[Poly Enrolment]' derivation='Sum' name='[sum:Poly Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Calculation_942659737253560322:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737253560322:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Calculation_942659737253560322:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[sum:Poly Enrolment:qk]</rows>
        <cols>([federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk] / [federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Polytechnic:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Salary (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year of Survey]' derivation='None' name='[none:Year of Survey:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489140781056]' derivation='Sum' name='[sum:Calculation_922956489140781056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='3500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='64' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-pane' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='2' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Year of Survey:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Poly c employ'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Polytechnic Employment Rate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='poly_lastest_latest15 (itp232_teamevians)' name='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut' />
            <datasource name='Parameters' />
            <datasource caption='uni graduates(ver2) (itp232_teamevians)' name='federated.0fbq8zp1brsd8y10kpunt0fo0pzo' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0fbq8zp1brsd8y10kpunt0fo0pzo'>
            <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169157484549]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Degree]),lower([Parameters].[Parameter 1 1]))' />
            </column>
            <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[Degree]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1668865169157484549]' derivation='None' name='[none:Calculation_1668865169157484549:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut'>
            <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169154719748]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Courses]),lower([Parameters].[Parameter 1 1]))' />
            </column>
            <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[Courses]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Employment Percentage' datatype='integer' datatype-customized='true' name='[EmploymentPercentage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1668865169154719748]' derivation='None' name='[none:Calculation_1668865169154719748:nk]' pivot='key' type='nominal' />
            <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[Courses]' derivation='None' name='[none:Courses:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentPercentage]' derivation='Sum' name='[sum:EmploymentPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]'>
            <groupfilter function='member' level='[none:Calculation_1668865169157484549:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169154719748:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[Action (Categories)]'>
            <groupfilter function='level-members' level='[Categories]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]'>
            <groupfilter function='level-members' level='[none:Categories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' direction='DESC' using='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[sum:EmploymentPercentage:qk]' />
          <sort class='computed' column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Courses:nk]' direction='DESC' using='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[sum:EmploymentPercentage:qk]' />
          <slices>
            <column>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]</column>
            <column>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169154719748:nk]</column>
            <column>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]</column>
            <column>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[Action (Categories)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' value='42' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[sum:EmploymentPercentage:qk]</rows>
        <cols>([federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk] / [federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Courses:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Poly vs Uni'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Employment rate difference between Poly &amp; Uni</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='polyvsus (itp232_teamevians)' name='federated.1nt76jc1qmm4hc1fywto017ejw4y' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Zoom in?' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1nt76jc1qmm4hc1fywto017ejw4y'>
            <column caption='Zoomed in value' datatype='integer' name='[Calculation_1668865169169948678]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 2]=&apos;No&apos;,0,NULL)' />
            </column>
            <column caption='Latest Rate' datatype='real' name='[Calculation_1668865169185513480]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF(LAST()=0,SUM([EmploymentRate]),NULL)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Last Year Volume' datatype='real' name='[Calculation_1668865169190776841]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(sum(iif([Last 2 Year (copy)],[EmploymentRate],null))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Max Year' datatype='date' name='[Calculation_1668865169193033738]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{MAX([Year])}' />
            </column>
            <column caption='Change new' datatype='real' name='[Calculation_1668865169201549325]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='([Calculation_1668865169190776841]-[Last Year Volume (copy)])/100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column caption='Last Year' datatype='boolean' name='[Last 2 Year (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&lt;1' />
            </column>
            <column caption='Prior Year' datatype='boolean' name='[Last Year (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_1668865169193033738])&lt;2' />
            </column>
            <column caption='Prior Year Volume' datatype='real' name='[Last Year Volume (copy)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(sum(iif([Last Year (copy)],[EmploymentRate],null))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1668865169169948678]' derivation='Sum' name='[sum:Calculation_1668865169169948678:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1668865169185513480]' derivation='User' name='[usr:Calculation_1668865169185513480:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1668865169190776841]' derivation='User' name='[usr:Calculation_1668865169190776841:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1668865169201549325]' derivation='User' name='[usr:Calculation_1668865169201549325:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[Last Year Volume (copy)]' ordering-type='Rows' />
              <table-calc field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[Calculation_1668865169190776841]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Last Year Volume (copy)]' derivation='User' name='[usr:Last Year Volume (copy):ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]'>
            <groupfilter function='level-members' level='[none:Schools:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' included-values='in-range'>
            <min>88.900000000000006</min>
            <max>92.099999999999994</max>
          </filter>
          <slices>
            <column>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</column>
            <column>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[:Measure Names]</column>
            <column>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]' field-type='quantitative' fold='true' range-type='independent' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' value='72' />
            <format attr='width' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]' value='72' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]' value='64' />
            <format attr='width' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]' value='80' />
            <format attr='height-header' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]' value='p0.00%' />
            <format attr='display' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]' value='false' />
            <format attr='display' field='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[Parameters].[Parameter 4]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='581' />
                <format attr='maxheight' value='581' />
                <format attr='minwidth' value='360' />
                <format attr='maxwidth' value='360' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.40580111742019653' />
                <format attr='mark-color' value='#00e3e3' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#aa0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk] / ([federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok] / ([federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok] / [federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]))) * ([federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk] + [federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]))</rows>
        <cols>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poly&quot;</value>
                <value>%null%</value>
                <value>90.599999999999994</value>
                <value>2016</value>
                <value>90.599999999999994</value>
                <value>90.599999999999994</value>
                <value>1.6999999999999886</value>
                <value>88.900000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poly&quot;</value>
                <value>%null%</value>
                <value>88.900000000000006</value>
                <value>2015</value>
                <value>%null%</value>
                <value>90.599999999999994</value>
                <value>1.6999999999999886</value>
                <value>88.900000000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Uni&quot;</value>
                <value>%null%</value>
                <value>89.099999999999994</value>
                <value>2015</value>
                <value>%null%</value>
                <value>89.5</value>
                <value>0.0040000000000000565</value>
                <value>89.099999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:Calculation_1668865169169948678:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Year:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169185513480:qk]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
                  <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Uni&quot;</value>
                <value>%null%</value>
                <value>89.5</value>
                <value>2016</value>
                <value>89.5</value>
                <value>89.5</value>
                <value>0.0040000000000000565</value>
                <value>89.099999999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Poly Vs Uni employment rate&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentratediffuniandpoly (itp232_teamevians)' name='federated.099aqpr0lgdpc91b9vb291yzdvc1' />
          </datasources>
          <datasource-dependencies datasource='federated.099aqpr0lgdpc91b9vb291yzdvc1'>
            <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column datatype='real' name='[EmploymentRate(%)]' role='measure' type='quantitative' />
            <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentRate(%)]' derivation='Sum' name='[sum:EmploymentRate(%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[Action (Categories1,School1,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action65]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Categories]' member='&quot;Business&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[School]' member='&quot;Degree&quot;' />
                  <groupfilter function='member' level='[School]' member='&quot;Poly&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[yr:Year:ok]' member='2011' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2013' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2014' />
                  <groupfilter function='member' level='[yr:Year:ok]' member='2015' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]'>
            <groupfilter function='level-members' level='[none:School:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</column>
            <column>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[Action (Categories1,School1,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='339' />
                <format attr='maxwidth' value='339' />
                <format attr='minheight' value='157' />
                <format attr='maxheight' value='157' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='339' />
                <format attr='maxwidth' value='339' />
                <format attr='minheight' value='157' />
                <format attr='maxheight' value='157' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='339' />
                <format attr='maxwidth' value='339' />
                <format attr='minheight' value='157' />
                <format attr='maxheight' value='157' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk] * [federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk])</rows>
        <cols>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Degree&quot;</value>
                <value>85.599999999999994</value>
                <value>2015</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Degree&quot;</value>
                <value>83.700000000000003</value>
                <value>2014</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poly&quot;</value>
                <value>63.799999999999997</value>
                <value>2015</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</field>
                  <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Poly&quot;</value>
                <value>63.0</value>
                <value>2014</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='nsgraduates (itp232_teamevians)' name='federated.03a2gm5005la8x1g29pcg0fsk740' />
          </datasources>
          <datasource-dependencies datasource='federated.03a2gm5005la8x1g29pcg0fsk740'>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column caption='Graduates1' datatype='string' name='[Graduates]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Graduates]' derivation='None' name='[none:Graduates:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]</rows>
        <cols>([federated.03a2gm5005la8x1g29pcg0fsk740].[none:Graduates:nk] / [federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 18'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Fresh Graduates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nsgraduates (itp232_teamevians)' name='federated.03a2gm5005la8x1g29pcg0fsk740' />
          </datasources>
          <datasource-dependencies datasource='federated.03a2gm5005la8x1g29pcg0fsk740'>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column caption='Graduates1' datatype='string' name='[Graduates]' role='dimension' type='nominal' />
            <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Year1' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Graduates]' derivation='None' name='[none:Graduates:nk]' pivot='key' type='nominal' />
            <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Graduates:nk]' value='bold' />
            <format attr='font-size' field='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Graduates:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03a2gm5005la8x1g29pcg0fsk740].[sum:EmploymentRate:qk]</rows>
        <cols>([federated.03a2gm5005la8x1g29pcg0fsk740].[none:Graduates:nk] / ([federated.03a2gm5005la8x1g29pcg0fsk740].[none:Schools:nk] / [federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Post NS graduates</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nsgraduates2 (itp232_teamevians)' name='federated.15aa7e10nj99k31gbnm4r08ms0wj' />
          </datasources>
          <datasource-dependencies datasource='federated.15aa7e10nj99k31gbnm4r08ms0wj'>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Graduates]' role='dimension' type='nominal' />
            <column datatype='string' name='[Schools]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Graduates]' derivation='None' name='[none:Graduates:nk]' pivot='key' type='nominal' />
            <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[sum:EmploymentRate:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[sum:EmploymentRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[sum:EmploymentRate:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Graduates:nk]' value='bold' />
            <format attr='font-size' field='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Graduates:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15aa7e10nj99k31gbnm4r08ms0wj].[sum:EmploymentRate:qk]</rows>
        <cols>([federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Graduates:nk] / ([federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Schools:nk] / [federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Year:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 21'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NS vs Uni graduates&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nsvsuni (itp232_teamevians)' name='federated.1upimfi1a3kygl155wgxq1lxxv99' />
          </datasources>
          <datasource-dependencies datasource='federated.1upimfi1a3kygl155wgxq1lxxv99'>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Schools]' derivation='Attribute' name='[attr:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]'>
            <groupfilter function='level-members' level='[none:Schools:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1upimfi1a3kygl155wgxq1lxxv99].[sum:EmploymentRate:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1upimfi1a3kygl155wgxq1lxxv99].[sum:EmploymentRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1upimfi1a3kygl155wgxq1lxxv99].[sum:EmploymentRate:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]' />
              <tooltip column='[federated.1upimfi1a3kygl155wgxq1lxxv99].[attr:Schools:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1upimfi1a3kygl155wgxq1lxxv99].[sum:EmploymentRate:qk]</rows>
        <cols>[federated.1upimfi1a3kygl155wgxq1lxxv99].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Expenditure on Education'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_total_expenditure_on_edu (itp232_teamevians)' name='federated.1msqecj11mxdsj1g3d5li1ylyeuf' />
          </datasources>
          <datasource-dependencies datasource='federated.1msqecj11mxdsj1g3d5li1ylyeuf'>
            <column datatype='integer' name='[Total Expenditure on Education]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Expenditure on Education]' derivation='Sum' name='[sum:Total Expenditure on Education:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1msqecj11mxdsj1g3d5li1ylyeuf].[sum:Total Expenditure on Education:qk]</rows>
        <cols>[federated.1msqecj11mxdsj1g3d5li1ylyeuf].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Labour Costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_labour_cost (itp232_teamevians)' name='federated.0liuevi0x7uiju1dhtsjw0uv1b96' />
          </datasources>
          <datasource-dependencies datasource='federated.0liuevi0x7uiju1dhtsjw0uv1b96'>
            <column datatype='integer' name='[Annual Variable Component (Annual Wage Supplements)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Basic Wage Overtime &amp; Other Regular Payments]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Employer CPF Contributons]' role='measure' type='quantitative' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Levy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Medical Cost &amp; Other Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net Training Cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other Labour Costs]' role='measure' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual Variable Component (Annual Wage Supplements)]' derivation='Sum' name='[sum:Annual Variable Component (Annual Wage Supplements):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Basic Wage Overtime &amp; Other Regular Payments]' derivation='Sum' name='[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Employer CPF Contributons]' derivation='Sum' name='[sum:Employer CPF Contributons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Levy]' derivation='Sum' name='[sum:Levy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medical Cost &amp; Other Insurance]' derivation='Sum' name='[sum:Medical Cost &amp; Other Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Training Cost]' derivation='Sum' name='[sum:Net Training Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other Labour Costs]' derivation='Sum' name='[sum:Other Labour Costs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Annual Variable Component (Annual Wage Supplements):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Employer CPF Contributons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Levy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Medical Cost &amp; Other Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Net Training Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Other Labour Costs:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' field-type='quantitative' max='55000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' value='41' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[none:Industry:nk]' value='272' />
            <format attr='width' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' value='364' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0liuevi0x7uiju1dhtsjw0uv1b96].[none:Industry:nk] / [federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names])</rows>
        <cols>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Wage Change by Industry(%)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' name='federated.05yhkm914172bb12yhoqp014nyph' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05yhkm914172bb12yhoqp014nyph'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161744916484]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Wage Change by Industry (per Cent)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Total Wage Change by Industry (per Cent)]' derivation='Avg' name='[avg:Total Wage Change by Industry (per Cent):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_645422161744916484]' derivation='None' name='[none:Calculation_645422161744916484:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Wage Change by Industry (per Cent)]' derivation='Sum' name='[sum:Total Wage Change by Industry (per Cent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05yhkm914172bb12yhoqp014nyph].[Action (Occupations)]'>
            <groupfilter function='level-members' level='[Occupations]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]'>
            <groupfilter function='member' level='[none:Calculation_645422161744916484:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]</column>
            <column>[federated.05yhkm914172bb12yhoqp014nyph].[Action (Occupations)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' field-type='quantitative' max='10.0' min='-6.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' max='10.0' min='-6.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' center='0.0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' max='10.0' min='-6.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#c0c0c0' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' />
            </encodings>
            <reference-line axis-column='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-pane' value-column='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]</rows>
        <cols>[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Uni Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='85' />
            <format attr='width' value='920' />
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' value='91' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' value='300' />
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk] / [federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Uni Enrolment'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_uni_enrolment (itp232_teamevians)' name='federated.117ra73191xfaa12tkrf108iwowf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.117ra73191xfaa12tkrf108iwowf'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253777412]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='integer' name='[Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Universities]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737253777412]' derivation='None' name='[none:Calculation_942659737253777412:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Universities]' derivation='None' name='[none:Universities:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrolment]' derivation='Sum' name='[sum:Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ra73191xfaa12tkrf108iwowf].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.117ra73191xfaa12tkrf108iwowf].[none:Calculation_942659737253777412:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737253777412:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.117ra73191xfaa12tkrf108iwowf].[none:Calculation_942659737253777412:nk]</column>
            <column>[federated.117ra73191xfaa12tkrf108iwowf].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.117ra73191xfaa12tkrf108iwowf].[none:Universities:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ra73191xfaa12tkrf108iwowf].[sum:Enrolment:qk]</rows>
        <cols>([federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk] / [federated.117ra73191xfaa12tkrf108iwowf].[none:Universities:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Uni Salary (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year of Survey]' derivation='None' name='[none:Year of Survey:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489142702081]' derivation='Sum' name='[sum:Calculation_922956489142702081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='3500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='64' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Year of Survey:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Uni c employment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>University employment rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='uni graduates(ver2) (itp232_teamevians)' name='federated.0fbq8zp1brsd8y10kpunt0fo0pzo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Free Text Search' datatype='string' name='[Parameter 1 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0fbq8zp1brsd8y10kpunt0fo0pzo'>
            <column caption='Free Text Filter' datatype='boolean' name='[Calculation_1668865169157484549]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(LOWER([Categories]),lower([Parameters].[Parameter 1 1]))&#13;&#10;or&#13;&#10;CONTAINS(LOWER([Degree]),lower([Parameters].[Parameter 1 1]))' />
            </column>
            <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[Degree]' role='dimension' type='nominal' />
            <column datatype='real' name='[EmploymentRate(%)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1668865169157484549]' derivation='None' name='[none:Calculation_1668865169157484549:nk]' pivot='key' type='nominal' />
            <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[Degree]' derivation='None' name='[none:Degree:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentRate(%)]' derivation='Sum' name='[sum:EmploymentRate(%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]' direction='ASC' using='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[sum:EmploymentRate(%):qk]' />
          <sort class='computed' column='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Degree:nk]' direction='DESC' using='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[sum:EmploymentRate(%):qk]' />
          <slices>
            <column>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]' value='CategoriesUni'>
              <formatted-text>
                <run>CategoriesUni</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[sum:EmploymentRate(%):qk]</rows>
        <cols>([federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk] / [federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Degree:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='polyvsuni'>
      <table>
        <view>
          <datasources>
            <datasource caption='polyvsus (itp232_teamevians)' name='federated.1nt76jc1qmm4hc1fywto017ejw4y' />
          </datasources>
          <datasource-dependencies datasource='federated.1nt76jc1qmm4hc1fywto017ejw4y'>
            <column caption='Employment Rate' datatype='real' name='[EmploymentRate]' role='measure' type='quantitative' />
            <column caption='Schools1' datatype='string' name='[Schools]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Schools]' derivation='None' name='[none:Schools:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentRate]' derivation='Sum' name='[sum:EmploymentRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk] * [federated.1nt76jc1qmm4hc1fywto017ejw4y].[sum:EmploymentRate:qk])</rows>
        <cols>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='polyvsuniemployment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Poly Vs Uni employment rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='employmentratediffuniandpoly (itp232_teamevians)' name='federated.099aqpr0lgdpc91b9vb291yzdvc1' />
            <datasource caption='employmentratediffuniandpoly (tiff_database) (3)' name='federated.0p5kc0v0hal63e17bwk1w1cpoi5f' />
          </datasources>
          <datasource-dependencies datasource='federated.099aqpr0lgdpc91b9vb291yzdvc1'>
            <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column datatype='real' name='[EmploymentRate(%)]' role='measure' type='quantitative' />
            <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
            <column-instance column='[EmploymentRate(%)]' derivation='Sum' name='[sum:EmploymentRate(%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p5kc0v0hal63e17bwk1w1cpoi5f'>
            <column caption='Categories1' datatype='string' name='[Categories]' role='dimension' type='nominal' />
            <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[Action (YEAR(Year))]'>
            <groupfilter from='2011' function='range' level='[yr:Year:ok]' to='2015' user:ui-action-filter='[Action64]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]</column>
            <column>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:Categories:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[sum:EmploymentRate(%):qk]</rows>
        <cols>([federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:Categories:nk] / [federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok])</cols>
        <join-lod-exclude-overrides>
          <column>[federated.0p5kc0v0hal63e17bwk1w1cpoi5f].[Categories]</column>
          <column>[federated.0p5kc0v0hal63e17bwk1w1cpoi5f].[School]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='(D1) Enrolment in Different Institution Uni'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='enrolmentbygender&amp;coursesuni_mabel (itp232_teamevians)' name='federated.1lzuenn10qywcc1fnlm5t0j8kcb1' />
        <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
      </datasources>
      <datasource-dependencies datasource='federated.1lzuenn10qywcc1fnlm5t0j8kcb1'>
        <column caption='Select Years' datatype='integer' name='[Calculation_1052434978362343426]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_1052434978362343426]' derivation='None' name='[none:Calculation_1052434978362343426:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
        <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
        <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='41375' id='1' name='(D1)Enrolment from Different Institutions' w='84000' x='0' y='4625' />
              <zone h='50000' id='10' name='(D1) Enrolment by Courses_Uni' w='84000' x='0' y='50000' />
              <zone h='4000' id='9' name='(D1)Enrolment from Different Institutions' pane-specification-id='0' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='color' w='84000' x='0' y='46000' />
              <zone h='4625' id='12' type='text' w='84000' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Enrolment in Universities</run>
                </formatted-text>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8125' id='13' mode='checkdropdown' name='(D1) Enrolment by Courses_Uni' param='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Calculation_1052434978362343426:ok]' type='filter' w='16000' x='84000' y='0' />
              <zone h='7625' id='7' mode='checkdropdown' name='(D1)Enrolment from Different Institutions' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' w='16000' x='84000' y='8125' />
              <zone h='7625' id='8' mode='checkdropdown' name='(D1)Enrolment from Different Institutions' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' w='16000' x='84000' y='15750' />
              <zone h='43125' id='11' name='(D1) Enrolment by Courses_Uni' pane-specification-id='0' param='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]' type='color' w='16000' x='84000' y='23375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D1) Enrolment in Different Institutions Poly'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='enrolmentbygender&amp;coursespoly_mabel (itp232_teamevians)' name='federated.173co5b0a3e1e614iuhu01d8hdju' />
        <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
      </datasources>
      <datasource-dependencies datasource='federated.173co5b0a3e1e614iuhu01d8hdju'>
        <column caption='Select Years' datatype='integer' name='[Calculation_770960001586753536]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2010&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_770960001586753536]' derivation='None' name='[none:Calculation_770960001586753536:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
        <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='39000' id='1' name='(D1)Enrolment from Different Institutions' w='84000' x='0' y='7000' />
              <zone h='50000' id='12' name='(D1) Courses Offered_Poly' w='84000' x='0' y='50000' />
              <zone h='4000' id='9' name='(D1)Enrolment from Different Institutions' pane-specification-id='0' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='color' w='84000' x='0' y='46000' />
              <zone h='7000' id='17' type='text' w='84000' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Enrolment in Polytechnics</run>
                </formatted-text>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8125' id='18' mode='checkdropdown' name='(D1) Courses Offered_Poly' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Calculation_770960001586753536:ok]' type='filter' w='16000' x='84000' y='0' />
              <zone h='7625' id='16' mode='checkdropdown' name='(D1)Enrolment from Different Institutions' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='filter' w='16000' x='84000' y='8125' />
              <zone h='7625' id='7' mode='checkdropdown' name='(D1)Enrolment from Different Institutions' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' w='16000' x='84000' y='15750' />
              <zone h='7625' id='8' mode='checkdropdown' name='(D1)Enrolment from Different Institutions' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' w='16000' x='84000' y='23375' />
              <zone h='7625' id='14' mode='checkdropdown' name='(D1) Courses Offered_Poly' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' type='filter' w='16000' x='84000' y='31000' />
              <zone fixed-size='292' h='37500' id='15' is-fixed='true' name='(D1) Courses Offered_Poly' pane-specification-id='0' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' type='color' w='16000' x='84000' y='38625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D1) Enrolment in Singapore'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='enrolmentfigures_mabel (itp232_teamevians)' name='federated.1u7lmzt0tln6cf1fsow230pur7jk' />
      </datasources>
      <datasource-dependencies datasource='federated.1u7lmzt0tln6cf1fsow230pur7jk'>
        <column caption='Select Years ' datatype='integer' name='[Calculation_347621635205959680]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10; &#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Education Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_347621635205959680]' derivation='None' name='[none:Calculation_347621635205959680:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94625' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5375'>
            <zone h='94625' id='3' type='layout-basic' w='88300' x='0' y='5375'>
              <zone h='43359' id='1' name='(D1)Enrolment Over the Years' w='44600' x='0' y='5375' />
              <zone h='47312' id='13' name='(D1)Enrolment from Different Institutions' w='88300' x='0' y='52688' />
              <zone h='43359' id='15' name='(D1)Gender Distribution (Enrolment)' w='43700' x='44600' y='5375' />
              <zone h='3954' id='14' name='(D1)Enrolment from Different Institutions' pane-specification-id='0' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='color' w='43700' x='44600' y='48734' />
              <zone h='3954' id='17' name='(D1)Enrolment Over the Years' pane-specification-id='0' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='color' w='44600' x='0' y='48734' />
            </zone>
            <zone fixed-size='117' h='94625' id='4' is-fixed='true' param='vert' type='layout-flow' w='11700' x='88300' y='5375'>
              <zone h='7625' id='8' mode='dropdown' name='(D1)Enrolment Over the Years' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='filter' w='11700' x='88300' y='5375' />
              <zone h='7625' id='11' mode='checkdropdown' name='(D1)Enrolment Over the Years' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' type='filter' w='11700' x='88300' y='13000' />
              <zone h='7625' id='7' mode='checkdropdown' name='(D1)Enrolment Over the Years' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' w='11700' x='88300' y='20625' />
              <zone h='7625' id='6' mode='checkdropdown' name='(D1)Enrolment Over the Years' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' w='11700' x='88300' y='28250' />
            </zone>
          </zone>
          <zone forceUpdate='true' h='5375' id='16' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Enrolment Overview</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D1*) Compare Employment Based On Residency'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#eef1f3' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column datatype='string' name='[Status]' role='dimension' type='nominal' />
        <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='31' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='744' h='93000' id='29' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='93000' id='27' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='39328' id='5' param='horz' type='layout-flow' w='12600' x='87400' y='14469'>
                  <zone fixed-size='160' h='39328' id='4' is-fixed='true' param='vert' type='layout-flow' w='12600' x='87400' y='14469'>
                    <zone h='7625' id='6' mode='dropdown' name='(D1) Residents &amp; Foreigners Employed' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' show-all='false' type='filter' w='12600' x='87400' y='14469' />
                    <zone h='9000' id='7' name='(D1) Residents &amp; Foreigners Employed' pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' w='12600' x='87400' y='22094' />
                  </zone>
                </zone>
                <zone forceUpdate='true' h='4418' id='12' type='text' w='66700' x='33300' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Compare Employment based on residency</run>
                  </formatted-text>
                </zone>
                <zone h='24239' id='10' name='(D1) Foreigners View (Passes)' show-title='false' w='54400' x='0' y='68761' />
                <zone h='14469' id='18' is-scaled='1' param='C:\Users\Jun Long\Desktop\ITP232 Data Sets\Images\singapore-new-industries-workforce.jpg' type='bitmap' w='33300' x='0' y='0' />
                <zone h='39328' id='1' name='(D1) Residents &amp; Foreigners Employed' show-title='false' w='87400' x='0' y='14469' />
                <zone forceUpdate='true' h='10051' id='19' type='text' w='66700' x='33300' y='4418'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>How many residents &amp; foreigners are </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>employed</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>?&#10;How many residents &amp; foreigners are </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>unemployed</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'>?&#10;&#10;Look at the chart </run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8' underline='true'>below</run>
                    <run fontalignment='1' fontcolor='#000000' fontsize='8'> to find out.</run>
                  </formatted-text>
                </zone>
                <zone forceUpdate='true' h='5194' id='21' type='text' w='54400' x='0' y='53797'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>How does foreigners employed in Singapore?</run>
                  </formatted-text>
                </zone>
                <zone h='31412' id='22' name='(D1) Employment Change for each industry' w='30900' x='57600' y='61588' />
                <zone h='31412' id='23' mode='dropdown' name='(D1) Employment Change for each industry' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' w='11500' x='88500' y='61588' />
                <zone forceUpdate='true' h='7791' id='25' type='text' w='42400' x='57600' y='53797'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>How does the employment of residents and foreigners in various industry?</run>
                  </formatted-text>
                </zone>
                <zone h='39203' id='26' type='empty' w='3200' x='54400' y='53797' />
                <zone forceUpdate='true' h='9770' id='32' type='text' w='54400' x='0' y='58991'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000'>They need to have foreigner&apos;s pass. &#10;Below chart shows the types of passes and how many employed foreigners get.</run>
                  </formatted-text>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D2) Graduates from different Polytechnic'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='graduatesbycourse&amp;genderpoly_mabel (itp232_teamevians)' name='federated.1h7v2m11diyhbz13axnid0vj3q1i' />
      </datasources>
      <datasource-dependencies datasource='federated.1h7v2m11diyhbz13axnid0vj3q1i'>
        <column caption='Select Years ' datatype='integer' name='[Calculation_1052434978356871168]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1052434978356871168]' derivation='None' name='[none:Calculation_1052434978356871168:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='39750' id='1' name='(D2)Gradutes from Different Institutions' w='84000' x='0' y='6250' />
              <zone h='50000' id='9' name='(D2) Number of Graduates by Course_poly' w='84000' x='0' y='50000' />
              <zone forceUpdate='true' h='6250' id='14' type='text' w='84000' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='20'>Graduates from Different Polytechnics</run>
                </formatted-text>
              </zone>
              <zone h='4000' id='8' name='(D2)Gradutes from Different Institutions' pane-specification-id='2' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:sex:nk]' type='color' w='84000' x='0' y='46000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8125' id='10' mode='checkdropdown' name='(D2) Number of Graduates by Course_poly' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Calculation_1052434978356871168:ok]' type='filter' w='16000' x='84000' y='0' />
              <zone h='7625' id='11' mode='checkdropdown' name='(D2) Number of Graduates by Course_poly' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]' type='filter' w='16000' x='84000' y='8125' />
              <zone h='7625' id='12' mode='checkdropdown' name='(D2) Number of Graduates by Course_poly' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' type='filter' w='16000' x='84000' y='15750' />
              <zone h='35250' id='13' name='(D2) Number of Graduates by Course_poly' pane-specification-id='0' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' type='color' w='16000' x='84000' y='23375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D2) Graduates from different universities'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='graduatesbycourse&amp;genderuni_mabel (itp232_teamevians)' name='federated.193r8p40646y5i1eep8lk188l5vi' />
      </datasources>
      <datasource-dependencies datasource='federated.193r8p40646y5i1eep8lk188l5vi'>
        <column caption='Select Years' datatype='integer' name='[Calculation_1052434978361569281]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Type of Course]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1052434978361569281]' derivation='None' name='[none:Calculation_1052434978361569281:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type of Course]' derivation='None' name='[none:Type of Course:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='41750' id='1' name='(D2)Gradutes from Different Institutions' w='84000' x='0' y='4250' />
              <zone h='50000' id='9' name='(D2) Number of Gradutes by Course_Uni' w='84000' x='0' y='50000' />
              <zone h='4000' id='8' name='(D2)Gradutes from Different Institutions' pane-specification-id='2' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:sex:nk]' type='color' w='84000' x='0' y='46000' />
              <zone forceUpdate='true' h='4250' id='14' type='text' w='84000' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Graduates from Different Universities</run>
                </formatted-text>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8125' id='12' mode='checkdropdown' name='(D2) Number of Gradutes by Course_Uni' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Calculation_1052434978361569281:ok]' type='filter' w='16000' x='84000' y='0' />
              <zone h='7625' id='10' mode='checkdropdown' name='(D2) Number of Gradutes by Course_Uni' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]' type='filter' w='16000' x='84000' y='8125' />
              <zone h='7625' id='11' mode='checkdropdown' name='(D2) Number of Gradutes by Course_Uni' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' type='filter' w='16000' x='84000' y='15750' />
              <zone h='43125' id='13' name='(D2) Number of Gradutes by Course_Uni' pane-specification-id='0' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' type='color' w='16000' x='84000' y='23375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D2)Graduates in Singapore'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Graduates in Singapore&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='noofgrad (itp232_teamevians)' name='federated.1arc57x1dl54pe1dvapq30zzu1zh' />
      </datasources>
      <datasource-dependencies datasource='federated.1arc57x1dl54pe1dvapq30zzu1zh'>
        <column caption='Select Year' datatype='integer' name='[Calculation_895090458157256705]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Edu Type' datatype='string' name='[Education Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name of Institution]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_895090458157256705]' derivation='None' name='[none:Calculation_895090458157256705:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Education Type]' derivation='None' name='[none:Education Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name of Institution]' derivation='None' name='[none:Name of Institution:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='94625' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5375'>
            <zone h='94625' id='3' type='layout-basic' w='84000' x='0' y='5375'>
              <zone h='43416' id='1' name='(D2)Number of Graduates' w='42000' x='0' y='5375' />
              <zone h='47312' id='14' name='(D2)Gradutes from Different Institutions' w='84000' x='0' y='52688' />
              <zone h='43416' id='16' name='(D2)Gender Distribution' w='42000' x='42000' y='5375' />
              <zone h='3897' id='9' name='(D2)Number of Graduates' pane-specification-id='1' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[attr:eduType:nk]' type='color' w='42000' x='0' y='48791' />
              <zone h='3897' id='15' name='(D2)Gradutes from Different Institutions' pane-specification-id='2' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:sex:nk]' type='color' w='42000' x='42000' y='48791' />
            </zone>
            <zone fixed-size='160' h='94625' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='5375'>
              <zone h='7625' id='6' mode='checkdropdown' name='(D2)Number of Graduates' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]' type='filter' w='16000' x='84000' y='5375' />
              <zone h='7625' id='18' mode='checkdropdown' name='(D2)Gender Distribution' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' type='filter' w='16000' x='84000' y='13000' />
              <zone h='7625' id='19' mode='checkdropdown' name='(D2)Number of Graduates' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' type='filter' w='16000' x='84000' y='20625' />
              <zone h='7625' id='20' mode='checkdropdown' name='(D2)Gradutes from Different Institutions' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]' type='filter' w='16000' x='84000' y='28250' />
            </zone>
          </zone>
          <zone forceUpdate='true' h='5375' id='17' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>Overview of Graduates</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D2*) Compare Employment based on Educational Level'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f6eee3' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column datatype='string' name='[Status]' role='dimension' type='nominal' />
        <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='87125' id='17' param='horz' type='layout-flow' w='100000' x='0' y='12875'>
            <zone h='87125' id='13' param='horz' type='layout-flow' w='99600' x='0' y='12875'>
              <zone h='87125' id='11' type='layout-basic' w='99600' x='0' y='12875'>
                <zone h='30955' id='1' name='(D2) Trend of Residents' w='84000' x='0' y='12875' />
                <zone h='51301' id='10' name='(D2) Employed Highest Education' w='32100' x='0' y='48699' />
                <zone h='30955' id='14' mode='dropdown' name='(D2) Employed Highest Education' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' show-all='false' type='filter' w='15600' x='84000' y='12875' />
                <zone h='51301' id='18' name='(D2) Long Term Unemployment Rate' w='33100' x='35300' y='48699' />
                <zone h='51301' id='20' name='(D2) UnEmployement Rate' w='28000' x='71600' y='48699' />
                <zone forceUpdate='true' h='4869' id='21' type='text' w='99600' x='0' y='43830'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>3 things to compare employment based on educational level/highest qualification:</run>
                  </formatted-text>
                </zone>
                <zone h='51301' id='22' type='empty' w='3200' x='32100' y='48699' />
                <zone h='51301' id='23' type='empty' w='3200' x='68400' y='48699' />
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='12875' id='8' type='text' w='71000' x='29000' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='16'>Compare Employment based on educational level</run>
            </formatted-text>
          </zone>
          <zone h='12875' id='19' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\ITP232 Data Sets\Images\Rifle-Paper-Co-Graduation.jpg' type='bitmap' w='29000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D3) Job Vacancy By Industry'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='jobvacancybyindustry&amp;og (itp232_teamevians)' name='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
      </datasources>
      <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y'>
        <column caption='Select Years ' datatype='integer' name='[Calculation_730427605007749120]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='if [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Occupational Group' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
        <column datatype='string' name='[Sub Category]' role='dimension' type='nominal' />
        <column caption='Industry' datatype='string' name='[lndustry]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_730427605007749120]' derivation='None' name='[none:Calculation_730427605007749120:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub Category]' derivation='None' name='[none:Sub Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[lndustry]' derivation='None' name='[none:lndustry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='89200' x='0' y='0'>
              <zone h='94375' id='10' name='(D3)JV by Industry &amp; Sub Industry' w='89200' x='0' y='5625' />
              <zone forceUpdate='true' h='5625' id='14' type='text' w='89200' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='20'>Job Vacancy By Industry</run>
                </formatted-text>
              </zone>
            </zone>
            <zone fixed-size='108' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='10800' x='89200' y='0'>
              <zone h='8125' id='6' mode='checkdropdown' name='(D3)JV by Industry &amp; Sub Industry' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' type='filter' w='10800' x='89200' y='0' />
              <zone h='7625' id='15' mode='checkdropdown' name='(D3)JV by Industry &amp; Sub Industry' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' type='filter' w='10800' x='89200' y='8125' />
              <zone h='7625' id='16' mode='checkdropdown' name='(D3)JV by Industry &amp; Sub Industry' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]' type='filter' w='10800' x='89200' y='15750' />
              <zone h='7625' id='17' mode='checkdropdown' name='(D3)JV by Industry &amp; Sub Industry' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' type='filter' w='10800' x='89200' y='23375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D3) Job Vacancy Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='overalljobvacanciesnoannual (itp232_teamevians)' name='federated.0fh2wh0162pgdo14eqw5a0pa8mgm' />
      </datasources>
      <datasource-dependencies datasource='federated.0fh2wh0162pgdo14eqw5a0pa8mgm'>
        <column caption='Select Years' datatype='integer' name='[Calculation_347621635207565313]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;end' />
        </column>
        <column-instance column='[Calculation_347621635207565313]' derivation='None' name='[none:Calculation_347621635207565313:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='layout-basic' w='81300' x='0' y='0'>
              <zone h='94625' id='6' param='horz' type='layout-flow' w='81300' x='0' y='5375'>
                <zone h='94625' id='4' type='layout-basic' w='81300' x='0' y='5375'>
                  <zone h='49106' id='1' name='(D3)Industry Size' w='39328' x='0' y='5375' />
                  <zone h='45519' id='3' name='(D3)Annual JV' w='81300' x='0' y='54481' />
                  <zone h='49106' id='9' name='(D3) Industry Size Figures' w='41972' x='39328' y='5375' />
                </zone>
              </zone>
              <zone h='5375' id='8' type='text' w='81300' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='20'>Job Vacancy Overview</run>
                </formatted-text>
              </zone>
            </zone>
            <zone fixed-size='187' h='100000' id='11' is-fixed='true' param='vert' type='layout-flow' w='18700' x='81300' y='0'>
              <zone h='9625' id='13' name='(D3) Industry Size Figures' pane-specification-id='0' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' type='color' w='18700' x='81300' y='0' />
              <zone h='7625' id='14' mode='checkdropdown' name='(D3)Annual JV' param='[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[none:Calculation_347621635207565313:ok]' type='filter' w='18700' x='81300' y='9625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D3*) Compare Employment After Graduate From Poly and University'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f7f1f6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='residentsemployed (new_jl_database)' name='federated.1ne2hb80os4mjf12vz69c1swhrpz' />
      </datasources>
      <datasource-dependencies datasource='federated.1ne2hb80os4mjf12vz69c1swhrpz'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='23' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='21' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='36625' id='17' param='horz' type='layout-flow' w='99600' x='0' y='13375'>
                <zone h='36625' id='13' param='horz' type='layout-flow' w='99600' x='0' y='13375'>
                  <zone h='36625' id='11' type='layout-basic' w='99600' x='0' y='13375'>
                    <zone h='19805' id='6' name='(D3) Diploma Graduates (Words)' w='30500' x='69100' y='13375' />
                    <zone h='16820' id='7' name='(D3) Degree Graduates (Words)' w='30500' x='69100' y='33180' />
                    <zone h='36625' id='5' name='(D3) Graduates [Chart]' w='69100' x='0' y='13375' />
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5750' id='8' type='text' w='99600' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Compare Employment after graduate from Poly and University</run>
                </formatted-text>
              </zone>
              <zone h='45625' id='20' name='(D3) Number of People Employed' show-title='false' w='49800' x='0' y='54375' />
              <zone fixed-size='144' h='7625' id='22' is-fixed='true' param='vert' type='layout-flow' w='99600' x='0' y='5750'>
                <zone h='7625' id='24' mode='dropdown' name='(D3) Number of People Employed' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]' show-all='false' type='filter' w='99600' x='0' y='5750' />
              </zone>
              <zone h='45625' id='25' name='(D3) Number of People Unemployed' show-title='false' w='49800' x='49800' y='54375' />
              <zone h='4375' id='27' type='text' w='99600' x='0' y='50000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Number of Diploma and Degree Graduates Employed &amp; Unemployed [&apos;000]</run>
                </formatted-text>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D4) Comparing Job Vacancy &amp; Recruitment Rate'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='recruitmentratebyindustry_mabel (itp232_teamevians)' name='federated.00zutmp1ui2e8s12xk1nm03g6374' />
      </datasources>
      <datasource-dependencies datasource='federated.00zutmp1ui2e8s12xk1nm03g6374'>
        <column caption='Select Years ' datatype='integer' name='[Calculation_877076067992436737]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column caption='Occupational Group1' datatype='string' name='[Occupational Group]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_877076067992436737]' derivation='None' name='[none:Calculation_877076067992436737:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
        <column-instance column='[Occupational Group]' derivation='None' name='[none:Occupational Group:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0vft1k709xhyb31dxb9hl0lhr28y' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='87700' x='0' y='0'>
              <zone h='41000' id='1' name='(D4) Recruitment Rate ' w='87700' x='0' y='59000' />
              <zone h='48000' id='16' name='(D4) Job Vacancy by Industry &amp; Occupational Group' w='87700' x='0' y='7000' />
              <zone forceUpdate='true' h='7000' id='17' type='text' w='87700' x='0' y='0'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='18'>Comparing Job Vacancy and Recruitment Rate in Various Industries</run>
                </formatted-text>
              </zone>
              <zone h='4000' id='18' name='(D4) Job Vacancy by Industry &amp; Occupational Group' pane-specification-id='0' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' type='color' w='87700' x='0' y='55000' />
            </zone>
            <zone fixed-size='123' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='12300' x='87700' y='0'>
              <zone h='8125' id='6' mode='checkdropdown' name='(D4) Recruitment Rate ' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' type='filter' w='12300' x='87700' y='0' />
              <zone h='7625' id='7' mode='checkdropdown' name='(D4) Recruitment Rate ' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]' type='filter' values='relevant' w='12300' x='87700' y='8125' />
              <zone h='7625' id='9' mode='checkdropdown' name='(D4) Recruitment Rate ' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' type='filter' w='12300' x='87700' y='15750' />
              <zone h='11625' id='10' name='(D4) Recruitment Rate ' pane-specification-id='0' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' type='color' w='12300' x='87700' y='23375' />
              <zone h='3750' id='12' mode='checkdropdown' name='(D4) Job Vacancy by Industry &amp; Occupational Group' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:subCategoryIndustry:nk]' type='filter' values='relevant' w='12300' x='87700' y='35000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D4*) Trend'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#efebe8' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='employmentchangeindustryforeigners (new_jl_database)' name='federated.1bcqxnd09w8y6w1f8pqr20yk50ba' />
      </datasources>
      <datasource-dependencies datasource='federated.1bcqxnd09w8y6w1f8pqr20yk50ba'>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='96000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='4000'>
            <zone h='96000' id='6' type='layout-basic' w='99600' x='0' y='4000'>
              <zone h='42673' id='1' name='(D4) Trend of Seriousness' w='52300' x='0' y='29077' />
              <zone h='42673' id='3' name='(D4) Trend of Unemployment Rate' w='47300' x='52300' y='29077' />
              <zone h='20959' id='4' name='(D4) Trend of Foreigners' show-title='false' w='44600' x='0' y='8118' />
              <zone h='20959' id='5' name='(D4) Trend of Local' show-title='false' w='43000' x='44600' y='8118' />
              <zone h='28250' id='10' name='(D4) Employment Change' w='84900' x='0' y='71750' />
              <zone h='4118' id='13' type='text' w='45700' x='0' y='4000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' underline='true'>Foreigners</run>
                </formatted-text>
              </zone>
              <zone forceUpdate='true' h='4118' id='14' type='text' w='53900' x='45700' y='4000'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' underline='true'>Residents</run>
                </formatted-text>
              </zone>
              <zone h='28250' id='11' mode='dropdown' name='(D4) Employment Change' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' w='14700' x='84900' y='71750' />
              <zone fixed-size='112' h='20959' id='7' is-fixed='true' param='vert' type='layout-flow' w='12000' x='87600' y='8118'>
                <zone h='9000' id='9' name='(D4) Trend of Local' pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' w='12000' x='87600' y='8118' />
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='4000' id='12' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tempus Sans ITC' fontsize='12'>Trend of Unemployed Graduates &amp; Foreigners</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='(D5) Comparing Employment Rate in Industries &amp; Qualifications'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='employedresidentsbyqualifications_mabel (itp232_teamevians)' name='federated.0tnpyf0024rc1416s2exz120vj26' />
        <datasource caption='changeinemploymentbyindustry_mabel (itp232_teamevians)' name='federated.1rr7kee148ndz41a3lzd21ui9oqf' />
      </datasources>
      <datasource-dependencies datasource='federated.0tnpyf0024rc1416s2exz120vj26'>
        <column caption='Gender' datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1rr7kee148ndz41a3lzd21ui9oqf'>
        <column caption='Select Years' datatype='integer' name='[Calculation_877076068000169987]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == 1960&#13;&#10;then [Year]&#13;&#10;&#13;&#10;ELSEIF [Parameters].[Parameter 1] == 2006&#13;&#10;then [Year]&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='Industry' datatype='string' name='[Industry]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_877076068000169987]' derivation='None' name='[none:Calculation_877076068000169987:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92750' id='5' param='horz' type='layout-flow' w='100000' x='0' y='7250'>
            <zone h='92750' id='3' type='layout-basic' w='84000' x='0' y='7250'>
              <zone h='42665' id='1' name='(D5) Change in employment rate' w='84000' x='0' y='7250' />
              <zone h='42665' id='8' name='(D5) Employment Rate in different qualifications' w='84000' x='0' y='53625' />
              <zone h='3710' id='10' name='(D5) Employment Rate in different qualifications' pane-specification-id='1' param='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]' type='color' w='84000' x='0' y='96290' />
              <zone h='3710' id='7' name='(D5) Change in employment rate' pane-specification-id='0' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' type='color' w='84000' x='0' y='49915' />
            </zone>
            <zone fixed-size='160' h='92750' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='7250'>
              <zone h='7625' id='6' mode='checkdropdown' name='(D5) Change in employment rate' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]' type='filter' w='16000' x='84000' y='7250' />
              <zone h='7625' id='11' mode='checkdropdown' name='(D5) Change in employment rate' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' type='filter' w='16000' x='84000' y='14875' />
              <zone h='7625' id='13' mode='checkdropdown' name='(D5) Employment Rate in different qualifications' param='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]' type='filter' w='16000' x='84000' y='22500' />
              <zone h='3750' id='12' mode='checkdropdown' name='(D5) Employment Rate in different qualifications' param='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Qualification:nk]' type='filter' w='16000' x='84000' y='30125' />
            </zone>
          </zone>
          <zone forceUpdate='true' h='7250' id='14' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='18'>Comparing Employment Rate in Industries and Qualifications</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Average Monthly Salary per Employee'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Average Monthly Salary per Employee</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4907' id='16' type='title' w='100000' x='0' y='0' />
            <zone h='95093' id='8' param='horz' type='layout-flow' w='100000' x='0' y='4907'>
              <zone h='95093' id='5' param='horz' type='layout-flow' w='91662' x='0' y='4907'>
                <zone h='95093' id='3' type='layout-basic' w='91662' x='0' y='4907'>
                  <zone h='47552' id='1' name='Average Monthly Salary per Employee (per Quarter)' w='45832' x='0' y='4907' />
                  <zone h='47552' id='6' name='Average Monthly Salary per Employee (Anually)' w='45830' x='45832' y='4907' />
                  <zone h='47541' id='14' name='Average Monthly Salary per Employee Rate of Change in %' w='90300' x='0' y='52459' />
                  <zone h='47541' id='15' param='horz' type='layout-flow' w='1362' x='90300' y='52459' />
                </zone>
              </zone>
              <zone fixed-size='160' h='95093' id='7' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='4907'>
                <zone h='7517' id='9' name='Average Monthly Salary per Employee (Anually)' pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' type='color' w='8338' x='91662' y='4907' />
                <zone h='5846' id='13' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='12424' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Average Monthly Salary per Employee (Rate of Change in %)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Median Gross Monthly Salary by Occupation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='28' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4907' id='27' type='title' w='100000' x='0' y='0' />
            <zone h='94675' id='26' type='layout-basic' w='100000' x='0' y='4907'>
              <zone h='47338' id='5' param='horz' type='layout-flow' w='86121' x='0' y='4907'>
                <zone h='47338' id='3' type='layout-basic' w='86121' x='0' y='4907'>
                  <zone h='47338' id='10' name='Basic Wage Change by Industry' w='43557' x='0' y='4907' />
                  <zone h='47338' id='19' type='layout-basic' w='42564' x='43557' y='4907'>
                    <zone h='47338' id='20' param='vert' type='layout-flow' w='42564' x='43557' y='4907'>
                      <zone fixed-size='674' h='47338' id='18' is-fixed='true' param='horz' type='layout-flow' w='42564' x='43557' y='4907'>
                        <zone h='47338' id='21' param='horz' type='layout-flow' w='42564' x='43557' y='4907'>
                          <zone h='47338' id='22' name='Total Wage Change by Industry(%)' w='42564' x='43557' y='4907'>
                            <layout-cache cell-count-w='12' minheight='222' non-cell-size-w='61' type-h='scalable' type-w='cell' />
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='47337' id='24' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' w='86121' x='0' y='52245' />
              <zone fixed-size='160' h='94675' id='4' is-fixed='true' param='vert' type='layout-flow' w='13879' x='86121' y='4907'>
                <zone h='7517' id='25' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' pane-specification-id='1' param='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' type='color' w='13879' x='86121' y='4907' />
                <zone h='5846' id='12' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='13879' x='86121' y='12424' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparing Govt. Expenditure vs Poly/Uni Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Comparing Government Expenditure &amp; Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5347' id='15' type='title' w='100000' x='0' y='0' />
            <zone h='94653' id='14' param='vert' type='layout-flow' w='100000' x='0' y='5347'>
              <zone h='94653' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5347'>
                <zone h='94653' id='3' type='layout-basic' w='91662' x='0' y='5347'>
                  <zone h='47331' id='1' name='Govt. Expenditure by Institutions' w='91662' x='0' y='5347' />
                  <zone h='47322' id='11' name='Poly Salary (Line)' w='45832' x='0' y='52678' />
                  <zone h='47322' id='12' name='Uni Salary (Line)' w='45830' x='45832' y='52678' />
                </zone>
                <zone fixed-size='160' h='94653' id='4' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='5347'>
                  <zone h='20136' id='6' name='Govt. Expenditure by Institutions' pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' w='8338' x='91662' y='5347' />
                  <zone h='6371' id='7' mode='compact' param='[Parameters].[Parameter 14]' type='paramctrl' w='8338' x='91662' y='25483' />
                  <zone h='6371' id='9' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='31854' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparing Gross Domestic Product against the Percentage of GDP composition and GDP per industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Comparing Gross Domestic Product against the Percentage of GDP composition and GDP per industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='yq_(2009-2013) real gdp by industry (itp232_teamevians)' name='federated.04n7m8v0vngs461dcwcf11wyp8lr' />
        <datasource caption='(2009-2013) compositions of gdp (itp232_teamevians)' name='federated.0tg89pp1j9k68g11y5r6o0giztjp' />
      </datasources>
      <datasource-dependencies datasource='federated.04n7m8v0vngs461dcwcf11wyp8lr'>
        <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
        <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0tg89pp1j9k68g11y5r6o0giztjp'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='10250' id='13' type='title' w='100000' x='0' y='0' />
            <zone h='89750' id='11' param='horz' type='layout-flow' w='100000' x='0' y='10250'>
              <zone fixed-size='945' h='89750' id='6' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='10250'>
                <zone h='89750' id='4' type='layout-basic' w='99600' x='0' y='10250'>
                  <zone h='44875' id='1' name='(2009-2013) SG GDP Per Capita' w='99600' x='0' y='10250' />
                  <zone h='44875' id='3' name='(2009-2013) GDP per industry' w='37300' x='0' y='55125' />
                  <zone h='16625' id='8' name='(2009-2013) GDP per industry' pane-specification-id='0' param='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' type='color' w='16500' x='37300' y='83375' />
                  <zone h='28250' id='7' name='(2009-2013) GDP per industry' param='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' type='filter' w='16500' x='37300' y='55125' />
                  <zone h='44875' id='9' name='(2009-2013) Compositions of GDP' w='30700' x='53800' y='55125' />
                  <zone h='44875' id='12' name='(2009-2013) Compositions of GDP' param='[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:ok]' type='filter' w='15100' x='84500' y='55125' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparing Poly &amp; Uni Courses'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='horz' type='layout-flow' w='91662' x='0' y='0'>
              <zone h='100000' id='4' type='layout-basic' w='91662' x='0' y='0'>
                <zone h='42397' id='1' name='Poly Courses' w='45833' x='0' y='7603' />
                <zone h='50000' id='11' name='No. of Graduates from Courses' w='45829' x='45833' y='50000' />
                <zone h='42397' id='13' name='Uni Courses' w='45829' x='45833' y='7603' />
                <zone h='50000' id='14' name='Poly Enrolment' w='22924' x='0' y='50000' />
                <zone h='50000' id='17' name='Uni Enrolment' w='22909' x='22924' y='50000' />
                <zone forceUpdate='true' h='7603' id='18' type='text' w='90545' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='15'>Comparing Courses, Enrolment Rate and No of Graduates from Courses</run>
                  </formatted-text>
                </zone>
                <zone h='7603' id='19' param='horz' type='layout-flow' w='1117' x='90545' y='0' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='7' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='0'>
              <zone h='7935' id='15' name='Poly Enrolment' pane-specification-id='0' param='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' type='color' w='8338' x='91662' y='0' />
              <zone h='5846' id='9' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='8338' x='91662' y='7935' />
              <zone h='5846' id='16' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='13781' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison between Poly &amp; Uni Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Comparison between Polytechnic &amp; University Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4907' id='15' type='title' w='100000' x='0' y='0' />
            <zone h='95093' id='12' param='horz' type='layout-flow' w='100000' x='0' y='4907'>
              <zone h='95093' id='10' param='horz' type='layout-flow' w='91662' x='0' y='4907'>
                <zone h='95093' id='5' param='horz' type='layout-flow' w='91662' x='0' y='4907'>
                  <zone h='95093' id='3' type='layout-basic' w='91662' x='0' y='4907'>
                    <zone h='95093' id='1' name='Overall Poly Salary' w='45833' x='0' y='4907' />
                    <zone h='95093' id='8' name='Overall Uni Salary' w='45829' x='45833' y='4907' />
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='95093' id='11' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='4907'>
                <zone h='5846' id='13' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='4907' />
                <zone h='5846' id='14' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='8338' x='91662' y='10753' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='91662' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='91662' x='0' y='0'>
                  <zone h='42614' id='1' name='Average salary of Polytechnic Graduates' w='91662' x='0' y='7386' />
                  <zone h='50000' id='8' name='Average salary of University Graduates' w='91662' x='0' y='50000' />
                  <zone h='7386' id='14' type='text' w='91662' x='0' y='0'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontsize='15'>Comparing the average Salary of Polytechnic and University Graduates</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='100000' id='9' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='0'>
                <zone h='6264' id='11' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='0' />
                <zone h='5846' id='12' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='8338' x='91662' y='6264' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison of employment rate between Uni and Poly Graduates '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='15' underline='true'>Comparison of employment rate between Uni and Poly Graduates </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='yq_(2009-2014) poly employment rate (itp232_teamevians)' name='federated.05w03zw1b34mz41fg29qj1tlmnp8' />
        <datasource caption='yq_(2009-2014) uni employment rate (itp232_teamevians)' name='federated.0osp06n17fpqzq1azgcpj16kipfd' />
      </datasources>
      <datasource-dependencies datasource='federated.05w03zw1b34mz41fg29qj1tlmnp8'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0osp06n17fpqzq1azgcpj16kipfd'>
        <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5875' id='13' type='title' w='100000' x='0' y='0' />
            <zone h='94125' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5875'>
              <zone h='94125' id='3' type='layout-basic' w='92900' x='0' y='5875'>
                <zone h='47062' id='1' name='Employment rate of Poly and Uni Graduates ' w='92900' x='0' y='5875' />
                <zone h='47063' id='7' name='(2009-2014)Uni employment rate ' w='33748' x='0' y='52937' />
                <zone h='47063' id='10' name='(2009-2014)Poly employment rate ' w='38806' x='43900' y='52937' />
                <zone h='23813' id='8' name='(2009-2014)Uni employment rate ' param='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:ok]' type='filter' w='10152' x='33748' y='52937' />
                <zone h='23250' id='9' name='(2009-2014)Uni employment rate ' pane-specification-id='0' param='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Faculty:nk]' type='color' w='10152' x='33748' y='76750' />
                <zone h='23813' id='11' name='(2009-2014)Poly employment rate ' param='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Year:ok]' type='filter' w='10194' x='82706' y='52937' />
                <zone h='23250' id='12' name='(2009-2014)Poly employment rate ' pane-specification-id='0' param='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Course:nk]' type='color' w='10194' x='82706' y='76750' />
              </zone>
              <zone fixed-size='71' h='94125' id='4' is-fixed='true' param='vert' type='layout-flow' w='7100' x='92900' y='5875'>
                <zone h='9000' id='6' name='Employment rate of Poly and Uni Graduates ' pane-specification-id='2' param='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Institution:nk]' type='color' w='7100' x='92900' y='5875' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='10750' id='1' type='text' w='100000' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='11'>Foreign Talent Affects Diploma &amp; Degree Graduates&#10; (Also features Unemployment Data)</run>
            </formatted-text>
          </zone>
          <zone forceUpdate='true' h='89250' id='3' type='text' w='100000' x='0' y='10750'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='10'>Goals:</run>
              <run fontcolor='#000000' fontsize='10'> &#10;Many foreigners come to Singapore and trying to take the popular and high payable jobs in Singapore. This is how the &quot;foreign talent&quot; is comes in to Singapore and taking over local talent (Residents). &#10;&#10;As many of the jobs are taken by foreigners due to their talent and their skills, the graduates might experience difficulties of finding a job and getting a job due to: &#10;·    Foreigners have higher talent than local residents. &#10;·    Most of the jobs are being taken by foreigners due to their talent. &#10;·    Residents feel unfair about foreigners. &#10;  &#10;In this section, we will be finding out how serious does the foreign talent makes the residents including the graduates difficult to find and get their jobs, resulting into unemployment. &#10;  </run>
              <run bold='true' fontcolor='#000000' fontsize='10'>&#10;Hypothesis:</run>
              <run fontcolor='#000000' fontsize='10'> &#10;·    Conditions of employment after graduate from diploma and degree  (D3)&#10;·    Seriousness of unemployment rate of the graduates and foreigners over the years (D2, D4)&#10;·    Unemployment rate of the graduates and foreigners over the years (D2, D4)&#10;·    Trend of unemployment for the graduates as well as foreigners (D1, D2, D4)&#10;·    Employment of graduates and foreigners in different industry (D1, D4) &#10;&#10;Proceed to next page to view each of the dashboard that answer my hypothesis --&gt;</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Employment Rate'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='poly_lastest_latest15 (itp232_teamevians)' name='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut' />
      </datasources>
      <datasource-dependencies datasource='federated.0o3ii9h0gwtc6o18oq4bk0jmnzut'>
        <column datatype='string' name='[Categories]' role='dimension' type='nominal' />
        <column-instance column='[Categories]' derivation='None' name='[none:Categories:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92218' id='5' param='horz' type='layout-flow' w='90413' x='0' y='7782'>
            <zone fixed-size='725' h='92218' id='3' is-fixed='true' type='layout-basic' w='37780' x='0' y='7782'>
              <zone h='46108' id='7' name='Uni c employment' w='37780' x='0' y='53892' />
              <zone h='46110' id='15' name='Poly c employ' w='37780' x='0' y='7782' />
            </zone>
            <zone fixed-size='137' h='92218' id='4' is-fixed='true' param='vert' type='layout-flow' w='7139' x='37780' y='7782'>
              <zone h='22412' id='16' name='Poly c employ' param='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' type='filter' values='relevant' w='7139' x='37780' y='7782' />
              <zone fixed-size='291' h='34016' id='18' is-fixed='true' name='Poly c employ' pane-specification-id='0' param='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169175724039:nk]' type='color' w='7139' x='37780' y='30194' />
              <zone h='15358' id='8' name='Uni c employment' pane-specification-id='0' param='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]' type='color' w='7139' x='37780' y='64210' />
            </zone>
            <zone fixed-size='643' h='92218' id='21' is-fixed='true' name='Poly vs Uni' w='33923' x='44919' y='7782'>
              <layout-cache type-h='fixed' type-w='cell' />
            </zone>
          </zone>
          <zone h='7782' id='20' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='825' h='6826' id='19' is-fixed='true' mode='type_in' param='[Parameters].[Parameter 1 1]' type='paramctrl' w='100000' x='0' y='0' />
          </zone>
          <zone fixed-size='20' h='80488' id='17' is-fixed='true' name='Poly c employ' pane-specification-id='2' param='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' type='color' w='9587' x='90413' y='19512' />
          <zone h='11730' id='22' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='9587' x='90413' y='7782' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Govt. Expenditure (Expand)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Government Expenditure (In depth)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6143' id='4' type='title' w='100000' x='0' y='0' />
            <zone h='93402' id='3' type='layout-basic' w='100000' x='0' y='6143'>
              <zone h='93402' id='1' name='Govt. Expenditure ' w='100000' x='0' y='6143' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Govt. Expenditure1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Government Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6050' id='18' type='title' w='100000' x='0' y='0' />
            <zone h='93950' id='5' param='horz' type='layout-flow' w='100000' x='0' y='6050'>
              <zone h='93950' id='3' type='layout-basic' w='90413' x='0' y='6050'>
                <zone h='46985' id='1' name='Govt. Expenditure' w='45207' x='0' y='6050' />
                <zone h='46965' id='7' name='Total Expenditure on Education' w='45206' x='45207' y='53035' />
                <zone h='46965' id='11' name='Govt. Expenditure by Institutions' w='45207' x='0' y='53035' />
                <zone h='46985' id='13' param='vert' type='layout-flow' w='45206' x='45207' y='6050'>
                  <zone forceUpdate='true' h='32819' id='14' type='text' w='45206' x='45207' y='6050'>
                    <formatted-text>
                      <run fontcolor='#b4b4b4' fontname='AR JULIAN' fontsize='14'>Æ&#10;&#10;&#10;&#10;&#10;</run>
                      <run fontalignment='1' fontcolor='#f28e2b' fontname='AR JULIAN' fontsize='14'>&#10;1ST DEFENCE 25,786</run>
                      <run fontalignment='1' fontcolor='#f17b79' fontname='AR JULIAN' fontsize='16'>&#10;2ND EDUCATION 14,049</run>
                      <run fontalignment='1' fontcolor='#ba9582' fontname='AR JULIAN' fontsize='14'>&#10;3RD HOME AFFAIRS 4427</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='93950' id='4' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='6050'>
                <zone h='22780' id='12' name='Govt. Expenditure by Institutions' pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' w='9587' x='90413' y='6050' />
                <zone h='7208' id='10' mode='compact' param='[Parameters].[Parameter 14]' type='paramctrl' w='9587' x='90413' y='28830' />
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='15679' id='16' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\education.png' type='bitmap' w='8868' x='64290' y='7433' />
        <zone h='16293' id='17' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\health.png' type='bitmap' w='11043' x='82114' y='5069' />
        <zone h='12744' id='20' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\defence.png' type='bitmap' w='7576' x='49462' y='8327' />
        <zone h='13686' id='21' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\home.png' type='bitmap' w='9126' x='79811' y='7386' />
        <zone h='12660' id='22' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\defence.png' type='bitmap' w='6651' x='47274' y='8362' />
        <zone h='13473' id='23' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\educatiom.png' type='bitmap' w='7849' x='63511' y='7433' />
        <zone h='14750' id='24' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\home.jpg' type='bitmap' w='7070' x='78490' y='6736' />
      </zones>
    </dashboard>
    <dashboard name='Industry Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Industry Salary &amp; Increase in Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4907' id='10' type='title' w='100000' x='0' y='0' />
            <zone h='95093' id='5' param='horz' type='layout-flow' w='100000' x='0' y='4907'>
              <zone h='95093' id='3' type='layout-basic' w='89057' x='0' y='4907'>
                <zone h='47551' id='1' name='Industry Salaries (Year &lt; 5)' w='44530' x='0' y='4907' />
                <zone h='47551' id='7' name='Industry Salaries (Year &gt; 5)' w='44527' x='44530' y='4907' />
                <zone h='47542' id='8' name='Industry with Wage Increase' w='87754' x='0' y='52458' />
                <zone h='47542' id='9' param='horz' type='layout-flow' w='1303' x='87754' y='52458' />
              </zone>
              <zone fixed-size='210' h='95093' id='4' is-fixed='true' param='vert' type='layout-flow' w='10943' x='89057' y='4907'>
                <zone h='25053' id='12' name='Industry Salaries (Year &gt; 5)' pane-specification-id='5' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]&#10;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' type='color' w='10943' x='89057' y='4907' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='NS graduates'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='50000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='41662' x='0' y='0'>
              <zone h='50000' id='1' name='Sheet 18' w='41662' x='0' y='0' />
              <zone h='50000' id='7' name='Sheet 19' w='41662' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8338' x='41662' y='0'>
              <zone h='18202' id='6' name='Sheet 18' pane-specification-id='0' param='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]' type='color' w='8338' x='41662' y='0' />
              <zone h='17747' id='8' name='Sheet 19' pane-specification-id='0' param='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Year:ok]' type='color' w='8338' x='41662' y='18202' />
            </zone>
          </zone>
          <zone h='100000' id='9' name='Sheet 21' w='44608' x='50000' y='0' />
          <zone h='100000' id='11' type='layout-flow' w='5392' x='94608' y='0'>
            <zone h='8646' id='10' name='Sheet 21' pane-specification-id='0' param='[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]' type='color' w='5392' x='94608' y='0' />
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Average Salaries of Universities and Polytehnics</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4907' id='13' type='title' w='100000' x='0' y='0' />
            <zone h='95093' id='5' param='horz' type='layout-flow' w='100000' x='0' y='4907'>
              <zone h='95093' id='3' type='layout-basic' w='91662' x='0' y='4907'>
                <zone h='47547' id='1' name='Overall Average salary of Poly Graduates' w='91662' x='0' y='4907' />
                <zone h='47546' id='12' name='Overall Average salary of Uni Graduates' w='91662' x='0' y='52454' />
              </zone>
              <zone fixed-size='160' h='95093' id='4' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='4907'>
                <zone h='5846' id='6' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='4907' />
                <zone h='5846' id='11' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='8338' x='91662' y='10753' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Part time Job'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Salary of Part Time Jobs</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5347' id='9' type='title' w='100000' x='0' y='0' />
            <zone h='94653' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5347'>
              <zone h='94653' id='3' type='layout-basic' w='99792' x='0' y='5347'>
                <zone h='94653' id='1' name='Graduates who prefer Part Time' w='49897' x='0' y='5347' />
                <zone h='94653' id='7' name='Average Monthly Salary of Full Time &amp; Part Time Employees' w='49895' x='49897' y='5347' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='PolyVsUniEmploymentRate'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='employmentratediffuniandpoly (itp232_teamevians)' name='federated.099aqpr0lgdpc91b9vb291yzdvc1' />
      </datasources>
      <datasource-dependencies datasource='federated.099aqpr0lgdpc91b9vb291yzdvc1'>
        <column caption='School1' datatype='string' name='[School]' role='dimension' type='nominal' />
        <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[School]' derivation='None' name='[none:School:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='50000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='41662' x='0' y='0'>
              <zone h='100000' id='1' name='polyvsuniemployment' w='41662' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='8338' x='41662' y='0'>
              <zone h='7395' id='6' mode='dropdown' name='polyvsuniemployment' param='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[yr:Year:ok]' type='filter' w='8338' x='41662' y='0' />
              <zone h='8191' id='7' name='polyvsuniemployment' pane-specification-id='1' param='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' type='color' w='8338' x='41662' y='7395' />
              <zone h='11945' id='9' mode='radiolist' name='Sheet 12' param='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' type='filter' w='8338' x='41662' y='15586' />
            </zone>
          </zone>
          <zone h='100000' id='8' name='Sheet 12' w='50000' x='50000' y='0' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total Labour Cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Total Labour Costs</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5347' id='9' type='title' w='100000' x='0' y='0' />
            <zone h='94653' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5347'>
              <zone h='94653' id='3' type='layout-basic' w='91662' x='0' y='5347'>
                <zone h='94653' id='7' name='Total Labour Costs' show-title='false' w='91662' x='0' y='5347' />
              </zone>
              <zone fixed-size='160' h='94653' id='4' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='5347'>
                <zone h='20136' id='8' name='Total Labour Costs' pane-specification-id='0' param='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' type='color' w='8338' x='91662' y='5347' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true' saved-dpi-scale-factor='1.25' source-height='305'>
    <window class='worksheet' name='(D1)Enrolment Over the Years'>
      <cards>
        <edge name='left'>
          <strip size='168'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1)Gender Distribution (Enrolment)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' type='filter' />
            <card mode='dropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1)Enrolment from Different Institutions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Calculation_347621635205959680:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Name of Institution:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1) Courses Offered_Poly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Calculation_770960001586753536:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Calculation_770960001586753536:ok]</field>
            <field>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Education Type:nk]</field>
            <field>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Gender:nk]</field>
            <field>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]</field>
            <field>[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D1) Enrolment by Courses_Uni'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Calculation_1052434978362343426:ok]</field>
            <field>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Education Type:nk]</field>
            <field>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Gender:nk]</field>
            <field>[federated.1lzuenn10qywcc1fnlm5t0j8kcb1].[none:Type of Course:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D2)Number of Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]' type='filter' />
            <card pane-specification-id='5' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[attr:eduType:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:eduType:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:sex:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D2)Gender Distribution'>
      <cards>
        <edge name='left'>
          <strip size='150'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='148'>
            <card mode='checkdropdown' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]' type='filter' />
            <card pane-specification-id='20' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[:Measure Names]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Calculation_895090458157256705:ok]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Year:qk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:eduType:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:nameOfInstitution:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='(D2)Gradutes from Different Institutions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Education Type:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Name of Institution:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:Sex:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:eduType:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:nameOfInstitution:nk]</field>
            <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D2) Number of Graduates by Course_poly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Calculation_1052434978356871168:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Gender:nk]</field>
            <field>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]</field>
            <field>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[sum:Number of Graduates:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D2) Number of Gradutes by Course_Uni'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Calculation_1052434978361569281:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Calculation_1052434978361569281:ok]</field>
            <field>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Education Type:nk]</field>
            <field>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Gender:nk]</field>
            <field>[federated.193r8p40646y5i1eep8lk188l5vi].[none:Type of Course:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='(D1) Enrolment in Singapore' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D1)Enrolment Over the Years'>
          <zoom type='entire-view' />
          <highlight field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Education Type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D1)Enrolment from Different Institutions'>
          <zoom type='entire-view' />
          <highlight field='[federated.1u7lmzt0tln6cf1fsow230pur7jk].[none:Sex:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D1)Gender Distribution (Enrolment)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='(D1) Enrolment in Different Institutions Poly' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D1) Courses Offered_Poly'>
          <zoom type='entire-view' />
          <highlight field='[federated.173co5b0a3e1e614iuhu01d8hdju].[none:Type of Course:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D1)Enrolment from Different Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
    </window>
    <window class='dashboard' name='(D1) Enrolment in Different Institution Uni' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D1) Enrolment by Courses_Uni'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D1)Enrolment from Different Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='(D2)Graduates in Singapore' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D2)Gender Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2)Gradutes from Different Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2)Number of Graduates'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1arc57x1dl54pe1dvapq30zzu1zh].[attr:eduType:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='(D2) Graduates from different Polytechnic' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D2) Number of Graduates by Course_poly'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1h7v2m11diyhbz13axnid0vj3q1i].[none:Type of Course:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='(D2)Gradutes from Different Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' name='(D2) Graduates from different universities' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D2) Number of Gradutes by Course_Uni'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2)Gradutes from Different Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='dashboard' name='(D3) Job Vacancy Overview' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D3) Industry Size Figures' />
        <viewpoint name='(D3)Annual JV'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D3)Industry Size' />
      </viewpoints>
      <active id='3' />
    </window>
    <window class='dashboard' name='(D3) Job Vacancy By Industry' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D3)JV by Industry &amp; Sub Industry'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='(D4) Comparing Job Vacancy &amp; Recruitment Rate' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D4) Job Vacancy by Industry &amp; Occupational Group'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Recruitment Rate '>
          <zoom type='entire-view' />
          <highlight field='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='(D5) Comparing Employment Rate in Industries &amp; Qualifications' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='(D5) Change in employment rate'>
          <zoom type='entire-view' />
          <highlight field='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D5) Employment Rate in different qualifications'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='Comparing Poly &amp; Uni Courses' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='No. of Graduates from Courses' />
        <viewpoint name='Poly Courses' />
        <viewpoint name='Poly Enrolment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Uni Courses' />
        <viewpoint name='Uni Enrolment'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='dashboard' name='Comparison between Poly &amp; Uni Salary' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Overall Poly Salary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Uni Salary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Overall Average salary of Poly Graduates' />
        <viewpoint name='Overall Average salary of Uni Graduates' />
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Average salary of Polytechnic Graduates'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average salary of University Graduates'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Average Monthly Salary per Employee' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Average Monthly Salary per Employee (Anually)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Average Monthly Salary per Employee (per Quarter)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Monthly Salary per Employee Rate of Change in %'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Average Monthly Salary per Employee (Rate of Change in %)' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Basic Wage Change by Industry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Wage Change by Industry(%)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' name='Industry Salary' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Industry Salaries (Year &lt; 5)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Industry Salaries (Year &gt; 5)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Industry with Wage Increase'>
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Govt. Expenditure1' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure' />
        <viewpoint name='Govt. Expenditure by Institutions'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Expenditure on Education'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='dashboard' name='Comparing Govt. Expenditure vs Poly/Uni Salary' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure by Institutions'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Poly Salary (Line)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Uni Salary (Line)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Govt. Expenditure (Expand)' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Total Labour Cost' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Total Labour Costs' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Part time Job' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Graduates who prefer Part Time'>
          <zoom type='entire-view' />
          <highlight field='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Comparison of employment rate between Uni and Poly Graduates ' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='(2009-2014)Poly employment rate '>
          <zoom type='entire-view' />
          <highlight field='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Course:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(2009-2014)Uni employment rate '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Employment rate of Poly and Uni Graduates '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Comparing Gross Domestic Product against the Percentage of GDP composition and GDP per industry' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='(2009-2013) Compositions of GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(2009-2013) GDP per industry'>
          <zoom type='entire-view' />
          <highlight field='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(2009-2013) SG GDP Per Capita'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Employment Rate' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Poly c employ'>
          <zoom type='entire-view' />
          <highlight field='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Poly vs Uni'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Poly&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Uni c employment'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='21' />
    </window>
    <window class='dashboard' name='PolyVsUniEmploymentRate' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Sheet 12'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='polyvsuniemployment'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:Categories:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Business&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='NS graduates' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Sheet 18'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 19'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 21'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' name='(D1*) Compare Employment Based On Residency' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='(D1) Employment Change for each industry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D1) Foreigners View (Passes)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D1) Residents &amp; Foreigners Employed'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='(D2*) Compare Employment based on Educational Level' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='(D2) Employed Highest Education'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2) Long Term Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D2) Trend of Residents'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Year:ok]</field>
                    <field>[federated.1ne2hb80os4mjf12vz69c1swhrpz].[sum:Residents:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2014</value>
                  <value>81.799999999999997</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='(D2) UnEmployement Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
    </window>
    <window class='dashboard' name='(D3*) Compare Employment After Graduate From Poly and University' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='(D3) Degree Graduates (Words)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Diploma Graduates (Words)'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Graduates [Chart]'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='(D3) Number of People Employed'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D3) Number of People Unemployed'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
    </window>
    <window class='dashboard' name='(D4*) Trend' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='(D4) Employment Change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Foreigners'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Local'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='(D4) Trend of Seriousness'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(D4) Trend of Unemployment Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='(D1) Residents &amp; Foreigners Employed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1) Foreigners View (Passes)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05yfoir07jruab0zjgjk40glzxic].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D1) Employment Change for each industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]' show-all='false' type='filter' />
            <card pane-specification-id='5' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) Trend of Residents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) Employed Highest Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[none:Status:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) Long Term Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D2) UnEmployement Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Graduates [Chart]'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14miaw50iyirw316i6zjx0h6q6qc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Diploma Graduates (Words)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Degree Graduates (Words)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Number of People Employed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3) Number of People Unemployed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Seriousness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Unemployment Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Foreigners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Trend of Local'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ne2hb80os4mjf12vz69c1swhrpz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D4) Employment Change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Local:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Industry:nk]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[none:Year:ok]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Foreign:qk]</field>
            <field>[federated.1bcqxnd09w8y6w1f8pqr20yk50ba].[sum:Total:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' maximized='true' name='(D3)Annual JV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0fh2wh0162pgdo14eqw5a0pa8mgm].[none:Calculation_347621635207565313:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(D3)Industry Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[:Measure Names]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[attr:industry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:industry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:subCategoryIndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:year:qk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:noOfJobVacancy:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D3)JV by Industry &amp; Sub Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Year:qk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:industry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:subCategoryIndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D3) Industry Size Figures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:Number of Job Vacancies:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:industry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[sum:noOfJobVacancy:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D4) Job Vacancy by Industry &amp; Occupational Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Calculation_730427605007749120:ok]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Occupational Group:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:Sub Category:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:industry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:lndustry:nk]</field>
            <field>[federated.0vft1k709xhyb31dxb9hl0lhr28y].[none:subCategoryIndustry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D4) Recruitment Rate '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Calculation_877076067992436737:ok]</field>
            <field>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Industry:nk]</field>
            <field>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Occupational Group:nk]</field>
            <field>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Sub Industry:nk]</field>
            <field>[federated.00zutmp1ui2e8s12xk1nm03g6374].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D5) Employment Rate in different qualifications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Calculation_877076067998408706:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0tnpyf0024rc1416s2exz120vj26].[none:Gender:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='(D5) Change in employment rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Calculation_877076068000169987:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1rr7kee148ndz41a3lzd21ui9oqf].[none:Industry:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Govt. Expenditure '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee Rate of Change in %'>
      <cards>
        <edge name='left'>
          <strip size='296'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:nk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average salary of Polytechnic Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Poly Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Uni Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Average salary of Poly Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</field>
            <field>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Overall Average salary of Uni Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</field>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</field>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Wage Change by Industry(%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (%):qk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Industry:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Year:ok]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average salary of University Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]</field>
            <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Basic Wage Change by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='2' param='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee (per Quarter)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee (Anually)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Graduates who prefer Part Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry with Wage Increase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry Salaries (Year &lt; 5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]&#10;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' type='color' />
            <card pane-specification-id='6' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]</field>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry Salaries (Year &gt; 5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]</field>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Labour Costs'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='No. of Graduates from Courses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</field>
            <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:No. of Graduates:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Govt. Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Operating Expenditure:nk]</field>
            <field>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Expenditure on Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Govt. Expenditure by Institutions'>
      <cards>
        <edge name='left'>
          <strip size='136'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 14]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Uni Courses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Poly Courses'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Poly Enrolment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Uni Salary (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Uni Enrolment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Employment rate of Poly and Uni Graduates '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1md79lv13dphog0zzqquv01dsv6w].[none:Institution:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(2009-2014)Poly employment rate '>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.05w03zw1b34mz41fg29qj1tlmnp8].[none:Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(2009-2014)Uni employment rate '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0osp06n17fpqzq1azgcpj16kipfd].[none:Faculty:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(2009-2013) SG GDP Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(2009-2013) GDP per industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04n7m8v0vngs461dcwcf11wyp8lr].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='(2009-2013) Compositions of GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0tg89pp1j9k68g11y5r6o0giztjp].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Uni c employment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Calculation_1668865169157484549:nk]</field>
            <field>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Categories:nk]</field>
            <field>[federated.0fbq8zp1brsd8y10kpunt0fo0pzo].[none:Degree:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Poly c employ'>
      <cards>
        <edge name='left'>
          <strip size='228'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1 1]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1148699410958741504:ok]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169154719748:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Calculation_1668865169175724039:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Categories:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:Courses:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[none:EmploymentPercentage:nk]</field>
            <field>[federated.0o3ii9h0gwtc6o18oq4bk0jmnzut].[usr:Calculation_1258193177789042689:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Poly vs Uni'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f97uq91tgx3cy19u13k71g5kp23].[yr:Year:ok]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Calculation_1668865169193791499:nk]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Last 2 Year (copy):nk]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Last Year (copy):nk]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[none:Schools:nk]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[tyr:Year:qk]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169190776841:ok]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Calculation_1668865169201549325:ok:1]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[usr:Last Year Volume (copy):ok]</field>
            <field>[federated.1nt76jc1qmm4hc1fywto017ejw4y].[yr:Calculation_1668865169193033738:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='polyvsuni'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='polyvsuniemployment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.099aqpr0lgdpc91b9vb291yzdvc1].[none:School:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Graduates:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Fresh Graduates&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Schools:nk]</field>
            <field>[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]</field>
            <field>[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03a2gm5005la8x1g29pcg0fsk740].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15aa7e10nj99k31gbnm4r08ms0wj].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Graduates:nk]</field>
            <field>[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Schools:nk]</field>
            <field>[federated.1upimfi1a3kygl155wgxq1lxxv99].[none:Year:nk]</field>
            <field>[federated.1upimfi1a3kygl155wgxq1lxxv99].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Poly Salary (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(2009-2013) Compositions of GDP' width='192'>
      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
      98qjeMlM9lAyLwf/YD9+AGsCqVmZpGVXsmaJjTOdI5Qtq6Uo7eNu9SPExMUvABYr2cULyC7+
      v6uWLF/+gZv4CirwxfeuOcJkZFYhTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBM
      TQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTC2u
      neGigSHqD+6jqa0fxZPF6tpryUl2MtLZxK49RxnWXKxYu57CNDeKFqR+73Yazg3hK6pm1dXz
      cNskr2JqxbU9+sD5c9jzarjr0/exqSqBPQdOEdH8HNhbz/w1t3LPjYs5smsHg6EYvW/voVUt
      48677yQr0MTh1sH4lSpMI44BsJBetJDKokysFtB1Cy6PEyPQTsRdQX6aG1tyAXN9KoMD/TSd
      07iqphCn3cHCJfPoPX0e6cMsplocp0AKFouCrkU433SYg2dCLK8txBJ+B0tSCtYLd39xu9xo
      kQhBp5Mk1TK+XaKXhHA3UcNAi0Qu7lHTNHRdv/hzJByO368DRKNRQqFQXMcUUyvO7dHD1O96
      jS61gBs3LcdlgYhmRfMH0Bg/HIXDIdyqijUUJmAYJAAEgwRUFVVRsDsc47syDKLRKHa7/eLu
      7Y74HiNsNhtOpzOuY4qpFd9bJJ3YT2/KQq5fuRDXhZFVdw62sRb6xyJooSE6B4MkJqcyN03j
      5Nl+olqMc42nScjPRBqRi6kWvyOAHqal6QynRs7QWT/exz+9eCk3rChlfkki23/zLFENSpeu
      x+d1Yqm+iqZtr/LzAxr2pDzWbfB91H0yhJgUxZiltzj5oClQ18AYD/1ga9xq+OqnV7ByobSv
      nq0URVHkwrowNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1
      CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwtfh2hgMMPYZ/bAybOxmH
      FTAMYtEQI6NjaIYFT1IKTpsFBYOQf4SxQBR7ghevy46iSGcgMbXiGgAj5ufonl0cb2hg0R1f
      YUk26HqYt157gW7NhYMoYVcON6y+hoRwBy+/tA9LgotAUKV241qyPfaPH0SICYhrAEY620ko
      WkJNpPtip2ct1E5PII/1dyzDrejUvbaVnqERIg3HKbh2I9U5CQw117H3ZBc3XV0g3eHElIpr
      AJLyy0kCmlosjF1YZrH7cKkNdPYMkm4bYTDoZJ4L6kMOqn0uLIqF1Pw8tO39RIx8Lj0GGIbB
      ZY3t4tzkzjBgljbWExfE/RzgdykWF3k5bhr2vkkUC1mFFSTYLGg2G473Xu7tDhy6js54S/L3
      6LpO5JJ26ZFL1sVDLBa7bHwx+8x4AKJdJ3gnkMetn6jArugc2/EaLT2JJEaD9EV0PHaD2EA/
      gQQ3dkVBvdAL9L1X3svao9vjGwCbzYrjQrt2MTvF8TKogaHr4ze1MAwMffzmForLTfB8KyPB
      KLHwCO19Q9jtHsqL3Rzc18ho0M/BA03klmSjxq9YYRJxPALEaD22l73vtKGjwvlf0JFeRO2a
      Zdy0SmPPy79mTHOxeNUmyrKSsGSv5urQm2z7bSN5i5ZzdX5S/EoVphHHANgorKmlsOYDVs1Z
      yK1zFv7OQoXC6jUUVsejNmFW8k6wMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAw
      NQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwtRnpDh0Y
      G8P6XndowDA0AqOjBMJR7G4vXrcTi3KhO3TwwjLpDi2mwYx3h8bQ6T51lIONnVitKvaUbJbW
      LMYVbpfu0GLazXx36JifhuZurlmzgQyPDV3TUCxRGndLd2gx/Wa8O7QW6qC/L8rhHVvoG4lS
      Wl3LkrIkOqU7tIiDGW+OSzDACC6uv2EjPqfOG1uepyXxWukOLeJixgOgeH343EO4HHYUVaEo
      L4ehWEy6Q4u4iHt3aF3XL3SHHv+7as8kydpGQ0sP0egYZ873kOhJo7zIdbE79CHpDi2myQx2
      h/457b4irrthBddtupUDdbv45ZEIi1dvoCjDgyWjlqvDb7LttyfJW7SCpdIdWkyDK6M7tC2F
      5etuY/llC6U7tJh+8k6wMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJ
      gDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMLVJfyc40HeOw8dP4o+OtyexWO0s
      XHo92d4pq02IaTfpAGz9z8c5ESok1T3erES1uyhcfD3ZU1aaENNv0gFIzJvH/Wv+mLIMaVgr
      Zq9JB8BuxNj56lY6clOA8SlQRc1KMhM+ejstPELjiRMkl68k95LpkhH103BoP9HsJdQUJgMG
      7e8c4NjpfrLLa6guyUK1SGtcMbUmHQAjFqKntZG+tvEnpdXhJmPeRwcg2N/Krr3HGOw9S2nu
      pQEw6Dpzgu72dzkfK6WmMImR0/vZ16qyatlVNO2t47h7PTV5iZMtV4gPNOmrQLV3PMjqyjwi
      oQDWxAI23v1ZKnwfvY1i9bD0ho1Uz019f6FhEBvtoP5MmEVVJePL9DCNjYPUrKwmKz2D5UuL
      eLelE22yxQrxISZ9BNi95UkODudz612fZvjMWzz70//iT77xMHnOD9/GmZSGE+i+ZJlhxKg/
      XE9B1bVkxOrHF+pRhqxu5jstgII9LR3XSA8Rw8Aai13cVtO0y7ozR6U7tJigSQegZyTILXfc
      SUWGDRaUoA58n5ZeyMuf2H7GOo7ydo/KkpxuWnp7GOlV6BhwYNFiRN5rvR+LElUULICqvt8i
      V9d1rNb3fwWrGt/2uaqqXja+mH0m/eh5VZ03dx7At34h/nNH2NGkcu9dk6kgmeK8GEN9vTA4
      SmjUxnDQIEMNcn4kSopPxd/VieHLxa4oF+8TZhgGiqJgsbw/i1Ms8X1f73fHF7PPpAOw7p6H
      eH7zs/z9d17AlZzL+s8/SMlHXgHS6DnbRHNbH52nuwj7d6HnZTK/spwV2WXj/+ScTktrAfPn
      ZKElV/Kbl7bRlZFMf6+flZuuktsjiSk36QBYvdnc/oWH2RSOYrXaUa0f90qo4E5KIw8Xufnj
      8ySrw4Pt0s0yq9iUMv6+gppUyI0b3PQPh6iq8ZEmN8gT02DCAXh7+39zTFtAzuAujrS9f0Kq
      2l1svPeLlKd92JYWPKmZeFI/bD3g8OK7eMMVBU9KJp6UiVYoxO9vwgFwJ2eSoXtIVvPIv+TC
      pMXmwCXng2KWmfBTdm7NOuYCB7Y3cN1Nd5KRAKBxqu5VIjJJF7PMhC9hGLpOKOjndOMx+ob9
      +P1+/CP9NBzZQ8fIdJQoxPSZ8BEgNNzJ0//yfd441ML2E1/HbQPVaie1aAWPyEdBxSwz4QA4
      EjO4+6FvkF+2jYKrNpHuBqsjgaRENx97IUiIK8yEA2BRbaT4Mtl01+enox4xzRpb+2hu64/L
      WFarhU3LSuMy1mRNOAD7fvk9dkaXUdTza7Y3v//ZG5vLy+e++vcskWnQFe1wcyebd7wdl7Fc
      dusfXgDKVtxBipGKJ5RCqd+4uFyxWJmTPKW1CTHtJjxrT8svp6IgncHucwScWRSnBPjFEz/m
      mRfrscibtWKWmfRpa1NTAynJLva/vJeaex9mdfJpTnR//HZCXEkmf90mGuJUwyHquiysXlxM
      ksOBIleBxCwz6afsNctW0rR/HwtWr8dnjNLrqWJBxlSWJsT0m/Snd/Kr1/Fw2QoCoQh+zcam
      29fikiOAmGUm/42w5t08+dRv6QrpaBGYt/ZTPHT7ssnvUIgZMOnn6766OpZ+6i+5piSNWKCb
      l57eTH3/Mmo+9OPQQlx5Jj1pCUajZKSnk+B2k5iaRYY3wmhgKksTYvpN+ghQU1HCkz96nOKy
      fILdrfTYK/n6BL8QL8RMm3QASlfdyV8UnKXlXA/emhXMKS7EM5WVCREHkw5ALDDAkT1vUn9u
      gATfXDZm5uLzfkRTICGuQJM+B9j29A85Gcpi4803U50b5d9/+BPaQ1NZmhDT738BIi3UDK7s
      jFgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(2009-2013) GDP per industry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(2009-2013) SG GDP Per Capita' width='192'>
      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
      WJoEQFja/wMWeH0jlQvligAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(2009-2014)Poly employment rate ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(2009-2014)Uni employment rate ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1) Courses Offered_Poly' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D1) Employment Change for each industry' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='(D1) Enrolment by Courses_Uni' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1) Enrolment in Different Institution Uni' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D1) Enrolment in Different Institutions Poly' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1) Enrolment in Singapore' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1) Foreigners View (Passes)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1) Residents &amp; Foreigners Employed' width='192'>
      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
      8TTSABJP8/8BiM6OLuDpd4oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D1)Enrolment Over the Years' width='192'>
      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
      u0BSV/v/nvyzmXNZph0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D1)Enrolment from Different Institutions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D1)Gender Distribution (Enrolment)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D1*) Compare Employment Based On Residency' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D2) Employed Highest Education' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D2) Graduates from different Polytechnic' width='192'>
      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
      +tmz6Q360p+EN8y+LW9h957YAV585G5e39U5Kh0e+M0D3Pbdb57WLihv5x4efm4dvW37uf1b
      PyIJzJ03dBz4A3/6O9+8/WY2rX4S7fRLmVd5erub7vza7QSP1/m3vxn6zxmu2T1et9/87rcg
      kvzqR9+krts74lmvvZkt+5pTZHzl9q+dNJ8TOUBBaSX52alLmEODNu741g8JRqI0NKTmO56M
      457gkdRteo3ZV97EikU11DVq0CkTfOerX8Uz6ODr//173nn2SXp7bVz2+TvRO95n1dZmBlt3
      Mud6uPP73+ePDzzA9+/8Pvff91P++3/+F2dPGx+//bu8tuo9wju95H/nG7z619+TVGupXHwV
      2Z6DbGkfYFrlPL5522dxth/iva07UP7mQWYX+9hQ56O08jwK4x10uOMEk3oe+P6nueKL93BB
      hQq3rhyNq4UVn7+Lz16xCIDyqtl84t9upn3PN9nfE+KvjzzG12/9ODv27uXBR/5Kx4aX6NXU
      MSsvwT/++Q80Crj5O//F4//3c7R+Dxfd8E3Wv/g4aq2GxVfdjGvz4ziMNRysXcd3f/pfbNux
      i1/efTff+393k6c3cdlll/H0k09w2WWX8c7Tf8RmvpCV2T2satXS/MajVC9cws5Ddv7yx5/x
      w7v+A61GwVU3f4cPL5vJoO0gP/3Vn9CpknziS9/lpeeHdFsyu4z51UWgNnLZ5ZfTX7+B9s5e
      /vXbnyDXm8mumM/nlg5tTPnRN27jO//zCM/d/2OKF17Mrl07uPePf+G65RX88Yk3EbEo99x/
      Pw/d/QPiuhw+fdNXcNoaeOC397GvzcP9d17Fl375DAvzk+Qu+jQzqYM51+Pc8iAHuv1c+uFP
      cO3ly3jrlae47is/5CMrZwLw4mMPsq2xD68/wgO/+xE/+96D3P/Hu7nzrjv54pXn8+ALW9Fa
      y5mldzEQ1zBv6SVMUw/wxJs7iEUFv/nF9/jWd/6dadPK+PxXvkdNSfqNNmelD7DqsT/S1BfB
      OzjIvX95jgXFeoLREAadki079rNm/W7++MCvueaSJSlpA4EAsUgYgwa27G7h2o9fxk1f/R7z
      c0K8sb0VpcbIqldeoKi0mFgwiEoztFMpb9psLli6mH+/+y70wOLLruM/v3MjezoG+eU991Aa
      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
    </thumbnail>
    <thumbnail height='192' name='(D2) Graduates from different universities' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3xcxbm4/2zvq1XvkpvcjRvghjElQAiBhJAQSkgnCTcJuTf5XVIBf8kl
      NySBhISbhJbQQjUdYzAB995wl7TqfaXVans/Z35/yJa10q4tG0mW7X0+H5edM/POO+8575k5
      UxVCCEGaNOcoytOtQJo0p5Mx4QCt9ZX86cEH+O3v/8ieQ7Unnf6Siy4meBLxd+3Zc9J5AGxf
      /TLz5s3jwcdXnFL6gXjb7Sxfvpzl/+8+Xnj1XaJSb2W8a+0q1u48BMAzf7qb+RcsZOXGvexb
      /xbz583j/keeGZb8AT7eswdpQNgHb72Avd0DQNDZwFOvrkqROsiDD/5t2HR54fE/0+6JEfF1
      c8je0Bf+6lN/o8F5Mnd46Jx2B6javprrbvoOJZNmMnfGRDZv2zHief7Hj354SuleX/ECDzz9
      Lj+5/YvDooe3vYYPdlSxbOkSara9yXVf/S8EUDhuEuOKcgF45uUP+WjrVq65aDZvvvYy9/51
      Bb/8wVeHJX+A//zhj4gMCPv3Wy9S0+4FINR9PAfQsGjR+cOmy8x5CzDrlHTZt/M/f3mqL3za
      nPOxGTXDlk8C4jRz502Xi/d2NQ4KX7ZkqXj28d+JK2/6jvA0fywuu+wysXTJAnHlF78nYrIQ
      VTs+FAvmzxVXfvoakVc2UwSEED+8eZnY1RQQQgTF0iXLhBBC/OFXPxCXXnqJmD17jnhv62Hx
      99/9QlgyrGLZsmXi7y+vFge3vCcWL1ggFi5cIB57ebWQox5x4zWfEsuWLRMXX32TCB/RZ+vq
      l0VpQbaYfeES8bu/vyy+dd2F4slnnhUXLfm86Al7xDe+dI1YumyZuOzT14sWV1C8++yDYt5F
      l4vPXv0pMW/hJeL2r39FzJ4xVfzx6bf7yti8611x7bfuOvJLFrdcMV/saPSIZx+8Szz47Lvi
      nw/fJzKsGWLpsmXivl/fJ8qL88Ss+QvFfQ//U6x54ymxYMECsWDBIvH2+r1COCvFhdd+Tfzi
      jtvEz3/3N7F7zRti0YIFYuGCBeKZt9cLIZxiRvFk8bVbvyzOmz5V/O2lDxLkP/zPt/r0uutb
      14l3dzUJIYRwVq4Ry27+oRAiKOZWlItv3HaTmDNzmnjwqbd6w+ZeKOSYVyxccKmIykKEuqrF
      0qtvFlF/p/jSNZ8SFy+9SNx4+10iJvfK/cuTz4ilFy0RVXUN4qpLLxLLli0T13/tTiGEEDcv
      myUqnWFxw8WzRF5xuVi2bJmocoTFt667UOxqCohW+25x6UWLxJJFC8W9Dz8jhIiLH33t8+Li
      ZcvE0qUXiybPyT9/p90BvrhkrqjzyKJq62qxbMmFYtaym4UQQiybP1U8vuJ9IYQQkiSJ9uZ6
      sXbNGvGp+RWi2iXE166+WGyr7eqNu2RpSgeIhvxi+5ZN4vEHfilu/+kfhRBCXLh0SV/+X7ly
      qdjf7hNS1CeWXv5pEeupF3PmLxJPPP28qG9xCLmfrnd96zqxptIphBDiW9ddKO55+HkhCyE+
      fPHP4ie/fVIIIcTqZ/8o/vuBf4p3n31Q3P23V4QQQnz2giWiS5JF4453xM0/vLdPXqIDCPHL
      731RvLWlrs8B+pdNCCHu/eHNRx5MWVy6aJ5wheIi5KoVV1z7NSGclSK3fKrYvL9OCCHE9Zcu
      ErWukIiHXOKSK64VQjjFonlXC1kW4vBHK/r06C+/fzmTOcDihUuEJAvRtHPlEb17HUAIIe69
      44ti9e5m8dYT/yv+9/E3xZtP/Ebc85cXhBBC3PO9L4qP9neIu751nbjjnodFXBai/eB6ceFF
      V4nnXnxVtDndQoijDtBrl/52OuoAv/zu9eLtbbVCyHHx2WWXCHc8IJbNnSseeeyf4nBto4hL
      gx6vE3Lam0DTz5vAR2u3MnnBFax9s1/bVp/LLTdcCcCmN5/k7j88hSQEWp0aWQaPO0JxUdbx
      hctBbvrCl2jt9qHTapGFDIASBUe7vjy+Hv75yB+47/4/cNnV16G2jeOtl55E8nZw47Wfpt41
      sIFwjFtuvRkF4PV5yc3NASA3Lxe/P9Cbj0Jx5F8lCqUCpTK1uYUUYeuuKmZMKT5+mQCQ8Li6
      +ONvf81vH36Gz157FQDjz1vCopnjAXB7XDz2x9/y698+zJWfvRYAtVqNQgGKI3oBqBSDpRv0
      BlzObgC8Xj8ZJlNvXJUa5YD0R7nxy19mxauv8uo7a7jxhqvwejxsX/Muy5cvR5E/g3yzqjfe
      LbeiUkDB9KU8+7f7cTZX8pkrr8MvH5OlUCoQSTonvV43rz/3GMv/36+Zf8mVIBtZ8c5rmBUh
      7rj1C2w53DYE2yVy2h3ghz+7j8eWf48f/vgufnbf7zGaDIPieN09NNRXs/LNN2hodwHw+RuW
      cduXbuan//3/UdvR217Nycnn98t/yp0/+E+6woAcp62lmR1bNvDuRxv75M3IUvHdH93Fext3
      89Wvfpnduw8ghERDXT2ext386Bf309rlQq0zoFWd2ESfuu4W3nrsfn7xq1/xg7v/zNdu+fyQ
      y1+1exPL772Xa664nKW3/ZQJmdohpFJz6/VXsreqGTkepb6xeVCMr996Pbv2ViHkOPX1jSkl
      zSo18h/f/wlvf7itL+ym277Bb//7dn51993c9v17+NZXbzmhRtMvuoa6tc/SpS5lQqaOKz93
      I50NlcQkQUdzPYFY4gNdteU9lv/+73R7/BhMZlT9ruWUVvDxv1/j7nvupsUdPabXLV/n0Me7
      EEJQU1WPQnJwxx3/TW1zBwqVBoPuFL4TTr7SGH7i0ZDYtnmj2Lpzj4geqcf27N4t4kcjyJLY
      u3OrqG9xiMp9O0UgKoQQsjiwZ7uoaWzvixsL+8XGDRuEy+sXu3fvEUII4XK0iM3bdglvd6eo
      rOmt1qMhn9i4br1o6XQJIYRorDks1m3YJDz+kBBCCGdHs1i3bp3o7PEl6FlTuU/09GbeT49e
      Qr4esWH9euFweY/IaBL1rZ1CCCH27dwtokKIsNcpDlbX96UJe51izZo1Ys3adaLF0d0X3tFU
      I5o6nIPsUF99UDi9oaNGEdUH9oiNm7eJYCQmRDQgdu6rTNC3vvqAWL9xs/AFI0KIqNi9c58Q
      QohAT2efHvFIQGzasF40tTsT0rqd7WLdunWirbPn6F3qs2nY6xT7KmuEEHGxY8fOvjSV+3cJ
      e0Nb32+/u0usW7dO1DV3DLKfEEK0NdaIdes2Ck8gIoQQ4uCe7X027WytF+s2bhahqCQq9+0U
      3lCvFRwt9WLduvV998bX0ynWr1snmjuO2e9kUAiRHghLc+5y2ptAadKcTtIOkOacJu0Aac5p
      zhoHCHm7ePSvj/Doo39n9YahjCaH+f3v/3zCWOvWrRtS/nLIxd2//BWbdh0aUvyBvPDkI/zt
      0Uf52+NPEYhK7N+ymnW7q3A1HeJX9/6aQ/XtPP7wA/zr9fdOSX7Y3ca2vdXHAvwdPP3q6iGn
      efuFx2l0Rdm1aR3++PHjvvr0I7T7T0nNUUe1fPny5adbieHgsYcf5DNfuYPLL15MeXE+3S01
      1LZ0sntfJbq4h1deewu/pKW8OJ/dmz/ivTWbcPkijM/T45HNRLsbaPXIeNqqWfHGO0SUBnxt
      1fzpkb8TlLXMmFjMq6+8RKs7ysTyYjb9+x0+WLeFwrKJWIw63n3xcbbXdDN3zlyaG6qpPbCT
      zJLJbHjvdbbtraZi8mT2bt3I3gN7OFTTQsPh3VS3eqgYXwrAqpXv8b0f/4RSQ4B/vbeHRbMr
      UBuzeO2pP9EdN2NWRVj5wRqmTJ9NSaaWl15egcqcS4YqwO7KRnbu2sO4omxeeekl3FEV5cUZ
      rH7nA3Zs30xMk8G+tW/w3JsfYbJlMaGsCIJO3tp4iPkTMlmzeScb160lu2QiIWcDL73yOkGh
      4/CmlX1pyvOzsJh0PPjAb2l0dFM+vpx9++2UleSwadMODm/7oC9uaV4eBWWldDdV8vKKN9Fa
      c7EqA3ywfhub160lo6CcuLeNF19+FW9UxbiSgtP23Jw1NYArDOU5Zl559q88+a836Wq285dH
      nyG/qAi9OZN58+byynNP0d1ygPd3tnDbLTegVUCzfR/NXX66mu3Ym7swWrKYP28O/3rmKabP
      X8KUqVO47UvX8trTTzB5ydX4qjdT2dbG6ys3c/nll2HQ9JpwydIlzF54KUvOn87zjz2II6zn
      8MY38JgmsGxWHv986T12bdrE1EWXc2DjauZc8hn2bPlwUDlKps/G3VTTp8+SJUu59Orr+dzn
      r2fKlKncfP2nefTxf3DDzbey8tUXCLrb+ePDf8WWW8jTTzzKkqtvoHrzShyBIOs37OHzX/oS
      K99c0affp5Ykzt3xdzVzqNXHdZfO4Y3VG1nx4gtMu2AJFeUFCWkO79pESF/E/BlTueWb36HI
      HGfztn1AnM2btyXE3bdtM/54nCeeeolbv/oV3nzuH7hd7eypc/Klqxey4p21vPnSi4yfvZCp
      E0pG4/FIyVnjADatoKnbz5duu4XOxlYAPv/l25g3fSLPPfUkwaiExWDA43ZTWF6OWq1BeWRA
      s39P8NP/eIJQTGAw6IBjo55uj4vVb76CM65HI2v50Z3fYNOqV3h/68FBupTPXMhN13+GaMBD
      QUEBOQUFBL0eQENmpgWN3ozNakSnHTzo1V51gKyyiuOWtaujieefeZpMWwFR4JJrbmDZhefh
      cXXx5ivPE9dnEo9EsWVno9cZ0aoFCkXy0VWAnNxcjAY9QhZ88447CXc28MijTydN0xvGUcMN
      CO8fN45KY0av1WHVa4jKkJ2Ti9FgRMgyX/nO91F5Wnn4r08et6wjzVnjAN/87nd467knePSx
      F5i7+AJM1iyyrL1D+NOnVlBVVUVGbj4l0y4g2rSbZ59/leyiYiZOm8PmVS+x7WA9WVYT06dO
      orqqkuy8QgBmjCvg2RXv8IVbbkMrR1EqlWjVEqvf/zc9UTUzK8oAUOvNFOf3Ts0oLe1t1iy+
      6gYOrV3BY8+9y003XkthaQlqoLS8HCVQciQeQGlRFv989FHe3FDJN2/5bJ/+5sycvnKMKy8H
      4GtfuZVITEJl0KHXmynKzQTgltu+hhyNoFSq0Gr1lJYW9eljLZqC0lnJR5t3c0Rhyovz0Zqs
      5GdZUWpNFOdnsWvbBuz1Tcw6b3ZCmpzCUvRqWPapS3jhsUdoDxoxxNt5/sU3yCkqToibX1yC
      VqnnskVT+Otf/0rJnIvIMh/RU62ntCiXPTs2U1nbyMzzzhu5h2IIpAfC0pzTnDU1QJo0p0La
      AdKc06QdIM05zbA6gNfrHU5xaY6QtuvIcdbVAPX2SioP7cfpDh0JidHS3NF3vbu7e1Aah6Nj
      UJg/EBgpFc9qWlqa6WhuIXY0QI4RCKZeVAQQDAQIuLsJJhlhHmnUo5/lyBIKhVBqVLQ31dPR
      BkaLibjXT02DjBzqprmtiwllRew/XEl5WQUKrRKVQqanvRGDLZt2j0y2VY+IBwh4ApROnExO
      pvV0F+uMIRQKohFK6uvsEA2gN9jw+cKYsrKJujs4XF1H0fgpyAEHZrMVn6Ql06xFG+rBawph
      lEMolUomTpw4KvqedTWARm9i6rTzKMy19IUpNCZi7mYyiyeTZTUhK5RMrJhKbqYJFArUGgNT
      J5URicmUT5iMRtnbM6zoXT94uopyRhLweuj0+tGotEyeOgkRiaEx59Jh30dBaQn5xeWUlxRQ
      UFxOaWkp4Z5uYkBOXh4IyDCoiSpGaAeIJAzrOIDX68VqHYtvSxm7vY6KikmnW5FTYuzadfhp
      a6zFWjAes2503s1jrgYYjg8+n883IER5Sg//cOgyVj5gx0pZBt+bRIrKJw7p4R+u8ow5B0iT
      ZjRJO0Cac5q0A6Q5p0k7QJpzmrQDpDmnGdYlkZFIhEP7dqKx5NHSVEc05EdW6YkG3HR7g6iU
      IOJxQpEgHV1udFoV7a1tmDMyaGtqALUehMzmTRspsCppDRnwdzWDWo/P1Ymk1OHv6SKGBr1W
      TZ39EE5PBJNeRWubA6NeR3tHG6h1mAx6Nm9cR0e3l4KcDJrbO9Fr1bS1tmEy6onKSqKREIcP
      7EFrstHU1AiyjFatoNXRTYbVTG3VQbp7PGgMOvyeED6Pk5hQEQt66ezxoyFKR7cXnRpa2xxk
      ZFhoamjAnGHr2xYxEonQ0VrF7t115OVn0ens6c2j3UHQ50FnNNPcUI/BYqOjuQGN0UJnWzM6
      k57Wpi40GiVCCHQ6XYKt66r24Q4rcDpa8HU1sK/OQ9TvxqLw0RwyYDOqB92bgTL27dqKwpBJ
      S0sjrm4XuqiTmrYAbV0dqDU6jHrdCWUANNZW0dHpRGfSU19Vw6H9+4moNGTbBnfdRqPRQTLq
      7ZU4urpQxbzsrHGRpQqw42ATEb93iOWR2bV9KxFZRWdnBznZFg5+fIj9hw6g0hip3L8Hp9OF
      La8QtTJRxrA7ACotAW8PIAgF/LR3OolGIgg5js/rwxsIIKIR6qpqiagERVkGDhxsIru0jK62
      JixmCzoNdHV04g/GySoqpqulkoZGJ6GIl5bGdgLhMIX5eVQePoQvFEHEw2QZBA1tfqyFebQ3
      NFKQn0dTQw0aQyYeZzs+lxNnUKK8JJfag3uIGApwdbag0xnweTwolAoiwTAut5uSkmJUKhUK
      ZDxeP3qTGnd3kGA4Rizqx+MPEA9HkKQYdns9KKEwx8CWbVVMmDyepsYWcrIz+2ySX5BFPGak
      s6MWl7ObQDyOWQpBZibdTV34wkG6e7rwe4IQdtPkChIOBak7XEnJpAqQ4oMeGm8ghBwJEkcw
      aXwxEdmEQgphM6rwYRmSA4RiEkGfGwEoAItOQEYREbcTtc6A1Ww8oQwAnVaN09mNwWwhEpbJ
      yjBTMnF80mkGyRxAp1HS1e1Cr1bhi6lRKATGI0tNh1YeBbFIiEA4jlIJOdk2PN4o1gwzE8eX
      EwxHmVRoojNqIsOgSpAx7E0gvV5PfqYFWaUiHlNgMhrJzMzCZDJRXpSFNygTi8exmEwYzFaM
      RhM52TY6mhqIHjmpwWDOwmQykJWV0RsudGRlGMnNKyYry0JeXh5y1EdZxWwmlRSit9gwmswY
      jSbMJiMmY69hyiZMJcukwpKRidGWg0kDjQ2N5JVMxNVSi0KlJRzwotIaMBoMGIwGrCYDLW0O
      AMKhMBqtBllWYDDqycy0YTKZUEgxnG4v8XgMs8mEkOM0NHYxeXIpjfUNWG02fD5/vz5vFQaj
      lqzMLGw5eWRmWDFZrJhNJlTIqLRajHoDJosRtAaMGjV5ubnMPG86Pd09Ke08rrwIfyAGCg0G
      vQaNWqayxUuBbfBDmkpGUU4GMTSoFRJ1nVEsqjBqjQYh5BMLOEI4HEaj7d202GDQozcYTurB
      CoUjaDVqUGkZX2wjLGkwGA0nUR6ZWFRCqVRg1Ws4dLCS7IICDIbefWbDAQ+1nVFKMgePMI/q
      SHC3oxW9rQCTTpUQLkWC1DQ0klc4DhWxPhn9wzOtgzfNTYXP58NisQwKd7vd2Gy2IctJVZ6W
      xjriKgPjSgpPKHc4RnHPJhmp7s3p0MXr9SZ3gJivg6oGJ/ZWJ9d/+pIhC3Q6nWiTLPQ+GUKh
      UJ/nnk4ZY0mXtIyR0yXpbFAhZPZUNjLvyF7zQ0Wr1Q7LnJVPKkOhUAzLW2Y4dBlLMpx+iUA4
      NijcpNcwoShzVPQYa/cmxXRoBdFYhMSGiqDOXkVY1mDWCtxBibwcG1a9Cp+kIz9reAqVZuR4
      cuUeDtR3DgqfOT6X+2+//DRodPpJ6gBKtRa1FKSupZOp06YfCVVgNhlxO/3o1Xry9Uo6fW4a
      W4IsmD8XSZKQZZl4/JOtahgOGZIkfWIZw6XLWJKR6nNPCIYk/2y8N0kdIOju4vJrv4y3zd4v
      NI7HG0SOx4lHAjQFJbJzMykqMtLW5aYo14ZSqUSt/mRrbIZDhkql+sQyhkuXsSQj2dFG0Lvk
      YSjyz8p7k+xCY1ML+5sOUTqu/6ocNRVTp36iDM9G5ECAaGPyI4i0RzaySjN2SeoAE8eXsHr3
      FozGNmD2KKt0ZhFtbKTzvv9Jei3v7l9B6ejsfRk+dGhY9Gi6Kfl5YNYbvoDyqitPWb+xSlIH
      0NuK+MwlC3F4RuZ07jQnj6MnQGdP8oX6sybkjbI2Zw9JHSAejVFbV4s3LAPzR1mlNMn4aHc9
      L354IOm1N39z0yhrc/Zw3K8Ii8V80gKfeGc39e3uQeHjC218+7PzTlpemjQjSVIH2LT+3wSi
      RnTKoc8HOUp9uztpXzMM7x68/nXrkLqcg8JVOTkwP+1oaYZGUgdYvHgRb284jBQ7/oZGI8VQ
      2ruBdeuJHDo86Lpu2jSMY8wBfvn4RyccgDrXPj7HCkkdQGcrotBSTVyfPdr6AOn2bprRI6kD
      BNoOU+tVMMl48k2goeBZ8WrScN20aaPWbZgmDaRwAK0lm5kTdBgNA1Yh2StxB+KYtQLPkZFg
      qwYkfdZJzQVK5QDWG76AMu0AaUaR5LNBFTr27/6AonGTmTrp2GimwaBHazYRDfoo00FnLExX
      V5AF55f3zQX6JPNNhBDIsowsp655jspImQ9iVOebyFJqXY+WZTRsMlp6nBNzgRzuIDOnlOOO
      9V/XE6e5uYO8kjLUShnHkdmgtrzchLlAn2S+iUKhQKlUolSmXk90VEbKfFCM6nyTuCq1rkfL
      Mho2GS09zom5QC0tTVRUzCBS3e9gZdRcuGhh36+yfleKPpEaY5tfPv5R0vDL5o3j8vkTRlmb
      NMNNUgcoyLSwbdt2xk9NzwNKPqbR24WZ5swnqQNEIwEuvPhKbPr01uBpzm6SOoAUDfPx7p1k
      2azMnz1jtHUaFvyhaNIpGdA7LcNs+GRrl9OcHSR1gEmTJ3N47V7CoeAZ6wD17W5+9UTy9vv/
      fPtSZk3IH2WN0oxFki+J1OjRqVUYjMZkl88a4l1dxLu6kl7TT5+eNDzN2UWKcQANS5ZdQqZ5
      aBssnakE1q1POShX9uLzo6xNmtNB0s5jOeLjqX88yQfrtoy2PmnSjCrJJ8NlFHDRogVMmpjY
      z93eWI0hdwJxr4OekERuphWrSYvLL5GTmd4WJc2ZR1IHCDmq2d/kxO/3cOmll/WFm9QyrpCE
      5A9jBNqcDmrrQsyZO2fMTYWQZSmljKPD6CecXnCc67IQozoFIT0VIpERnQqhzxmPt2YFXTMv
      SgzX6wGIxXt3F9MYDJitAn8oRoZRM6amQiiVqqTX4dgw+onyOd51pUIxqlMQ0lMhEhnRqRAN
      B7cx5/IvEff2P0FdpsUVQWg6GVdahDsoYbMY0Ot1+ANBYPTOdk2TZrhIvihem0W2Moa6tP+M
      HyUTKqb0/SowHbtiNvX7kSbNGURSByjN0bNivZ2yojymVaQnfKUZXhw9AT7aXZ/02mXzxpGf
      efKbMZwqyRtRShXK43x0pUnzSejsCaRc8jpzfC75mWbChw4lXfMNkPHFG4ZNlxSb4+pRiCiR
      6OCttNOkGQ0ihw6nHKQcTgdI3nWg1GExaulKMU0gTZqzhVPaGMvZ0ZoeCEtzVpC0BtiytXcK
      hFabfC6Qxx/GKMVoczrYs7+aTFv64U9zZpK0Bph13hwOVtdjsmUlTZRqICzN2c+Hu+pT9uDc
      f3vvrIGep59JumW8trwc9ReuH1H9TpakDrDynbfIzC8jLCdvIaUHws5dOt2BlMtEjxJtbEze
      gyNO0OY+DSTV57Zv/cdxE+lN1kEDYZIkEYlEuKAim/Kc3ikTRw9gBsjLNOH1egFQXHlFUrmx
      0lLkUIjyHD3XXFA2SAbQJ0OeOxdFyeA9hOTcXILBIAa16JMxUI5BLeP1eomWlKTUxev1EgqF
      UsoozzXg9XqR9PqUMkJ6PdFQaFRsEtfpxoQeMHr3JsER+wnJyzSRZzMhgkGiDY1HLgsU/bTV
      jisnrFCM7jnBkiShUqWeozMUGUORM5SzaIdDl7EiYyhyxooeY+3eDPtJ8ccQHNy5m2aHg6Pz
      MgcqFAt52HvQjsPhSCmlraWGloZGnJ5jG/Umyhmcz0BcXR3UNTbjcBx7YwzUJVk+J9J1oIxk
      +SQyOjYZK3qcCfdmBB0gRmdrO3X1TSkLH/L6cXS209qeerzB7+uhqqqGUCjVTtUnzsfvD9Bc
      V4PLk3zH6aHkMyRdT5jP6NhkrOhxJtybEfsm6e5yUTHvPAQqkldEEv6YYNqk8Wj0ydce+709
      GC2FTJ5eQHZm8lPBT5RPLBJEqdExYdIkzBnJD4M+cT4n1nUo+YyGTcaKHkPJZyzcmxGrAbJz
      C1AICSnlwhQVhYV5xGJxZCl5HLM1E5NeQyyaeuHDifLR6IxkZViQpNSLRk6cz4l1HUo+o2GT
      saLHUPIZC/dmBJtAYeoP2OnxB0mlurOxHoc/it+bfP8egE5nOxGfizaH/5TzaW5tJxqJ0t2V
      uj17onyGouuJ8xkdm4wVPc6EezOCDqCnZEopvm5XinZWHE8kji7moyeY+i2SYc3G7Q+Qk528
      emtraiejNI8eR1fK9lxBXjYBvwe1MSPp9R6ng2hcjdPtISsreT45paWYRQhfJHmnWSTgJRaP
      43F3o9Sn6uUYeZuMFT3gzLg3IzguESEc1bJ48QUpvEyBWqsn02DCYEzdLebxBrhg4WKUKbq0
      VCo1JrMVa0YOqTZydHS5mDl7XsplhUqlErPJhNk0AYM2uUk8jnZyxk0l15x8wE+hUGAwGjGb
      zWTYUs1nH3mbjBU94My4NyNYAyhwuzppamoleetOgUqlQMgy8RRtN4BwwEdTUxPBcPKp2UqV
      EoXoXQifakBDxKM0NzXR40lehSqVqiNpZaQUugghcHS00uEYfDBfrx4qEL3xpJQL1EfeJmNF
      j15dxv69GUEHUGEyaAlFIikKLxEKRZEkKWXBAKxWM8FgECnFeF0kHCYuSUjxeEojZ2XZCASD
      RFOsb4hGIkjxOPG4lHLnBGNWDnLQTyQaTXo9Fo0iydIJdpMYeZuMFT3gzLg3I7rDed4AACAA
      SURBVNgEiuNo6KBw5iTiSTPSMHna1BNKCUU8aISZzk4/GeMGz04tGTfxhDI8Hj8o1Pjd3ZA/
      +OC/7PxCsk+wVWiopwdvVGCOhJJeN1hsTLbYTqDJyNtkrOgBZ8a9GcEaQMf4qaUIhRr9J5CS
      l1dMIBKjuCh5P/FQKCgqQMTD2HJPfUNca34BWQYVOtMnmfo9VmwyVvQ4/fdmxBygrrYOtdHK
      zE+wqL6utg4RlJly/lyM2lNT1VFbh8KqJSOjmLys5D0NJyZAQ5OXDKuV8pLCU5QxdmwyVvQY
      C/dmxJpAUjSIOxQlGpMYXzHhlDLSqqDd1Y0mFqWkuAyL8eQ369WbDTTZmwj5YhgsGvKyT9Q8
      SIYKn8eBRBzU2lN2grFik7Gix1i4N8M6GzQYDGL8hFuqjxUZY0mXtIyR02VYHSBNmjONEfwI
      TpNm7JN2gDTnNGkHSHNOk3aANOc0aQdIc06TdoA05zRpB0hzTpN2gDTnNGkHSHNOk3aANOc0
      aQdIc06TdoA05zSnxQGCXhfrN2ygvSv1Nhb9ef/9VcOa//5ta3jkyRdPKW23o5m1a9dyoKp3
      i/CYt51XV60F4P3Xn+O199bjbK3lt7/5Hd5hOGHK3dXG2rVre/9s3vGJ5SXqJlFVbe/Lx9Ht
      GxA7xksvJD+m6EQc3rWWffb2E8aTpSjbt2yi8Ti7uo0ko+4Ajto9fP8n9xCNRln9wQdDSjMU
      B7jze98mOEQdHv77c3zvGzcOMXYi2z94hfUfN7Pzw1e496F/otSZmTZpHPibefFDO9dftZT/
      ++2DfPkHd2I5xdUWt3/7ewNCvDz0+0dPTdgAEnWL8vuH/gLAxxve4YPt9gGxlcyYOe2U8skp
      HEd+lplVzz3Eq2urkkcSUf7zu7fT6vJz+HCKOCPMqG/X/srT/+DOex/A7LWjM9uAbr7+ue/h
      CAj+9Le7eeFfr1NfU8N9f36CFX/+FS7ZyqGGTuiu4s6/rOXPy7/IT+78Cz+447M889JKampq
      +NnP7mLbzt3cv3w53//u7fx6+a8xaBVcf/tP2bri//CrjMxZeCXXX7WEfVs+YM/evfz1yZdo
      PbwVKe7hws98nZ3vvoTObCVv8gJmWZ28sKEVX9MeZi66jD0bPuIPT79Kua13240Zcy7khkum
      8J1vfxMhX8ETT7zGFTMFez/eylP/fIIPNm0n+NAfufbiGbzw1gbkaIwH/vRH/us7n6fbEeCe
      Bx7isb8+igqZH937AA/f9W2mzFvAuj127r3jBnbv3sn//vlxfn7n7dhyi7jkkiW8+NwmLll8
      Ab/96X9w7Y9+x95XHqTs01/nTz+5g/kXzMGlKOA/b1zIr//8HAoR46e/fpBxOUa2rHqBFz/c
      R8Tv5cc//n6fbr/45c/JSLKLyE9/+B2Kpsxg7b+38vSKF3jsn09w08VTqTNewCJrC69XqTB2
      bKXNL2PImcAXZ9v4zXPvoTKVMDs3RHdcx8zzLyYvWkN31hLWrXwfh66eHNUXeOblD3jy4bv5
      /g9/yf/930M4Dm7EPPNKrr/mKgAObVnFIy9+iBzx8/8t/z1//c29PPTnh/jxj+/kofvv4uav
      /IzuqOD7N13Euv1tlI2fyq1XzuLuB47Z8rmHfobKmM/CK6/jqiVzT/g8ntZvgD/+/g8A9ITV
      vPH+K6iCPsKRGFKwi0MNtTR2abj/vnuYPi5vUNqQz0s4GiXqaaZLU8SC8+fxy+XLadzxPm3e
      GBajmldefZfCwnyCgRAGY+++kuctuoJ5887nzttvhoiXW370vywrlTBN/xS//s0DVG/7CIAr
      P3cLX7xqHnMvu4HPLZtGt+/47ZmrP/NZ5i25im9883aWzDufu5b/nPdefgWD1YSv4zAbPm6i
      pyfMc2+8T/W6lwkqDeiEjzdWb0CfWcCd//UTinO1ffr9/M7bk+bzrdu/ynPPvMDuFh9LpuRR
      NnkWP7/3N0SdVbz/+ovENCbUYRfvrtkGwPOrNvDQH/6X269byKYqb59uRx/+o8tBZFlGrdaA
      xsztP/gRS6cU4jmyycLCT3+BXR+t5K33N3Lj55fxxjvvoVapWbXqbQBs4+bxj4fvoaiokGAg
      iM5wdKGKmquvuYobv/4Dli29lDJtDx+9/w6zLj92Skz/5SgvPL+K+x76A7+8/TpWHGlW9scv
      GVj55nOUFBUhhUOodVo+fCfRloX5+QRCQYyGoS2WGXUHuOErX+XBe+6isd2FJPcWftKUKehU
      Cta+8zZTL1hKcUEOYCboqeO91e9R09wFGh3N1R/zxmvvEAZWv7mS85ZcTFFu74LsHLOGd99d
      TeGkWRTkFXDxFdfyhasWk5FbzKevuITXX1sxWBldJlMnFpI9biYNO/7NqrdeQZNdNjjeAA5+
      vJ1nH/0jxTOXHrcKnTd/NiXjpnLzV7/NlBIbJZOmYNapmDlnHvn5JVx9/c1cOn/KoHQi4mFN
      ivZ+7qSFhKveJm/iYhRAR1Mdq95aQViVxax58ygoLOPaG29l8czxACyYVMgTz7/OK6s2MH/2
      wJ0eDJgkF2+tWs2Kdzdy/pzkuzgo9TlkKNw0BbWUZZiYdd5MLlh0Ed//9tcBmH5kBwmTLZ+r
      r7qct1479t2Qm53L1o0f0tju5Ftf+xL/cdefuemaiwDIn3ERgYMf8MbK93l71UcsWTCJfzzx
      PE+9sorF82cT8jh4b9U72Ft69/upmDINjVJBDD2f+ezVbPpwFVMH2DK3eBxXXHI+r6148zh3
      pr+xTwOe7g6xbt060dHtEUJEhb26XgghRDwSEJs2bRGtLY3C6Q0Jf0+n2LZrn7Dbq4UQQlQd
      2C0a29qFvbpexEI+sWnzNtHaXCd6AlERCXrEhvUbRSguREdzndiwaasIRePC7WwX69dvEL5Q
      tC//ysoqIYQQNXa7iPfp1C42bt4hYpIsejpbRWdPQHS21gunNyQ6mmqEN9Qb09nRJNasWSP2
      V9b1JoyHhb2mSYhoQFTWNPXKrawSvbnJ4tDenWL3/kohCyGqj5RDCCEa7IfE5m27RUyShb26
      N/zo9Z7OVrF5595+FouKqsqaXomyLB74xX+Khp6wECIovvftb4sNm7aIcEwSQghRV7lfbN35
      sYjLsjiSQOzbtVXUt3YO0O2I+pGg2LxhvWjtdCXYpKnGLkJxIartdiGEEI6WOmFvaBNCCBEL
      +8XG9etFc4dTBHo6RWtnjxBCCK/LIdav3yDcgUifDYUsiT3bN4u2LrcIuprEj39xf8KzIMUj
      YtvmjaKhtVMIIYvD+3aJ6vpWIYQQXW2NYs+Bqt77f9TOQohoyC82b1wvWhyuQbZ0tjeJ9Rs2
      i1A0LoZCeknkGca+LR9QHzDzuU8tAmK8//5arroq+VFCY43HH/k91976fQoyP/ma4OEi7QBp
      zmnSA2FpzmnSDpDmnCbtACdLPMyuXbtoaOkAoLu7+4RJurqSj3LWVR1k165d+MKp9+A/SlNz
      05H/CeyH99Pp8iaNdzx9mpt6ZfR0tbFr1y6a2oY2+upxdtDR7QEhU3lgP6Fo6g1zzzTG2rnF
      Yx9/Bx1hA/NLCjjw8U527K9lycK5qAGzRU9Dh48im46mTi+u6n0ULb6McEczbmc73pgavSKG
      1xtk/qJFTJhSzLsrD2Kx1KHMMnKgtguFMkLZ+Aoaqispq5hFUa4VEfPR0u6hrBS2r/s3xbMW
      YdBA5f49xLVWJH83puw84n43G3fs5zOXL6Gxw01WppmgP8Dcub0DQk0tLZSWlZGZW0THjj1M
      Ksmmw23G13KI1p4oBYVFEHIR11qZOWUCH+/cit5WwIbVK7n2y7ex8aPVTL1gKbGAi93bKpk0
      aQKemBbCbgKudiS1iZgkmDS+iGp7I3MuWIDpFLdNHC3GtnZjlHp7JU1tbTS2ucjLsmC326m3
      29m0+wAXzplBR3s7Bw4dJDMzjwkTynD3uLHXt9Ld2kBNUyvacA+ufjt5GyLdvPjBHgKd7Uye
      PYEVjz1KR0iF2937Nj+09wDTZ88AwOOPoJH8rHx/NZs2b8Pj9tDa0UVUr6e2sY2ivCw2b95E
      1Odh78EDVEydCUDAYcecNymhHNasHDa+9Ry+kERAmUFd9d4+mQTbafcbqbNXUlQ+gYLsDPzh
      ODaLiaqdO5m8cCG71q3E3tyF3W6nurGD8vxMvB4XH67diEoRxeUd6uSU00e6BjhZ9DYml+Ug
      y0qK86yEhR6bATpdQRZXlLBj72HMZhOTJ09m5qQimuyNVFRUgBTGG1Nj0Wswq8GsBtBTUVFK
      yaR8zIdXoVMKdu60c/Md3+PggUNk2nr3ynRHBDN0ve+qZZdcxM69h5k9ex5RTwcaayZ5mWZs
      ZjNycR7usGDm1Ik4ekJMLynGbOgd8t1X08mCJRV9xaioqEChMSPrrMypyGPrmzu5YtliivOa
      0FgzwVhIobkRfcl0lHKvt15y8WJ2bN3KxPPmUr11K/M+dQO1lVWYyydg0KpQ6w1YTCZmzZhC
      fVMnVkPyE1vGEsPaDRqJRNDpTn6T1HOdnq52NJZcpIAHU3b2gLeSwOP1kmE91d2Te/F4PGRk
      JMqQowE63BGKsox0BySyM0yfKI8zkWF1gBMdX5/m1AgGg+hUEFcb0R05jisQ8GMypToD7MTX
      0/SSbgKdAbS0tFJkkekml4C3i7z8YhRRN+GYAqQwQZ8bndGAxxXAaDESiQsyzAZqD+7HVDQO
      m0GHQgFZWVmnuyhjjvRH8BmCJEM86CV/3BQCHicuT4AeRx09Pi+NDe0ohR8ZI1oVxGJRXN3d
      WG05lJQU4nb34PF4TncRxiTpGuAMwGrS0haIM6HQhqQCVYYNSYoT8fvILh2PKh5FobaQX5CB
      HPWgVKrIyszApFXQ1tyBThHFkHvi87rORdLfAGcJx+uAcDqd5OTkjLJGZwbnXBMo6HNTVVVF
      OJbqCNEj8YJjvw+7P5FIJOW1sfbwHx2tdvYbIQ8HgynOLB5ZzrkmUHNHF1OmTCHoc3O41kFB
      bjYdnQ4UKg05uQX4utsxZOTh7XFiNemICM0nOhgvzWAO7t/H4qUL2fXxIRbOn0ab04cBmdzS
      QloamykZPxmTLvnp88PNOVcDIEWoqqrCXtuAUo7S1uFmQmkWCkshAU87gWCcttYWABoaGggE
      AqdZ4bOPkqJsdu44RFFJIX5/AHdLGwGgsbERoVDg9yU/NX4kOOdqgOzcQnKys/G7nbQ4XORl
      ZaPSqsk2a1HrswmHujCbM7EYdRh1SuJKw+lW+awjK68Mjd6H0WREioaw5mSRm52FxaChvrEN
      o/GTnF58cgzrR7DT6USr1Q6XuDQnQSgUwmBIO+vJctwa4ODBA8yYMXPIwrRabboX6DSStv3J
      c1wHyMjof3CxoM5eRU8gjkUr8AQlsnMzsWpA0meRn3Xyx9SnOfux7/obNbv+lhB24WefJLvo
      gtOkUSJJHaCtuZGYDL5gmJK+UAVmkxF30I9ap6dMB52xMF1dQRacX44kSciyTDx+4sUdaYaf
      sWp7WR7cuTmWdE3qAM76PTSKUgg4mTnt6L41cTzeIDqdBrVSxhGUyMuxYcvLpa3LTVGuDaVS
      iVp9zn1XjwnGqu2VysEdjWNJ16RanHfRZ2h+620U5ryEqBVTj22s1H/7qKIRUi5NmpEm6ThA
      sKuOyjYv0fDo9cemSXM6SFoD6DMKuXrZAjq9odHWJ02aUSVpDRALeTlc387E8uLR1idNmlEl
      qQP4okq0USfbdh8YbX3SpBlVkjpAY2s7U2bMIj8jvb43zdlNUgcQIR/2mnrQpge30pzdJP0I
      njxtBjOteegHXK2zV+IOxDGnR4LTnCUkdYC1bz9HNO98SvJsLJx/Xl+4waBHazYRDfrSI8Fj
      jLFq+zNyJPiam7/D2nWb0Wj6fwPEaW7uIK+kLD0SPAYZq7Y/I0eCo64mTCWz8HdWAVP6ol64
      aGFfnPRIcJqzgaQfwYaCaVijbYyrmDHa+qRJM6okHwjzdRFWZ1FelDva+qRJM6okbQIJVBzc
      vZGOjmY+c/nFo63TmGBfWyv721oTwj41ZSr5lvSik7OJpA4ghV14hZEZtrFzmNlos7+tlX/t
      SjyqdFZRcdoBzjKST4bLKmNCViVBaXS2phgNtr39zYTfluwpTF/809OkTZqxQvJeIHc77oiC
      cGdnQnh7YzWG3AnEvQ56QhK5mVasJi0uv0RO5tgeCHO17zzdKqQZgyR1gK07doGkAEXiXCCT
      WsYVkpD8YYxAm9NBbV2IOXPnnHEDYUKI4+qadABHkkatfDWHDuD3Jm5oO2fhkpTxx6rtz8iB
      sIUXXsDKTYfJzspMCNfre/dricVjAGgMBsxWgT8UI8OoGVMDHCdCoVAcV9ekAzgq1aiVz+/1
      0NPtTAg7kb5j0fZn5ECYUiUIBgfuNSnT4oogNJ2MKy3CHZSwWQzo9Tr8gSAwAsfhrLkn8bdt
      HMz9ZtKoadKcCkkdIB6JEovHiURj/UKVTKiY0veroN9pOmbTuXe0Tpqzg6QOoDJkkZuhZRg3
      jUtzJtFTD+6GxLCCOWDITBp9uPnpW68n/J6Qk8N3Fy8dkbySO4DexKxZs6ipazhpgZ/7xYsJ
      v2eOz+X+2y8/JeXSnCbcDdCwJjHMNm7UHGB/e9uo5AOpNsZqrGN/ZR2Z+aVJEzk7Ws+4btA0
      Zz4b6uxsrK9JCLtl3oWUZ2afssykDhCKxvB0d+IOw5ILZg+67knSDToWaPbX0xxoSAibkTmH
      DO3ovLlOJy9+dJCV2xsTwv7n25cya0L+adLozCCpA6x68xVyJ84lLze5Z6XqBj0VpM5KIuse
      SAjTTP8cmhmfP2lZzYEGtjgSq+5S07jjOoAUbEJIidu/qC1TUsTu5V+7tiX8zrNYuGLy9JPU
      Ns1YIKkD/Ojn/3PcRKfSDbq9yYcrFEsI+/SULETEh9SSOOdGVXL+EFQfHsKtLyH5qxLCrHOf
      OG6aJrcrabjjvl8TOXQ4IazsxefBXt37pz8LFiFMFuSOnoRghc2E0nac839rWgnUJraRbRek
      dthoXMYVShx0MmtVmHUqgq98Y5DtLf91ajuBbB7w4rFqbMzMmntKsk6WaEMDPc88mxBmuvhi
      zJcsS5lGqmlD+MOndkCG3mQd1A0qSRKRSIRrLuhdKiMABZCXacLr9aKRwpiEhECgQAH0Hqon
      FBZiM77Sm0aAQgHxjKlEvF7Ink+CMH0meL009tQTjAb64gNMy5+JTc5mpmF+X3QARUSFV/aS
      X3FrgiiDpRiv10tMMwvZVEj/RF6vl3EWK9dOnkr/TIxHrs3OyT+ir0ChUJChN+D1epHnzkVR
      cmw74aOyEAJMZhIyiUQQkkB4fUf06rWLQimjUMpYMrNQ6/R9eRyVFfD5CPi8CaJUPh8T8s1c
      c0FZQtkNahlnj4fa7nBCHgUWLfkWDfHSy5AzpiTYUXi9oMrutX1/YTEVQWc7jT31Cfcq15xH
      jikPn9ebYF+FVoVX7UVjnkJ+xa0JouLCgsdZT9S1KeH+qs1TUJmn9Nq9Xyb5Fgter5dMtYbZ
      OfkJNlFG4wRkmegAuyv1emSvF/bsJiETiwUmVSDkOEIpj84pkZIkoVINnliXKjzZNZ/Ph8Vi
      GRZZpxIeDAYxGo3DIms49TrKcNl+cHgMny+OxWIYNn1PxiaRYBC10QgjZN8ROiNMor62Fqer
      dy5LfyUcDgd1VftxekJJlfP5fIPS9Kd/eHtrEy1tDsSA8I62Zmrsdjq73UllJcvD4Whl/+49
      hKTkeUuSNERZEg21tdQ3NCOnKMfANLGQh70H7TgcjqR5hHw+YoP0PWbH/ni6O6lraCImyQmy
      Qj1dNLW2Y69vHHIeAzl6LRL0U1tbiz8UGSArzuEDB7Db64gnlRXD50u8710OB+1tLTS2tCXV
      S5akFHYcLMvrclJXX0d3j3fIZRwhB1CgVEBneyuV9rqEK76eLjQGI5GINCRJ8bAfl8uNJxAe
      dE2lVBL0uvh4zwH6f1143e6TPnKzq7kRo82GNDDhkUlzqc7gHYxMp8OBEL2V7lAIef04Ottp
      be86ceQjpLKjQqkEKUp15QEc3ccO+JNlmS63F51KMVBUSrxeL+1NLSh1icdeKZUKBAqa6mpo
      bO7/PSLjdvc+fEPNRZYieENxFPLgyXGyJKHUaBnqpPyA340vkPq42GSMkAPEUWnM5GbamFgx
      IeGKwZxJSVEecr/ZgLFIkJaWFlpaWoiLRNP5nV3sr2sk4Eny4anUMnnqNObOnZnwCV5SWoIC
      0Aw4r8zv7MATkfrewAkaR33E4grkAU9t9eFD7Nyxg2p7fWL8SAC7vQaXZ+AO2ipycrJobWlN
      cICw34/b25O0jEabjXHFhWTnDOx1i7Jvzz7au1yDbpRCGSfsjw2aben1hxg/cSKZmbnkZx/7
      UIuE4kyfMQWFIlFSd1cHLS0tdHt8g/JorK3EF/TS3p44KzUSCFBUPp7pM2ZQXtp/SwQtJSX5
      KDWaQQ9tW1sbUjRIYIDDCiGIhENJZo2G+eDVd9j+8X5iA650trdgtzeAKlFjk8VGPOTF4088
      49nv99KWoowj5AAqfJ5OHD3ehAwiQR+1tTXY6zrIy8voCxeyggybFbVajSph9mAcDDYmFmST
      kTX4sGdXZyuV1XZ8AybuNTe3M3HSRNqbmxLCNTotzXW1BELRQbJ0eiPdPR60A+5cbmER5aVF
      ZOcm5u93OlBbs8nJsjEQrVZHaVlxwltQbzYjxwUlJSWIWGL+fqcDTUZOEllK/H4v8Xh8UG2i
      1epwdHVjMCY6uVYFNfYapAGPYEdbM/bqalS6xIP0jGYrWrUatVqdoK/f76eopAyjOZuigsRB
      To1By/7du2hsaR+gVQR/EAj6Gfgejob81Na1oNUl9hZqtXpCfjfSoP4YHfOXzcdmsQ7qX3S6
      3BQUFKDXJqZRKVVk5+aRYU5cyWg269EbbVgN+kEtgxFygN4vbp1Wm3DjdEYLFoMGGYhGjz0E
      Ko0GIcWJRsMEg/2bOmrMZi2hUJhIJPGhiYb8dLp8aAjS2R3sFx6ioCiXLZu3kFuU2DMgxWXU
      aiXaJM2ZjIKJzJyQS7yfhcJ+PwoVSKjQ6xPT6K0ZtFQfpLKmYYCkKA2HaujxB0ms1CUO7z9A
      dXU1oYRT6iXQmvG0N9Lc5hggS0aBEoVCMahJodJmsGjRTOLR+IAUvc0P3YBmy7iKcjzdXmLR
      RDtqNGqi0Sh+nz/hXpnNZqR4nFAohDSgXVh3oBJzThZdnYlNtlBIgrgXb3xwp7gCUKi0aAa8
      YKJxifMvXIRBm/go+v0+ojHIzDAPcn41cT7++GPc/kQ3a2l3EI1E6e5KtKO7u4MD+w/R7OhK
      eOBDodBIOUDqtuDM2XNQikSDqtRqzJYMioqKcXUnrkJL9abV6I1MnTaV7NwyxpccG+hSaTSo
      NUYuvPBCjJrE3OMRP77QwAr1SD4eFy2OHjT9LKI3m+l2dFNcUkx3Z3+jyrjaOyiZPIOpk8YN
      kKTngssuQh8fmI+KsvISfD4fgUD/ZpMCrVbNuIpp5NgGTifRUlZaRFZBzqAmRao3aqrvH2Nm
      AZPL8wdNcFSrNRQUFSFHQwxshad605ZMnERZYQEVFRMTwjUaFaXjp1AxPvHFA9DjdifRqrfG
      qq2xEx3wSWg26wiGZEQ4Ua9oJEwormDOnDnYzIkvpXHjx5Ofm4VGl1gD2LILUUcD+CPhBGfS
      aDQj5QBaysqK0GgTb06T/RBb9xxCCCUWY3/lBR1tbdRUVVJUNr5feOq3o0KhpMflpL25iprG
      7r5wlVrBrq3bqK+vp70z8bvBkJGJVqVGrxlc7FA4hFanHfTlmpdjZc2Ha7Bm5yWEq0xWVLEQ
      bo83Iby9pZGm5hYCPv+gB0ql0WGzGFGr+j9QSqRIiKbmJto6OgekiFC7305LUwv960W/34/F
      asVozkA/4M1ZUlqGVjOwKRllzXvv01TXQXZp4jZm4aCP1uZmYio9/e9IKBTCqFNTW1tLIJzo
      zBGvi8O1zTQ3NyeE+z0dbN++l+qq2kFlz8vPwqDREhnwXggEQygVJOlk0BHytdHqDSXoFY9F
      sdls+Dw9hPvVpJGgj6amJjq73QQCwQGyFOQX50A88faq1eqRcoAw9Qfsg5oBZRXTWTBnGiAl
      tNu7G2oJxKPEVFY6mhoSFDfZspgxYwaTxiVOzAuFQuhUCnTmXPLz+vd/q6iYPJG4FEc/oBlw
      vN4WZYp+i/b2LhZftJiuhBmKSrRSGE1GDt6eRCcrLCmnoqKC8y9ayMBVEqFgiAmTpyLH+1fd
      EgqdhdwMM0VFhQNSaDHnaOlx+RNayGazmWgkQiQSRh7w1d7c2p6kGaDl0k9fRUl5Ls7mxHZ7
      bW0DHY5O9HI0wck0Gg2l4yYxY8YMrAkvKwldZg46ER807mDLLibLpEJrNg6qsfy+HqqqagiF
      EpstWpWSWNIuuwgKTRZZGhK+J4xmKwF/gFyblo6uYzWpzmihoqKCiooKZk6vGCBLQmgyKMo0
      J9SOI9gEUjJpzhx0Uiwhg6Dfi8vtI8NmQ6M+ZiK1wUQ8FiUW9KA1mBLk+DsaOVTfTEdn4vJA
      jUZDbmEppSVFDGjpEIzEkKNhPAlv5ziy2si0SeMpKh74oIFBC1q9dVCbrbCogObmZgqKEt+c
      tpJx1H28HbMtawj26CU/N5Maew2ZOYkT1Lw+L5Ik9Y01HCUUdKMy5jF/zvRBN0oc+evoiOhR
      MjJs5OdmodX3t6NMZ4cDhUaPxZT4EaxVK9FoNQTCid8GarWag/s+prm5mWDCa1uBSqVl6tTJ
      ZNkGDrxJyLEonQ5XwovP7/eTnVPK5OmTyc5MzF9vMqNWa1GKgXWGDotJgcJkYWDdYDOr2VvV
      QVFBBkNDh0YVIaxUJ8iKRUbIAdzdHVTb6xHqxDaWWqOlo70DvSpMS8exhzMjv5BpFdOYO3cW
      E8Ylth9VKiWRcIT4gA8xKRpi27bt1NXV4Pb9/82d2XMj13XGf9iBxg4QfSUVBwAAEV9JREFU
      IEAC3MnhLBp5ZNmKHLsqSTmV2P9uqvwQO8pSkUux5VFJQ86QBEmQxEaAWIkGGks3bh7oGeJ2
      AxJoeVz6nlCN7tu3l3vPud/5zml5VlEUhacfviAantbUOFG8dqLJFTxO62W3aiVOz/NMs3Sd
      Up6B00fzpkG93pD3L1xiDyXothosgoGqotvt+Hw+5DRZG+N2HaGEqFVlN284GBEO+WnWGxa/
      vtVsEU8u45auxeDs5IRqvWWhgLX6NWO3QqUs64h2Hz/jxYsXPP/oQ7ymcxiTuyIA8rrBzvnB
      1xzl8+SvSqYj7KS29/hgd0167oFAALvTw8pylLEuWyxVVakUzrlpylTraS6HMR7TrN1g5uzU
      QRfFBuVyi0Wgqre43D58bhfTU4zXp7yfARCJr5CIK7hdLsnncnu8pJNRCpVbUsv3o3fYbfL6
      OMdXL//IwdGZ1JbL58Nls2Ga6PAoQbIrSewOL8GAvNZwYMykAoc9lfP8OYXStbRdVVWyjz5i
      b2sV39Qh3lCIy6PX7L/4MR6XTM96ljJkwi5SmTUWgTcQoH1TZ6BpjMfTs52dtcePaZcu8YdM
      M5oYcH5eotFoWQZAOp2i02oyNqbvsIPt3U3sNhsul7zOmHeOy/Mcl/kc//ab32EOTSqKYrEw
      AGtbm7hs9hnSCzudZtVCfwNcF684z+dRp5gbfaCihOJsbu2QTqWk/R0YjBw+VlMJqa1er0dm
      ZRt3JMrO+mJ5AIGAl2qlhqYNLO/j35wFarQquG12KpV7VmA8GKBPdIYjgV06wOD48ASby0H1
      2kwRQq9vXuzcwR8Ioig+JpJLYXA7tuO3jXF75bkuEAgwwUHI62A49aZ5gnE+/vhjQh4nG+vT
      L/qAP33xFdpI5/bWGlSbB4fdNpOh6VTKNPoGutaTtkfiWbbWE8QScYtPfV29YHDbpWQKUs1j
      geadY6ANqNYaJCIhaQC0GzWq9RbG8JablulroWJEbw6bFo3GTM8QyqUS21tZOuoIr+/eMjm9
      AYaaykomy1CTA4qbu/s82t4gs7EurX8ucscUKzUm+vCdFOO74QDbbG3Ae6pN4WBza4PB0Bre
      TiZXubqqs//onroMJFZ4nphVZN3BkxcfkCvc4A1b/b2NjXWMiR27U7YAAoEQAk2bfnAGlatL
      /EspGFtlFWqnScuwsRO778ew2+Ss3GCgtnD74zzbf0v7Odl9vE965WGJNrH4Eu2uitbXIH5P
      64aWU8SaKh6/mQYdUTzJ419fIw3SIJh1HwFWs1k6XdXCZs07x6OnH8zsaySeZD3TYTgeEQrI
      E0YwuUpiWCUathZDmAjBqH9HXb7t70hT+fKqxItnWcptjXjo3hN/S4PKa5Y7yyQQvDq64te/
      /uW7tmLJNGkLWfDdSKfTNDtdy4T83hbBS8kko37Xshiy2VwkUwkQssFt3lxzflmgWpWpwOH4
      jgt2ea3Bq1q9SLVQknzBYb/LZaGEpmkEg9MP283Hn/4dj3c3ePx4X2qnVCqxFIswHMsDdr5l
      8pJOR2jc1Kg3Z/PbszB7YI747Lf/xQQ7Zl1u+apCOJukVb2RZqqzXA43NnS7TrMlz+g+f5Bk
      cpn6zbSbp9O5HRCLRS0BMhAcfvmSQrUqWQAxMbDZHfT7IzwmlqFVuKTS7lG8KkrbK8UirU4H
      l88nDdaNnUf87NOf4gum2c7eD3xDazJ0RjCGfUt8Yp5lSq+kGWo9rq+vGYwWL641PTDf4uLk
      4H1ZAMFF7gjhDckr+MkYbYZVAFDVHoWLK5KrGyy/I0lGHB2dMelrZJ49k88gDMaaoNYf8Q8v
      7n1BjxLEZbezub1N7viU1fR9ifeh2uK8VMcmDFKra0SCdwETtdOgpAmyETeaDp4/P735lgla
      hTO6vgQJr/mFmg+Hw8FoNGZJklW4+eWv/5WTw69ptNpsZNNT+zvxB0KEwkvSzBVQPJxed/jR
      3jr1gUnxqHY4PDrlyfPpZBQbmsn1uceYWqlCXTdYXl5+9+IW8qf0dBtjwxyzAUcwzCD3kswH
      n0jb05kUrU4Rj32EgexeFC7O6PUHuAJRttfu7qmhj7nMnZHKbjPoVIH771LPs0wAZ2fnZNbW
      cZh9rblwYMMgFItJfdrYewbir4hOp/PnXwPx6ptjcfzNKzEw7ZM/PRbHr1+JVm8kbS9dXYqh
      bsxs19DHolS+lrbl3hwKbWyIbqMgLsqdd9sHvZ4Y65p4ffBGNNtd6Zjm5ako32ri9evX4ujo
      eKFrur6+FqXChSiU5PMPem3x2e9+Kw5zlwu1I4QQx0dHYjQeC92Yvs6h+I/f/EZ88ceX4qJQ
      lvavVYri/OxMnJ1fCv072n57748PD4Q20MTB4ZH0v9api1dvjkXu3Nzfsbi8KAhjMpndbqMm
      bnvTT3EoDl4dCyEm4vDgUNq31+uJcuFS5PNXlv4eHhyKUbcifvfvXwjtO67lDrq4Ll6KP708
      sLSVO/xKfPbf/2vq17dhIN68PhPj8VhMX+XF8YF4Ty6QB7drxMjltnC47VYLm93g1ctDybQp
      ipuTN0fvNPzT6GsDwiHZd/V6vRTyZ1QaXdz2e/PZLJTQHDpOZ5j6tRz0CS6nyH35OSPhYmNj
      Xfrv5M0BuVwOs4Eyhn003c5El8m4fuOG3Y9+hqEtvggW+ojC1RUtSUHq5p9+9Ss++fgF6xnZ
      tx0OBuiGgTFDDDcP8aUohUKBaFwW7w1uOwwNQaVwabrHNnrdNmeneUv0FgzsLi8OiQmaoI8G
      5HKnTOzy2qtUKKH2hniGA8z0RMAj+M8v3vDhT55IdGv9uszpaY5KzUwnCwqXRSKRoGVRPzQc
      fPLBOtXGbBLEChvtZo2rq5LU1vre0/flAg3RDR8+24ghSINgZXWVdrfPJ5/uSn6iy+UlGg3R
      bDRIvlsgjvjqywOcTkF7aOcXn9yb9cyGLLN+i8hKgkKujDGZEInJX7hR61WyTz4iGfRKofda
      pUi13iKVSlloKyFgoGk4fPJQDqcy1PJXRJcW/4pOLBalpc6S/s5GZmObodZjqC+ur6/X2+w8
      3ufkKMfK8r1rGFpeIdC7Iv3o8dT9vUM0GqVyXZMG2eXZCQN9QuO6wPqzn6O8i195+fCj58yC
      z2Onq43o4MCs3VWHgk8/+Riv716nYwz75E7PiCRTzMKoO0RfmVgGf2IpSvGmR3Zz0a/TOYhE
      7rIJrcK69wIXHpeOjtuiCrypt8iuRnj95ornz9bfrcLfLhB9vmkhkxNFcWNgJ+5bLCHFF4yw
      F7RKlOHOpx8022gDG/77J0oyncHpUVCcAn1yvwYAcHs9qOVr/MFpjZJO51bDryg4nYuma9wJ
      wpweZWbB2Fk4OvgGnE4uLiv8878sVlwskYxzcZYnlpAHZrtcwBNbpla6IBYJSTKRiRB4vXKE
      1u/3M2jfEllaxmVfzP5kNrbn/reSTtHr9XB5fO/eCYdH4dGTp8RiMZpNswWw4VWctDoq062q
      qorD6URR/IiJwWI8jk6n0yORCvytWKC7E/Zuby1mdXU1Te3mFr8ivzid2z6ZTBa75BjZefT4
      CXu7O2RnyBce2qdGtcFQ19FNkoNuu8HBwSvOC1VJDTpQVVw+H6vZLOGQHFW+PjumMxpRLJij
      ofMhJnfZZYtaAMWvICaQWk4u7AJ1Ox0Egk5Hds1C6SweXQVsjCS2a4RAIR6SdTJLqVW2d3bJ
      ZjdY+p5fClJVFbXbvbt2E9tz8uYVJycnqKa4gqr2SG1ushqXpSZuBxy+PmHYb1CpmZOR5sGG
      oesz8yrekwVws7u7Rum6Lbk5hbMTegbc3o746U+mJQ8GhYs8vb5KOCbrZOoXp5z3BIpd8OyJ
      TF8+DE6CATsnRyXWsqvSP7oxYWvrbp4xJ7E0iiUymQyFQpHo1CDI7OxhUxQ82cVvoaL40PRF
      X2VY29xZeN/7Y7a5yJ8TkuImI77+6gC912PvFz8nNCXKbzea5C+KxJJLJE1tnZ2eMBnd4gjt
      srfxl1dfCwQC5F5/gy+SIDwlaTHGQzLrd/fdp5iTWFx02gpu0ZdiCi6vwtOnT/AHgnfq3YVg
      R/F7Zka134sF+PqPn5OvlHDY/NIAWN3Ywudy4HJgyuJyEI3F2N7dpWlKZoivbbAaC5FYsmaE
      PRS+8BLZlZQlgBONJxh0atTbqmmGMKiWy5ycnBA0id7GaovP/+8lrw5eL94BIbCBSaQ3H2/T
      FYvFskWmMAtqo8JvP/sfOj2d5NK0G+hmd28dfzRMwyS5jsSXiEWX8OgjSxZXPBolvrxBdvX7
      V9bb3N4mEY1IQUuHy0PA66Jz20XtybN5u9GkXL6iawhpDWmz2SkXj/ny899zUZaj4PMhEML2
      Z+so470MgA9/8vdspFYwhKyJtzucrG9u8+KjFxZuObua5IsvviSRkl2dxtUFpeYtN3VZDfqX
      YF4AB2A87NGuVelNdXigamzt76AoCsKUxBNKJHiys0kktvjM6PF5wQZen1l2NhvxRJJOrUZb
      XczUB+JpfvmPvyCkOCxsWiia4NmLH7GTNbuSHoz+DQOvz8LYNVotGtULCqXFRGffhllBS4BW
      p4uYjOh05JfZ6QmyurKEx+mwDP7M+hNWMkliC7tmdnw+Fy6f72+VE3x3w/f3dxf2sYrXDRLR
      MDVTZeB4NosYDFmKz17YPgTR7Bp6p4Y/bJ3RXB4fm7v7KFMd9gYCDFR1hoANuvUbmj0Nt2ux
      K7ytlnDHV9nd2YHxohqWMcNe3yIv/jbYHU62dvYsTM98DGldd9G1PmaBiNs+IRBOs5T8/vc+
      4A3SHRusmOQjsWgYjxJheUm2sIGAQqfdtgjYAAr5M3D5mCHqnYlCocz+0w9IhPyWwfTeBsBD
      sbqyjN3hIG2q8NUqlZi4PDTrs8sRPgStwhXOcJJexzqjzZJDw3xx2TyZ9jx4FC/5o9ccvXmD
      YVu0jupsefFfF062nu8RUIKYPeqxGNJttGjUFpd7zIM66BJ0OSwWYJ4c+tsElbNl2vMx7N1y
      dHxM6aZlERX+MD7UhMGf/vCSVDZDo9GSFpuxtS18N3/AFZpdqv0hmNdWrVIgtPKIEDaJAoU7
      AVut2WI0lGftO5n20CLTngdPMM6L5w9dSN7Jiw2bi9jKopz3w9BuFDk5LRMJ+9A3s9IgSMTS
      HDaK/Di9aOLJfMxqyxj26Q3GJJfThC2upJOQ4mVoWG3fPJn2POzsP5373w/CAgxUjf0Pn6Eo
      CvG4bCJbhXMi649ZWV4882oe5rWVTGex2208evTIMgA63d6M7LK7ChM+v39mWZR5qFarlIuX
      FC3VH2ZDVXuEI1Ei4ff3cW6nJ8zWZppkKmmZHSvVBs+f7eN8QDGteZjVlsOjsLe3h8NhI500
      D4D57p+uGySWrcn682FQLV3x8qvDH6YL5A0E8DocM31tZSlB76byINXlPMxrq1Yp0u32Zkoh
      wkE/SjDCckqmZ73hGKNOlXprcSnEPFnFPAQCfhy2CbWb778InX+OMDbGM31tv+KlWq0+SHU5
      D7PaMoZ9crkc3W5vhhTCSSi5xEY2bXFTEktRTs/yGOYqZnMxX1bxg3CBDH3MxVWRja0t3G6p
      BgB9bUI4FMC5MOc7D/PbSqYzJNPWUh7AXYTS4bYEr7rVIrGNJ7SKeVg1M+iz4fAo+MYDJvbF
      WKC3Dy6WztzVx1zwqIdA67dpd3W2ttLSbKiqKoFgEG2o43B8v3lyXlsOj8LurjmB/S0m3Nw0
      iM+QSdw0bnmyEaNY7bKTXYSitZFdz1CqdVk3/fODsABiYuB2u+n1VKpS8rsT27DL7WBErbZ4
      3czZcCJ6TeqqxnnumNN84bsPAQR2Uuk0IanamIHNE6J7U3yQFuihFgBsxJeXsWEwniMj/74Y
      DsZ43HbKxbI0OwYCAbrqgE69QKO5qOhsNgKBAMWrK9RWld///itLqcPZmOAPxEinl6VFsKZp
      BAM+ijc9VhdOip9vAf4fjm8IuEUrkh0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2) Long Term Unemployment Rate' width='192'>
      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
      wsUq8JnQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D2) Number of Graduates by Course_poly' width='192'>
      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
      ao7V/OYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2) Number of Gradutes by Course_Uni' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D2) Trend of Residents' width='192'>
      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
      g/x/l0XZviX3KxAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2) UnEmployement Rate' width='192'>
      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
      iLAwRtcNyegAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2)Gender Distribution' width='192'>
      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
      0v4/tnxvxYABKDkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2)Graduates in Singapore' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d5xdxX3//b69373bey/qDQlQAQQITG+mg0kcO07s5Ekc27+XkyexEx4c
      P4kLNhiMLXpHGETHNANa9YLqStre7t1+e+/n/P5YadGiu9JKulukPe9/9rWnfOdzZuZ7z5yZ
      78zIRFEUkZCYocinWoCExFQiOYDEjEZygLQgsOGDN3jggQd455MtpLNN+c4rT9Da702jRfjp
      P9zJ8osuZb/NN3IsEnDxwlN/4IGf/Tdvf7QR4RRt/uZf/5b1G5rHfX1X62Gc/ugpppJ+JAdI
      Ay/85t956JUNrFy1kg+e/h/+v8f+lDbbs+afR5ZRkzZ74ObTXV62b97AolIzAImQnasuuwJn
      0sBFq5bTsmMHgTSmmIpnH/lvdrYOTXAq40CUOEMS4orFC0R3NDn8X2hInL/sEtFn2ydeduO3
      RFEUxZYtb4l3f/+/xaGuQ+IVl6wUL1q5XPzx/z4uiqIo3njBxeLzL/xOXHXzX4sP/cd3xOc+
      +EIURVH8l3uuFTc3D4n/dPdq8fMmx3H3xv02cfllN4uiKIr3/+Cvxb/6/n+KoiiKd1xzmTgY
      GtYixILi975xs3jRxavF1VdcL3YO+sQHvn+fmGHKFlevXi3utXpFURTFD194UPynn/3huCd7
      8MffFh985CnxsosvEvdaveL/c98N4qWrV4uLl60QG21uMeIbFG+9arV40erLxMVzqsXXP28S
      //zCg+J//fF1URRF8Z/uXi3utgbFje8+J1522WXi+ectFv/9wWfEvfXviOXFeeKCpcvFv/n+
      A2LY3SvefNVl4iUXrxK/8U//JSZFUXzk/u+Lqy6+RLzk4ovF+r3WCSk5URRF6Q1wxoSIy8xY
      1MNZqdDlohV8qEsWkR1tpccXZ/3617nrzjt58uH/4dv3r2XTli10fPoCgxEAL25FJZvffJY7
      7rqHt9e/gRh1satPxoq63JFUvnqvU1lCmdKJLZCgP6xDF+4nEezDqyohTzesZcdH6xCr1rBp
      4wZ+/o838KvHnuenD/2WhXNWsmHDBhYfeQP09fRSV1sD+Lj10kvJMRdgCw2nu+twNx98vpHF
      pWb+99Fn+fnPHuC6Cyv4sH477zz/GPOv/x6bNnzGfTdcOmYOrbr2Xv74yG/45S8f4P11L7D4
      khv45tfX8IvH/8TTD/2Ut557jBV3/JD6jZvJ9+5mV6eXzTv3cf3X7+DXjz7OqgVFE1Buw0gO
      cMaYyNEGaBkabjR4ehpIGsrQAHfeuIb1733C53uGuGp5DV6flz//6Rnuv/8B5q28HIUAkMG9
      d18PQOH8iwm3beHzj95m5bW3jiqcVPd+7fLz+WD9y+jz57Og0MhLr7/HBVdcO3KPz+cjNycH
      gNzcXIKB1A2bufPn8dln9YCZ9Rs2sGrOlxXutjvuQaOQERpq5fZ7/x5/NI5ao0YQRbxuD0XF
      xSfNoV/86O95f0cjKNSoFEkA5DIZRzvgfV4fmz9+k/vvvx9j5VKytPDUy69Tk2fkl//6PZ5+
      d9u4SuJ0UE6Y5RnEzx74CffeeA1Xf+1SPvvwz/znL58E4Lrb7+biS69n8Y3fRSODO+7+K777
      n7+n8opL6GrtRlR81ZKCm69YzHd//BDrPt446kyqe6+66iouuvnvefCFPzOXAq75xo95+dOd
      I/dccu1t/PyaW/m3gYNs/exjfvbHV1Pqv/Cae8l+5npuuffbLKwq5PBAANVXfhoT0RC2Hiub
      PvuYnbsOcfUSWHPdTdzwzR9g3X0l9X/Zzr9cA7k5ubz3+JMEmzfx+RdtfBNwuYbw7N9L514v
      gfiwvQVz5/Kr//wRHV+/lZtuvYu17/yIhXUlDNnaCSVk/Ou/fA9z8RySyDAYdKdfOCdjwhpX
      MwyPo1+sr68Xh1y+Ucd3b98k9tk9I//b+7vF+vp6ccAx3P4+8MUeMXbM9X7ngLhh6y5ROPJ/
      y6G9ojsYS3mvmIyImz7/XAzGBFGIBsTP67eJ8a/oioa84uaNG8V+x1ENMXHPFwdSPIEgthzc
      J9Zv3CK6/CFRFEXR2tYkDrmDI1f0dDaLuw80ikO9naJ1wCGKoij2d7eJO/cePOZaQTywe7vY
      Zu0XWw7tFX3hhJiIBsUtmzeJLl9A3LNn75HkkuKB3TvEA43toiiKos85KNbX14vdvUNHdPvF
      rZs3ik0dthPm+5kiE0VpJFhi5iJ9A0jMaCQHkJjRSA4gMaORHEBiRjPiANaW/Xzw+XYAdm/Z
      SmScBl559ZXTTrxl3xYefuRxAonh/33Ofl554VleenU93lDspPc376lnT3P/Ca8Jep3Y3f7T
      1jguhBhd1j4A6t99hf4JiiNo2LWJJ554gvod+8d9zyuvpO76PJYd9R/y+OOP89GG7YgM5+vH
      2xpGXZOI+OkZcB5372O/fxQCA7zybv2Y9gd6uogkAGI89ugT49Z+LBNVV0YcwNZ6gHXrXmXQ
      H2P3lm1EAKvNNnzOaiMR8WPr7Wf//gZCIT/7DxwiKYKtx0ZPZyt9Qy4A/G47Bw41I4hg77Pi
      DwSw9duHExEFWhsb6B1yEQt6ef7Z11i4/HzUciAR4pcP/p4rbrid669YRTKRpMdmI+BzMej0
      MtjTxd59DcSTIiDS0XKYxsYm3P4INqsVAKtt+G+ftYN9Bw6REEQ2/flPvPD6u/QMOEnGwuzf
      t59QLAmiQPOhA7R3941kxvD5vfhCUdz2frzBGCQidPcMjLo34ndjd3vp7OwGoKdtH7/93eM0
      tnXh6LfhcDg41NQOQCzsZ9/+A8SSpxpeNpqDW95nU5OHb33725TnWwBwDvbS2No1rMFmwzHU
      S2vncJmF/W727W+go3s4T/qtHXQccVKbzYrPNYTTGwRgR/0u7vjOdzCFO3j2zQ2U1y5kyewK
      EtEQ+/bsYcjl5fCOv/DYM6/QYe2jz2ojEPDQb3dz/Q03DeeRtYf9+xuIJQXc9j78kQR+tx2n
      08kzj/2GT7fsxhuE62+6GgBHv41Dze2IDNcT+zF5djp1xWqzEvA4sLv9p1RXRjWB7rj9Jl5f
      /97I/+vWrRv5Gxho4bdPvET7vo388g8vc2j7h3y6qw0iXjp67Pzxt79gyDnIrx5+AlfPIZ5/
      /RM2vreOn/3iITp7hx3g/VeeZH+Xndef+T2tAz4EQUQuG07L1X2I/HkrwdfLq+vfwROI8sbL
      z/Drh37HgNNLY1MjQWc7f3j2DerffoHP9nbg8w5HSf7pqM4/rQPiNDW14e09xBOvfDCqEj38
      61/gD/r53aNr2fnxq3y+r4u29raR84/+9lf4QhEe/OWvCTi7Wf/RFlr31LOzqXfUvQMte/iP
      //gp9bsbU1bW/fv38eGraznU7+PXv/gVQb+LR9c+n/La8bJ50x5uveN6Nn/8Npt2HcDT28Tv
      n1tP++6/8O6mBt546Rl2NbTw0h8fxRUJ8vP/+TWRSIhAKEbH/npeeX8zm95/lS9a+nn5mT/w
      0O9+j9Mb+jIBmYyV19yGtWErAy17qN/TzBOPPIg7HKe1vXOUlvfWvcgvHnqIXrubdeuG3zDW
      rg58ThsP/eF59mx8j+b+AC17NrKnZQAA8UiM7Lp163B2H2Tty+/S17yD59Z/ysb31vHRln18
      +sbTHOofdspTrSvrXnyChx56BLvbf0p1ZZQDWIpmo3C1YA/GUxbCrPlLOG/+bKpnz2fxvNnE
      4zHQZnDJxStZWpdP48HDDHp8NHfZCYeG3wh//d0fcMmyuQActDq55ZrLuXLVEtp63RTk5LBo
      2RLUcjBmZuMZHCC3rI55xTo6+9yAgn/68U+YW6ilfssuDrVZ8TodNDT1c+cd1zNvVvVxGsPu
      QTZt20FTZw8ep5OysjLKquooKTDT0dHJoYOHCEWjzLvwchR+G1/s2EUwARAnJOq4eOUKajLl
      yEqX4erYx+YvGllz0fxR9wJcdPVtfPO24V+zkrIycvIKmVNTAcCq1Vcwu6qEcGCIjs5BDh5q
      JhoNj1m5x0N2lo6BQS+rr76Frsa9dLU24fP56XWH8TmGQKnjsjWXUV2cS2Coh8ya81l+4YVk
      GjW0HD6Iz+chEEsyODgICg0//sn91JXljkoj7ncg12aN/H/dDTdy8IttHDjUQll5GQUllVSV
      DYdJfPcH/86yuVUj11bUzOHiy68m7hsYZVOu0lNSkMO8RcvIMKgBaG8+xIWXXsOVN9xCf+uB
      kTybN6uccGS47p16XVHyg3//T2pzladUV477CL7jtuv59LOtACT9dp5/8WUGPWMXnlGZ5Okn
      17J/QM6KFRdQnWsAZFRVVACgNxhGrr36oiX85re/4836BlYtnTPKjjqrijk5UX778CPU724l
      M0MPCjUGrRJRiBOOxDBnWlACF62cz2//90Hqt+8bTkMe5ennXqCjx4GYiBGOJsiwWJADReVV
      7Pr0HXY2dLFqxTLiSZGqykr6bF0IMiXxaIjh1omKuiIzv3/sMQYV+RQblJRmqemN6sjSakbd
      O/xc+i/FazIR3O289dHo8AWU2axYVk1ShMrKKs6E6267h7effpg/rl1LUm1m9pILsWhEZEot
      FWWFo/Myt5JY906efeElHL4oy1ZdjiIeRK3PoCQ/C4Vaj1YpO+aOMM+vXcuDjz7HPd+4Y+Ro
      Z1cHaq2WUDCAKbeU3oZNfLZ1D6DGcKQyH6Wv8zAP/ep/mb98Dbn5hbzz8tNs3DlcPrPmzOWl
      Jx6mxzH8cbTwwtXs+PBlHv7N77hgzdUpn/eU64pah0GtOOW6Io0ES8xopG5QiRmN5AASMxrJ
      ASRmNCMO8Ngv76d90E9fy04ee+HdqdQkMUGEQqGTXzRNmCytIx/B/qFOfvPsB5gSDv72Rz/B
      ur+eDbsaKalZwPUrZ/PkS+sJhcLcft932PnZ+6iVYbQFC7Ad2EpcpmLN9XdQU5J1svQkphCf
      z4fZbB7XtSGPnc5+J7n5ReRlDd/jdDrJzs4ePh8KodfrR92TDHkIKSyYjpnDHwgGMR7TEzgR
      Woe1Oci26HH6IdsyrCsYCGIwniDtZPTLGWGmvEqq9E6SRZdg1sh5+fV3+fqd97L+T29y1WXn
      UZhjoeVwNxt3HcDZ3kDlihu4YlkV/+9br7FqzdcoOTI6KXFuEPa4KaisxdHVwlBPF7qMLIRo
      iHA4jEwmo7OtmVnzFuAccqDPsBB02bEYFXT7hijOteAZsqI25aDXKHAN9YHaTFlx/oTpdbmc
      ZJtkOO1+OjsC5ORmoSCJ2+MBRJKxMBFBiTIZQqPVYvfFmFWaPfoboKqygtKycgBUsiT+UIyL
      L76Y3fXvk8iaxZUXLUMQRVBncOVlFyKTqfmHH/6IrEQfr328fcIeTmIqEOjs6KCiNA+FMY9Y
      eHiENhGLEonHyckvJksr0D3kQUyEkGkyMes1lFfVkYyHMWfmoFHKCIfDhKNJCvOyJ1RtIpEk
      5A+i0srJKSxHlowTDkeIhDxE49DV1YUgCCg0egoLCtApE7hd7tFzgktrF5IwDv+S//O//IB3
      //wXMotrWbbyAl577U18lVUsrC0lYlk5fKNcwf5tn+MMKbn5lmUT+oASk4u5oIxFaj0qOWTr
      etAVVqAQkzhs7RhLZmMQgrjjchbVFqPLyMUY8pDQmMjSgZj/5S+9IAjIxQQOt3dCnaC6ooxe
      u5fKkjwicRmI+QiCgEyII9eaybVoCMYVZJr1yFVKNBoj+aVF0kDYTMLhcKBWq09+4TgQRRGZ
      THbyC0/TXjgcRqdLz2T4E2mVVoWYQajV6lP6sDwRiUQCpTJ91SeVvcnQKjmAxKQjCgKJvj5k
      KhUynR65QX/ymyYIyQEkJo2Ey01wwwYi+/ejrqpCTCQQwmGEYAjjFZejXLp00jWdmw4gxNi7
      t4GM3EKqyopG9V8DdDQfwh2BpYvmTaHIcxchGiW8ezdJtwchEEAIh0na7SBXYLxsNeabbkSm
      GL0qWCKRmBKt56YDxFz0e0SWLC3i8IE9bNvbzMUrlqEF8upqkQci6Irn0dzcjEIhJxLy4wvE
      qa0upqW9h6UXXPiVcGGJ8RDv7yfwyV+IWW3oz1+KqrQEuV6P3GBAbs7AERNpcfrp3dWBwxNC
      pVKgVMhRK+XMKcuhrixn0jWfmw4AWDta6JpVQmfPAAU5GbS2tmIBzHW1X17T1YVCqyUcCFKT
      peDld9u5cHYh7kCUQot26sSfDDFJOBzB5fFTXFQw1WpIBgJ4nnseURAwXXM1ytvu4O3NzdgO
      +IjEhidGKeQyssw6inPNlOSamFWaTVIQiSeSxBJJLMapye9z0wGURmorixAEgdKCHPxxJbkm
      JUNDfrSApbAQg1GJpcREm1BCZGAzjuw67r22jhabE6PmuEU7pxWh/kbWb+7CmKHnlil2gHhP
      D65nnsVy151oamvZfriHt1/czB2XzeX2S+eiUY+vik1VEyit4wCp4kOmI0d19vT0UFxSgusr
      3wjThTHzU4yx7tV3uPDCpVQemaE2Hk41vuZEJBIJYvv2E/jkE7L+7jt4lDqeem8PRTkm7rx8
      PmrVqf2IfLWrMt1ax+oGTWs49Kl48UCvlabGxuEVGgBI4nR6Rs6nigb0eDzHHQsEg6ets6Sk
      BBmctPI7nY4jf79cFiQYOHm6gWDwjKIax8rP8GA7IZWJrq7OlOcnElEQiLa14X3+BcI7d5H9
      wx/yWYeHh1/fwW2XzuW+qxadcuWfSqasCeQPRqguz6WpsQ2ZKkl2bjb+IQeRuEgy7KC1w8b8
      +fPwuJ2YTBacXi9ymcCArYusvFx67EFysywgROnpaienqIKczPT8YnwVl8tJdnYOTqeLwT4b
      qE2Y9BrcHjcKGcjkYHd4ycjQkxBVhH128ktrCHvttLZ1UlNVSWZhET63n+LC3JMneBJUllIW
      VwTRmCYv+jbhchP8/HMiBw+hrihHf8nF2M25PPTiFs6rK+T+b65GoTj7ppdMmQPEI0Gsgzoy
      THIyC0rp67UiVxkIOjrQ5dVQXCwQcPYTSipJ2u0U1dbhGRygulRLS7+fwvI6oq5uYjE/KIxk
      GCeu6aUQBcLRKElRht6ciUwcHqo3qGQ44zLCrn50egvhJMyqLKGzLYjb5UJIJikuLqa0vJQd
      W7axYPnFadGzd9N7NHrNZJn9zKs7s8n24yHS0IB3/Ztk3HYr5ptvQpTJeWtzEy07GvjHW86n
      IMs44RomiilzgIqaWcPtW1Ggu6ub6uo6YpEIzc0eavMycBFCa65A3tdDcVklQ71W8gsKQCOn
      pDgDhXo46EoQcokEfQSjcSyqiXmcyppaOju7qampJhkfXhZFEAT0GiWGYAJDWQG2QTdF+cPd
      eFqtFlN2AXIxSSwcwOMNoMvKw6BKT9fq4hWX0/beRhSK0RWvbd8mlKUXEBtswRtKkp2biVkF
      SW0W+VmmU05HFAT8H3xIrK2dvH//N2RqNbF4ksff3UV+pp5/u/eitDzPVJLyIzjuH6C5y0Fr
      r4Nbrr503Mama7DVVAVanamtWCxGTs7xfePhwWY++KKHZDLG7Tde8+X1zi76KETw9GIAhsQ4
      IU+IC5ctIZlM4vf7MRrH92stxmK4n3gSTWUlhmuH0wiEY/xu/S7WLK3g/FmFyOXpa/IIgjDK
      XiAQGLfWU7V9LCl/MkVRYG9TN+fNH38PA0zfYKupCrQ6U1s+ny/ldQp9DmqxFaXx2ElIAt29
      g/hUkKsVGAwlycuxYMnLpc/uoSjXglwuH5fWZCCA6+FHMF53Lcm62fTYA9i9Qd7Y2MQ3r17E
      rLKcCQ+GG6/W07F9LGOkICMWj3L2fMuDNxKk1d1Pm6uf/oALmUyGjOFfU5VcwXeXXoM8jeG7
      U4lCa2DBggW0dXQdc1RO7cILR/4rO+bMqeyxmHA4cDz6GG/mzGdgjxtL614sBg1ZZh3/566V
      ZJsncL+uKSClA8iVapTJEB09Q8yeM3eyNZ0QTyTA510NdHmHkMu+fK2ZNDoqMvK4pGweRV/p
      HUkkEudM5Qfo6+6goamDzPzStNqN9/bhfOJJ1hWcx5zzZvO9C2rSan86ktIBQh47a264E19f
      62TrGZMWVx+fdu5HEEWurFrMLbNXTLWkKcPd14JoKsVlHwAWnbG9pNdLaOcufFu38WLuEpYu
      m8sVyya+d2k6kNIBuq09NFgPU1px/IKik023d4g3m7dTZs7lnnmXkKE99RUGzjUWXnQtzs82
      oM45/UnmoiAQ3LSJ0PadyDRq5IuW8GzpKlYvq+GihWUnN3COkNIBqitL+HjPNvT6PtLxC3M6
      uCIB3m//AoC/WbhGqvjHEPPbaersJTc/CSw+bTtyvQH/bffyUUMvQ11B7rh8AXMrznyg7mwi
      pQNoLUVce+lyBr2Tv5CSM+znnZYdBKIRbpp1IWUZM6tAxoUoMnfOXPzh8e7jk8IEMh5piWDU
      93LNhTVUFWWmUeDZQ0oHSMTitHe044sIwJezdDpam/AEExjVYloGWo6lyzPIJ537EESRa6qX
      UmTITGs327mEKIo4PAEuOO/0J/TI5TL+z10rz8rwhXRywhpmMo0eiNDptKiNBmIhP2UaGIpH
      sNtDXLisnGQyiSAIpxQQ1x9ws7WnCZvfQak5h1vqlmPRDDd1TtXWifiqrYm0nU5bYwXqyrUW
      qkuy8Pj8lJ5BOPRMr/wwhgNs2fgXgjE9Gvmx+1olsNkGyCspQyk/s4EWXzTE0/v/Qq4+gxXF
      s7gz8/gYmYkcYJqsQZYztTXWCPP+Q014Hb04QnIWzK5NeY3E2Lh8YQxaFRq1MrUDrFy5gnc3
      NY7EvQyj5IIVy0f+O92BlgNDXXzcsZd75q0+rr9eYnz4HX1EkiqMaRrNnikIgshjb+0iHEuQ
      TApEYonUDqCxFFFoaiGhTd8kkWgizutNw1sv/fP5N6BWSO370+Wyq2+aaglnHYIg8sgbO5lX
      kTtqjCNlLQz2NdLuk1GjP7OtPZ1hP3sH2jlotyJDxmUVC1iYV3FGNiXgned+QyxvGSV5FpYv
      XTjVcqY9Q54gj7zxBd+9cSnlBcPxU6IgEG1pTe0AalM286s06HWaVKfHRVIQ+Kh9L/NyS/nH
      Zdehkp9NkUXTm+vu/js21G9FpTr98jkX8YeidA146bX78AQjBMNxAuEYvU0dfJMezB/34c3I
      QPD7ibV3oJlVN0Y0qExDw55PKKqoY3ZN+WmJUcjl3DP/kjN6oHMNMeIjOXQIeU4dcv3pNy9j
      LiuGkgUEhpqBWekTeJYRiyfZ3dLH1oM2PIEoJp2ayoIMCqM+TFs3YdSpyL/6SjJvvA1VIk7S
      7Sbp9iDTqMn8xr3AGE2gQU+I+bPK8cSlbrJ0kejeRmzfSygrV5PoqEcM2EF2ZD6lkASZDFGl
      R3Hl/chkJ853XcEczIN7MNTOvIW9guEYnb0utjX20rmvkUUFRu5dVI7B6SPStB+xM4yysADj
      396Nuny4qyaRSAyvT6TXoyouHmUvpQP09FiprZ1HtKVl4p/oHEdMRIluexSZTIHuugeRKcdu
      tiQSiZNWfoC4305EmcXcopkxSv5Fcx/vbG5GcDpQDw1QfckFXJSp4M6l2YjRKPR2oywvI2vV
      ShSn2DOW0gEKMk3s2LGTytlTEwd0tiKKAoKrE9HbgxAYQgwMIjhaUC35BsrSC9KXDgqsrQdw
      Oga4cvXxUbGHG/ah0FvQKGUY0zRSP5WcV5FN9Y4ekhoPGT+4FVXxqXS8n5iUDhCLBrngkq9h
      0Z47MfQTgSgKiJ5uYtbh7l2EBKKQRG7MQ55Zjrz0fGTmImSK9EwT/TLhGM5QktmzMlKezsnO
      prt7AFOumcEzGKk/Eem0lcresf9HDx5CNWcOpiXDgX+nmu6JtKZ0gGQswr49X5BlMUsLyB5B
      jIUQnK0Irk6S9qbhNrxcAaYi1LVrUBQsmDQtJ5uwFI/HUet1mEwWKk5jpH48TOaUSOXS89Jq
      +1hSHq2pq6Nxw34i4dCMcwDBayM5eAjB24Po7UOMeIc/VpUaFNk1yHNqUZfchzxj+GMqkUig
      mOSgvWTYj1pvIRqNpjxfXF5F8TGdd+lrMJx7pJ4SqdKiUSrQfWVZvv7uFnS5VSR8g7jDSXIz
      zZgNalyBJDmZZ28bM9G9lUT3FkRvD7KMEhQFC1CWrURuKUOmmX5r3mzftRuSMpBJ4wBnyhjj
      ACpWrb6UTOPoDDYoBVzhJMlABD3Q5xikvSPM4iWLp3Ub84TRoGKSuLcf5YK7kJkKR64RgSTA
      STRMRTToqksu55P6nRgsMzOGP52kdAAh6ufZ519k/qIlo3oZtNrhJazjiTgAKp0Oo1kkEI6T
      oVdN2zbmiaNBlSgX3po222fCeKNBxbgfTzCBwSJ1UpwpqYPhMgq4aMWF1FQfOzFaoMcVRVQN
      UVFahCeUxGLSodVqCARDgGpyFEuQiIQprKimskjanPxMSTnqEh5socHqYN/+vaMuraqdRXVF
      KVqDmYLczCNvBBlGgzRfdzIRFTq2/+Ut3nz/06mWctaT0gG0OZX42nZiD0mv2OmIJiOPu+++
      m3k1JVMt5awnpQN0HdrB4jW3k6WTHGA6IiYT+Hw+aupmbiBcukjpAAl1FtmaOMWlM2d9mLOJ
      LZs20LB3J6+sf3+qpZz1pHSA0hwt+1ts2B2uydYjMQ6GBnoRNJncdM1lUy3lrGeMjZMUyIUz
      mw0mMXGsuvRq4gLIpQkxZ8wYi+NqkYkxorH4ZOuRGAdFpac3SUnieFIHn8s1mPRq7Hb7JMuR
      kJhcTmlhrKNYO9vwHFkXyKxV4E9qzup483MNqXzGT8o3wLbt2wBQq1O3MROCnHytCrvfQ0Ob
      TcrcaYZUPuMnpQMsWLiYjIwMcnNSL1yViAaxun0YVFpqinLosx+/f6/E1CGVz/hJ2QR6/713
      yMwvIyKkbiHVzZ28yR8Sp45UPuMn5S6Rp0MymcTlcqHRpKdr7kQ7+52prXTuEjmROsfaJfJ0
      mM7lk8reZJVR2qYyKRQKNBpN2nZfnMiKBenbJXIidY61S+TpMJ3LZyx7k6F12keV/K4AABsx
      SURBVC78k87MTaetibQ9kTrTTbq1TlUZKe6///7705VQNBrFMdDLoMuHUojR2TNAplFDY1Mr
      hoxsOlsOkkCF0XD8q80x2EeXrQ+TUUNTczumzGw6W5rJyM2h39qJJxAlw3zy6Yku+wCd1h5M
      Rh3NzcPp9rS2oM/Noa+zDacvhF6nOWt0pqvJAmdWPmG/h/bOTpRaI7aOVkSFlpBngGBSTSzg
      pLvXTk72OGaoiQlaW1qIJESCHjtOXxitXMA24MKoTNDYbkWjMxILurH19CJXG+jrbiOBGp9r
      AKcvTCLsw9Y7SEZWNooU8Zq2rnYcniCyRJjuXjtZGXpa2q3kZGfQ2tSIqNCOLPuZdrcrLC0j
      Egrg8PipyFSwvbGH2fNmM2BrxuuLjznNLyu3AJ08Rkv3IPPm1dLX3YGQFEkCkXiSeCQwrvQt
      2XmYVUkaO/qG0+3pRBYTiAE+r28k/bNFZ7o53efWGMwU5GRi7zyEvrAWr2sQo0GJ2xPG5Q1Q
      qE9iD49HgZzy8lJ8fj+haJJkNARKDYlwEJ/bhyAOr5Kn1pkoysvG09uEIrMCv8cxcr3X6yMp
      iMjHCFYuLi0jHPCP6OoPiIhCkrDDNqL9SzVppq25mdpZc0gk4vhDMYxq8Pv9JAQVcxfNx2kf
      SHlfr7UDS1ENGSoBv98PKgNa9fAnSjyeIB4f37zbflsX+rwKcvXD6QpyLVrt8Gy1sqoawgHv
      WaUz3Zzuc3udg/gTSsrLi4kE/cTjwpdTZOMJgpEEmvGsfyzEaO7oY3ZtFfF4nHg8PmJHa8lk
      dnUFvT02/G477ghUlJcRC/mJJxIj1+cWFJNvSDLoT53XLc3N1M2ZM6LLpNcil4FCrR7RfpS0
      O4BGo8Zms1FdWU5MbWHxnFp8bh+1tTV4hnqprEq9o4lGrWGoz0pBeTVud5CKokyiosBQ3yBF
      +dnkF41vU2i1RoO9v4eckip8bh/Vpbn4EHD1DJCIBEfsnC06083pPrdSpSbkdRKSZWAQg1RU
      V9Pd40JM+qmuKEU0ZGMex/pfggBqhUDvgJ3iglxyC4pxDPYhICCgwNYzyKy6apQqFRG/G09c
      i0Udo7yieuR6lVwkqMikyJy6D0erUWGz9YzokoddiKKATzCOaD9K2rpBYbjXIl1f7hPJTNV5
      tjw3TJ7Ws6fbQUJiApAcQGJGM+0coKWxkWQyQktb91RLOSFni8504+7vYMAToeUsWDq/sbER
      z0AXg77US0hCGkeC00VBlponn3qFm79+LZ99vpHs/HwIewmjxd55kFnnX05d+envjTvTdKab
      zPxiXnvpBaqWXcm2TZ+TVJkpytLR3utCK4bQZhVz/uLpsZ5s3DPABy0xLl4YZfOeHvIrZ+O0
      NmEwZXKg2ca1N1w3/d4A5vxqSopy0QT7aLY50YpBGpq76WjvAo152lSqs0Vn2pFr0GcWcN6c
      Ynbv3odWq6WhoYH2tnY8wdi0qfwAC5cvwaww0HpwP2G5lqGWBga9HjrbO8mrnE+mXjk9e4Gc
      TifZ2dm0Nx0io6AM10AvWXn5yESB7Owz37p1pulMt72jzz3U201Q0KBKBhDUZgwaRVqeG9Kl
      NYHTGSTLoqPhYCPV1VX0DgyQnWFBrjWSadJNTweYaGaqzrPluUHqBpWQmBTS+gZI964hE8VM
      1Xm2PDdMnta0OoCExNmG1ASSmNFIDiAxo5EcQGJGIzmAxIxGcgCJGY3kABIzGskBJGY0kgNI
      zGgkB5CY0UgOIDGjkRxAYkYjOYDEjOaccYCwz87axx5l7do/8vGmXeO4I8KvfvW7k15VX18/
      rvSFsIuf/sdP2LL78Liu/yqvPPUof1i7lj888SzBWJKGbR9Tv6cZl/UwP/mvn3G4s58nHv4F
      L7354WnZj3j62LH/mHm8gQGeW//xuO9595Un6HbF2L2lnkCK9aiOvXb9c4/SP74F8qactK4N
      OpU8/vCDXPuN77HmkpWUF+fj7GmjvWeIPQea0CS8vPbGOwSSasqL89mz9TM+/HwLLn+Uyjwt
      XsFIzNlFr1fA29fC62+9R1Suw9/XwkOP/pGQoGZedTHrX3uVXk+M6vJitvzlPT6p30ZhWTUm
      vYY/r3uCnW1Olixegq2rhfaDX5BZUsemD99kx/4Wauvq2L99M/sP7uVwWw9djXto6fVSWzm8
      ANYH73/Id3/4I0p1QV76cC8rFtWi1GfxxrMP4UwYMSqivP/J58yau4iSTDWv/ul1FMZcMhRB
      9jR188XuvVQUZfPaq6/iiSkoL87g4/c+YdfOrcRVGRzY8BYvvv0ZBksWVWVFEHLwzubDLK3K
      5POtX7C5fgPZJdWEHV28+tqbhEQNjVveH7mnPD8Lk0HDg7/4X7oHnZRXlnOgoZWykhy2bNlF
      445PRq4tzcujoKwUp7WJP73+NmpzLmZ5kE827mBr/QYyCspJ+PpY96f1+GIKKkqmbvroOfMG
      cEWgPMfIay88xlMvvY3d1soja58nv6gIrTGT885bwmsvPouz5yAffdHDfffciloGttYD2OwB
      7LZWWm129KYslp63mJeef5a5S1cxa/Ys7rv9Bt547knqVl2Dv2UrTX19vPn+VtasuRydajgL
      V128ikXLL2PVsrm8/PiDDEa0NG5+C6+hitUL8njm1Q/ZvWULs1es4eDmj1l86bXs3fbpcc9R
      MncRHmvbiJ5Vqy7msmtu4aabb2HWrNncfcvVrH3iaW69+17eX/8KIU8/v334MSy5hTz35FpW
      XXMrLVvfZzAYYuOmvdx8++28//brI/quWLVsVHoBu43DvX5uvGwxb328mdfXvcKc81dRW14w
      6p7G3VsIa4tYOm8293zr7ygyJti64wCQYOvWHaOuPbBjK4FEgieffZV7/+obvP3i03hc/ezt
      cHD7Nct5/b0NvP3qOioXLWd2VclkVI8xOWccwKIWsToD3H7fPQx19wJw8533cd7cal589ilC
      sSQmnQ6vx0NheTlKpWpkcdVjp0Q89/SThOMiuiOrB8tkwxd5vC4+fvs1HAktKkHN9//5b9jy
      wWt8tP3QcVrK5y/nrluuJRb0UlBQQE5BASGfF1CRmWlCpTViMevRqI9fS7C/+SBZZamXJzyK
      fcDKy88/R6algBhw6XW3svqChXhddt5+7WUS2kwS0RiW7Gy0Gj1qpYhMJhtz4duc3Fz0Oi2i
      IPKt7/0zkaEuHl37XMp7ho9xNOO+cvzYaxMoVEa0ag1mrYqYANk5ueh1ekRB4Bt/948ovL08
      /NhTJ3zWieaccYBv/f3f8c6LT7L28VdYsvJ8DOYssswGAObOrqW5uZmM3HxK5pxPzLqHF15e
      T3ZRMdVzFrP1g1fZcaiTLLOBubNraGluIjuvEIB5FQW88Pp7fP2e+1ALMeRyOWplko8/+gvu
      mJL5tWUAKLVGivOH91QrLR1u1qy86lYOb3idx1/8M3fdcQOFpSUogdLycuRASemX63+WFmXx
      zNq1vL2piW/dc/2IfmNmzshzVJQP7w/819+4l2g8iUKnQas1UpQ7vCz5Pff9NUIsilyuQK3W
      UlpaNKLHXDQLuaOJz7bu4YhgyovzURvM5GeZkasNFOdnsXvHJlo7rSxYuGjUPTmFpWiVsPqK
      S3nl8UfpD+nRJfp5ed1b5BQVj7o2v7gEtVzL5Stm8dhjj1Gy+CKyjEd0KrWUFuWyd9dWmtq7
      mb9w4cRVinEgzQiTmNGcM28ACYnTQXIAiRmN5AASM5q0OkA6dzWU+BIpXyeOc+4N0NnaRNPh
      BhyeoxtWxemxfbntj9PpPO6ewcHjtwUKBIMTJfGcpqfHxoCth/jRA0KcYGjs1ZkBQsEgQY+T
      0Ph2l0orZ8cqSadAOBxGrlLQb+1koA/0JgMJX4C2LgEh7MTWZ6eqrIiGxibKy2qRqeUoZALu
      /m50lmz6vQLZZi1iIkjQG6S0uo6czLNjOcHpQDgcQiXK6exohVgQrc6C3x/BkJVNzDNAY0sH
      RZWzEIKDGI1m/Ek1mUY16rAbnyGMXggjl8upPmYbo4nknHsDqLQGZs9ZSGGuaeSYTGUg7rGR
      WVxHltmAIJNTXTub3EwDyGQoVTpm15QRjQuUV9Whkg/3DMtkMpCNsRWhREqCPi9DvgAqhZq6
      2TWI0TgqYy4DrQcoKC0hv7ic8pICCorLKS0tJeJ2Egdy8vJAhAydkphMNWl6Z8jiuAKtrR3U
      1tZMtZDTYvrma/rp627HXFCJUTM5v83T7g2Qjg8+v9//lSPy06r86dAyXT5gp8uzHF82oykq
      rx5X5U/X80w7B5CQmEwkB5CY0UgOIDGjkRxAYkYjOYDEjCatUyKj0SiHD3yBypRHj7WDWDiA
      oNASC3pw+kIo5CAmEoSjIQbsHjRqBf29fRgzMuizdoFSC6LA1i2bKTDL6Q3rCNhtoNTidw2R
      lGsIuO3EUaFVK+loPYzDG8WgVdDbN4heq6F/oA+UGgw6LVs31zPg9FGQk4GtfwitWklfbx8G
      vZaYICcWDdN4cC9qgwWrtRsEAbVSRu+gkwyzkfbmQzjdXlQ6DQFvGL/XQVxUEA/5GHIHUBFj
      wOlDo4TevkEyMkxYu7owZliQHxk/iEajDPQ2s2dPB3n5WQw53MNp9A8S8nvR6I3YujrRmSwM
      2LpQ6U0M9dnQGLT0Wu2oVHJEUUSj0YzK647mA3giMhyDPfjtXRzo8BILeDDJ/NjCOix65XFl
      81UbB3ZvR6bLpKenG5fThSbmoK0vSJ99AKVKg16rOakNgO72ZgaGHGgMWjqb2zjc0EBUoSLb
      cnzXbSwWO85GZ2sTg3Y7iriPL9pcZCmC7DpkJRrwjfN5BHbv3E5UUDA0NEBOtolD+w7TcPgg
      CpWepoa9OBwuLHmFKOWjbaTdAVCoCfrcgEg4GKB/yEEsGkUUEvh9fnzBIGIsSkdzO1GFSFGW
      joOHrGSXlmHvs2IymtCowD4wRCCUIKuoGHtPE13dDsJRHz3d/QQjEQrz82hqPIw/HEVMRMjS
      iXT1BTAX5tHf1U1Bfh7WrjZUuky8jn78LgeOUJLyklzaD+0lqivANdSDRqPD7/Uik8uIhiK4
      PB5KSopRKBTIEPD6AmgNSjzOEKFInHgsgDcQJBGJkkzGaW3tBDkU5ujYtqOZqrpKrN095GRn
      juRJfkEWibieoYF2XA4nwUQCYzIMmZk4rXb8kRBOt52ANwQRD1ZXiEg4REdjEyU1tZBMHFdp
      fMEwQjREApGaymKiggFZMoxFr8CPaVwOEI4nCfk9iIAMMGlEyCgi6nGg1OgwG/UntQGgUStx
      OJzojCaiEYGsDCMl1ZUpwwxSOYBGJcfudKFVKvDHlchkIvojU03H9zwy4tEwwUgCuRxysi14
      fTHMGUaqK8sJRWLUFBoYihnI0ClG2Uh7E0ir1ZKfaUJQKEjEZRj0ejIzszAYDJQXZeELCcQT
      CUwGAzqjGb3eQE62hQFrF7HksA2dMQuDQUdWVsbwcVFDVoae3LxisrJM5OXlIcT8lNUuoqak
      EK3Jgt5gRK83YDToMeiHM6asajZZBgWmjEz0lhwMKuju6iavpBpXTzsyhZpI0IdCrUOv06HT
      6zAbdPT0DQIQCUdQqVUIggydXktmpgWDwYAsGcfh8ZFIxDEaDIhCgq5uO3V1pXR3dmG2WPD7
      A8f0eSvQ6dVkZWZhyckjM8OMwWTGaDCgQEChVqPX6jCY9KDWoVcpycvNZf7Cubid7jHzuaK8
      iEAwDjIVOq0KlVKgqcdHgeX4SjqWjaKcDOKoUMqSdAzFMCkiKFUqRFEYd5lHIhFUaiWCADqd
      Fq1Od0oVKxyJolYpQaGmsthCJKlCp9edwvMIxGNJ5HIZZq2Kw4eayC4oQKfTDesLemkfilGS
      efwI86SOBDsHe9FaCjBoFKOOJ6Mh2rq6ySusQEF8xMaxxzPNunHr8Pv9mEym4457PB4sFsu4
      7Yz1PD3dHSQUOipKCk9qNx2juOeSjbHKZiq0+Hy+9DqAw+FAnWKi96kQDodHPHcqbUwnLZKN
      idOS1mhQtVqdlpiVM7Uhk8nS8iuTDi2SjdFMt7I558KhJcbmyff20NnvOe54ZaGFv73+vClQ
      NPWcggOIdLQ24w4mMKlFvKEk2bmZmFWQ1GaRn5Uer5aYODr7PRzsHEpxZuYuDHIKDiDDaNDj
      CQVQarSUaWAoHsFuD3HhsnKSySSCIJBInNm0nnTYSCaTZ2wjXVqmk42xPvdEkXHZPxfLJqUD
      xP0DNHc5aO11cMvVlx45msDrC6HRqFDKBQZDSfJyLFjycumzeyjKtSCXy894e/t02FAoFGds
      I11appMN2RiTe2QyxmX/nCybVCdEUWBvUzfnza885qiS2tmzR/4rO+ZM0RnJkJCYOsZwIRmx
      eBRF6pMSxxA5fJihB/475bm8n/4ESidn8VchGCTW3Z3ynPrIkorjwfv6+pTHNXPmTNqzTCYp
      HUCuVKNMhujoGWL2nLmTrUniNIh1d6fFEcdyAPOtX0c+Uxwg5LGz5oY78fW1TrYeiTEYdAcZ
      cqdeqmVBVd4kqzl3SOkA3dYeGqyHKa2YnKUpJE7OZ3s6WffpwZTn3v7/75pkNecOKR2gurKE
      j/dsQ6/vAxadksFPd3cy5Dn+lyrPomfN0qrTEikhMVGkdACtpYhrL13OoDd0ygY/29OZcrBl
      fmWu5AAS046UDpCIxWnvaMcXEYClkyxpfLifez5lr4e6vBzl12+ZAkVj09HnJhiJH3fcoFVR
      VZQ5BYokjnLCkQSTyThZOkYxng++WHc30cONx18gTr8Ap6fe3zvmW/Hn31kDgPWue1Lea771
      68iv+tqE6pvJpKwrWzb+hWBMj0Y+/kkR6UT64JOYLFJO3Fm5cgUKpZpk/MSr+kpInO2kfANo
      LEUUmlpIaLMnJFHpdS8xXUjpAMG+Rtp9Mmr0o5tAHa1NeIIJjFI4tMQ5QkoHUJuymV+lQa8b
      PRlZp9OiNhqIhfxjhkOfScitKIoIgoAgjP3tcdTGmOkgTmrIrZAcW+vRZ5mMPJksHTMiHFqU
      aWjY8wlFFXXMrjkaSJXAZhsgr6TshOHQZxJyK5PJkMvlyOVjrylw1MaY6SCb1JDbhGJsrUef
      ZTLyZLJ0zIhw6EFPiPmzyvHEj81UJResWD7y30wJh27oSDWDCvIyDeRnGiZZjUS6SekAPT1W
      amvnEW1pmWw9046fPPlZyuN3XT6Pu69YMMlqJNJNyvdmQaaJHTt2Yskffxy5hMTZSMo3QCwa
      5IJLvoZFK+2PJXFuk/INkIxF2LfnCw4cbp5sPRISk0rKN0BNXR2NG/YTCYdYumjeZGtKCx19
      bp56f2/Kc9++bokUhCYBjDUlUqVFo1Sg0+tTnT4rCEbiY6yBA8FIbJLVSExXxhgHULFq9aVk
      Gse3yvDZSuTw4dQRpUDGbbdOshqJqSClAwhRP88+/yLzFy3hytUrJlvTpBE93DjmJHDJAWYG
      qYPhMgq4aMWF1FRLM7gkzm1S9gKFB1tosDrYtz/1R6SExLlCSgfQ5lTia9uJPTR6HKC/uwVP
      KIFjoJfWTisejwchHsLhPvHu3xIS05WUTaCuQztYvOZ2Er6BUccNSgFXOEkyEEEP9DkGae8I
      s3jJ4mkXDSoIyTFtHI0kPGmE5QnOC6I4qVGYUjToaCY0GjShziJbHkdZWjbquFarBSCeGJ7g
      rdLpMJpFAuE4GXrVtIoGlcvHXtjxaCThydI50Xm5TDapUZhSNOho0hUNmjLXSnO07G+xYXe4
      jjkq0OOKkvQPUVFahCE7n9L8fMpqZqEQpX51ibOT1C4kVyA/7pUrp6p21sh/BcdEAhsNUliw
      xNlJyjeAXKlFJsaIxo5fy0ZC4lxijDeABpNejd1un2Q5EjOB6RSnNS0XxpI4txlPnFbCbicx
      xg+wdm76luxP6QDbtm8DQK0+t2OBJKYvwfqNY4aplK17OW3ppPwGWLBwMRkZGeTmZKUtIQmJ
      6UjKN8D7771DZn4ZEWG6rbIpIZFeUtbw+779D5OtQ0JiSjitn3jHQC/ucJLcTDNmgxpXIElO
      prQynMTZx2k5gDdFLJDEzGBcS9d3dSGEjt9cRa7XQ/bErDd7upyWA4wVCyRx7jOepevdz7+Q
      cqadZs4c9D/8lwnVd6qclgNUlBbhCSWxmHRotRoCwRAgOYDE2cdpOYDWYD4uFiiZTBKNRjm/
      NpvynOGoURE4Gn+Yl2nA5/MBIPvalSntxktLEcJhynO0XHd+2XE2gBEbwpIlyEqO37dWyM0l
      FAqhU4ojNr5qR6cU8Pl8xEpKxtTi8/kIh8Nj2ijP1eHz+UhqtWPaCGu1xMLhScmThEYzLXTA
      5JXNqMG0Y4zkZRrIsxgQQyFiXd1HTovIjlGrrignIpMhE8cKEj8NfD4fZrN5zPPJZBKF4sT7
      z5/Mxnjs+P1+TKYTf5SnQ8t0sTEeO9NFx3Qrm7GDyM8YkUNf7ME2OMjRqSlfFRQPe9l/qJXB
      wcExrfT1tNHT1Y3D++VuNaPtHJ/OV3HZB+jotjE4+OUvxle1pErnZFq/aiNVOqOZnDyZLjrO
      hrKZQAeIM9TbT0endcyHD/sCDA7109s/dtBdwO+mubmNcHis7ZpOnk4gEMTW0YbLm7r3Yjzp
      jEvrSdOZnDyZLjrOhrKZsKFep91F7XkLEVGQ+kWUJBAXmVNTiUqbegGugM+N3lRI3dwCsjN1
      p5VOPBpCrtJQVVODMSN1lOHJ0zm51vGkMxl5Ml10jCed6VA2E/YGyM4tQCYmSY45N1dBYWEe
      8XgCIZn6GqM5E4NWRTw29tzPk6Wj0ujJyjCRTI49b/bk6Zxc63jSmYw8mS46xpPOdCibCWwC
      Reg82Io7EGIs6Y7uTgYDMQI+z5hWhhz9RP0u+gYDp52OrbefWDSG0z52e/Zk6YxH68nTmZw8
      mS46zoaymUAH0FIyqxS/0zVGOyuBN5pAE/fjDo39K5JhzsYTCJKTnfr11mftJ6M0D/egfcz2
      XEFeNsGAF6U+I+V5t2OQWEKJw+MlKyt1OjmlpRjFMP5o6k6zaNBHPJHA63Ei147VyzHxeTJd
      dMDZUTYTGO4ZJRJTs3Ll+WN4mQylWkumzoBOP3a3mNcX5PzlK5GP0aWlUCgxGM2YM3IYazeD
      QbuL+YvOG3NlBblcjtFgwGioQqdOnSXewX5yKmaTa0w94CeTydDp9RiNRjIsY00kmvg8mS46
      4Owomwl8A8jwuIawWntJ3bqToVDIEAWBxBhtN4BI0I/VaiUUST0/Wa6QIxOH1wIaa0BDTMSw
      Wa24valfoXK54si9AskxtIiiyOBALwODjjF0KEAcvi455ho9E58n00XHsJbpXzb/Fwtiv1+v
      0MwcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D2)Gradutes from Different Institutions' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='(D2)Number of Graduates' width='192'>
      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
      av8f4kSnfcW/xS4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D2*) Compare Employment based on Educational Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='88' name='(D3) Degree Graduates (Words)' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABYCAYAAAAa/X5hAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQu0lEQVR4nO2dfVyN9//Hn/v2FUrta0VtUeauJfN1c3LTrxohxDeWfppSLDe/Jr4yhTVt
      uYvC1oatoSUj8q2N5t6WHNaK0GyKbKYMReHbHZXz2O+Pc0o53Zy6MtLn+dfpOp/P5/p0Xa/r
      83lfn+t9XtcLf/75558IBI3kb0+7A4LmjRCQQBJCQAJJCAEJJCEEJJCEEJBAEkJAAkn8vb4C
      qampf0U/BM2UF8RCokAKYgoTSEIISCAJISCBJCQJKCvKHZlMhsz5CzKrf0OUuwxZkLxyizxI
      hsw9iqzHG5EHIZO5E1Xli9JrRwn2csBWJkMmG4L9WC8+iPqRmwopvW3GlF7jaLAXDraq4+Hi
      z4704jqrKO6kEfNBRR0Ztg5ehCXdQe0QKu6QFuXL2CFByGts6CYJwR7YD5EhG2KPR3BCtfMg
      fQR62QordvP1qSY6u1k7mDXpAy4NCGVvSiqpqYns/eRtTM7FkPBH0+yiWaG4QtQsb+JN3mH7
      d6rjsdqJtvfu1V4nPx5flxB+ky1Q1Unh8KYJ3Fg6gy2VV7qCO2lR+Dq5EHL9H7xSXlNDxSQF
      TyOkzJNdiamkJu7CsyyEacFJVMhXuoD0B/O266vEboolV3JjkJV4gAvlo5ju05eXtABao9fd
      lv8LC8PdrAl20Mwo/j6c3b2XETbVio6toeJ4OFub1FGrN/P37CTAyVJVRwudLk74uLVF/mPF
      UJ/Cjq3gHnmQnQH21Nha7j6+POfEx4Ejle207sjIwI9xOvcl+1Qnu0liICOXWbj8HkNselPN
      MYUU1z1CtxDyOfRNBo5jB6DVkGoGXemq//hGBf+9V4BxR0PV39bMDZuKlVJhNVJ89hS5w4fR
      q+rOtXoxbHgup84qT1DTBNFaA3GeBNu3fo/U82421BHLVsdZNm05R6+WqM/ZLYqrXMm0RD8/
      ig8qYsIh9rj4R3G+oCHtKLh58D3eO+uCj4OuxrXybuXQydhIbbuRcSdybuUBTXgX1nOKN7Yn
      oohVi5IbiJk7m3avwrXDWZa52DH0zdkEx6Rxp0UqqZji/54j8Ux7XIP3kJiqjEMWdUnAZ1Gc
      ZiFD6WVifJ2YcWAAYZum0rVBQxkYdTBQ22bQ4ZGomu42Xnc4rs55bNt5SvKo0brzSHw/+4ZE
      +T7C3+7EzxtmMNYpmKQWOa3JcJ/rhKWxjnIaa90RK5/3mZIbz3fX665ZejmGuc6+/DgkjK/X
      u9Kj9tmqVnJv56tty7/9SLpNuA6kxQBPL17dG8meGi4NXd0X4aGiQeLS0jHG0imAnbH+WOZ+
      zRd76jlizx3d6GF5noxLj2/viUWfQgqLaq+puBLFLN8zOG6JJ8y1B43QDoYdjfkjR/1k5ub8
      URlLNe1CotE4PEdlsmOP2n9Ml6494bef+OWxuTsz4zy82Jfeqjus0tLSGtp9mU7Aw4cPm7S7
      zz4mWFm34uv4x0f1dH4+Y0QHw1qqKdIJfy8B+/WrGPNyA+esKuj2H4jR98eodm+kSOfY90YM
      7K+MpZp4JVoXO7dJsDWcvY8JxWC0B+MNfmDj+zGklyiAUm6d3sjKrTex9JrEAFW5lNAxeATH
      cyFHFUCX3uL0xggOt7LEwbZT03a3GdBzsi+2xwLxjUlHedhucXpjCAcGejBaPTxRkrafeIvp
      TGlowPM4RuPw6hfP/OVHuVWq3PfR5fOJ7+fFOFUYJOlpfFaUOxOPOBC3YyqPlmgKOLhgFIHH
      y2HcR6QG2VV+o7iTxvZVK4g6eZWCcmj7Uh+GTffFz7UPFXedpddOsGtzJHHJl7lx5z600sfI
      wgZPXz9c+6jdm7YIFHeS2LxkDTtOXeN+K30s/rWE0EX2VAwuilOrcQhsw7rDvvQFru+YyviP
      L9TYlvncOHZMNVM+AXh3X807NJ/76JwqbpIQspAV32ZQgPq+RTpHsyeXuHe8uDIjHv8BEkec
      RiAepjZzFOmxpFit592nIB4QI5BAImIEEkhCCEggiXqT6ktKSv6KfgiaKWIEEkhCCEggCSEg
      gSSEgASSqDeIrhPFXc7HrCV0ezLZReXQpj3dLB343zkeOHZTPnbIjp7OlHDw3h6BmymcDLYj
      4FBtDY4mWB6AjaROPZ+UXU/g0yWryRi5hQg303rLK+6eZ8/Gz9kmv8DdB9CmvSXjA4LxHtRe
      mRaiyOFUzBYi45LIvF1EOa1oZzqYKQv9cO3TvkoGpIK752NYG7qd5Owiytu0x9LBn2V+NnRA
      koBKSF73NguTXmfx5oM4mmijuJ9L5rGvCP3mPI5+NcvAJkCOPED5+WSwHQG/ebM9wo36D0kL
      pew6CZ8uYW1yR4b2/IdmdfL3s8gjFuM5C4lYaIGhtoL7WYcJnjeHqDU78OoBXP+BIzf68+9P
      59HNRA9tysg7G8vqD+bwoKIMUHAyhJlf/J3ZK+NYZtYW7ueSefBncoAOSJrCzpKw7w49Js3E
      0UQbAK22Rlg4+hFZi3gEDSf720jO9g8iLiaEt3rraVjLkjm7IvFztMBQG0CLtmaOzJzUhh9O
      ZyuLmE5kiZ8jFiZ6KM+eNob93Zjj3OpRGS4Tu/kWnusWYm/WFi1U59h5BK+rSkibwoDCIrFO
      9CQxnbgEv4ZWMuhCF7WNCgruFWLUvbYkIoACMi/ew9JZ9RuNcwf42sSR3R1rryFhBOqP/biX
      yNm+GL/os+SVNb4lwZNGQc6RIIJ+msCs4TrqX5cVcj3jGF/6zWJv9xXMkCkjoPxrv2P48t9I
      3DifKY7DsbOzw2H8O6w9nlOZ4CZhBNJh8IJINnTbyPoIf5wjWmM+aCKTfTywV01pgmeAsl+J
      C1zMTsVkVq+fSJdqD+1PEmwXwCEA3ddwWbyOj98woeLsFRcVcu3USe69M5fPZ3ZFrzKW8maD
      fhzz+mlJvI3Xak+fiUvYfOAg+zcvYYjiICsnj8MnLrv+uoInTtmvcfi5LebUwNVEr51Id7Xr
      2oYAuRy5/Dv2b5lP919W4/lWKCerZJN2HjkNN+uu6FWJpd6b8zr7j54GmmwdSBu9rtZ4hcQQ
      MkGbnz/bRXLTNCxoJIqr0cxdnIbDhhhCJnan7jlBGz0TCxx91rPJM4/VkecAMO1qzrWLmTwe
      5er0tKBzQREPkCIgRRllaj+x0KKjsRGUP6Slpb8/UyguEvHhcd5YG4SDccMSzXR121GQl88D
      gD79sU6J5+Ct6mVKLv5CbgcD2iBFQNdjme/+Pl8mXaGwDEDB/awDbN59mZdG29Gn0Q0LJHP+
      MAfMPXDtUrt4suNWsCI6iSv37qsC4jIKrySwbstJbGwH0gZAZxjTp5fzxYJP+CGvjIpzvGpT
      Ph5v9gOkBNEmY5jneZfPN/sTG3gb5UJ0NywdlhPubUPLTH9varKJnj6F8MtVt03BLlz5aXSw
      nAAbUKR+xPgVrVm1x4fXgRuZ6dw5FMewGlb8e3hvJ8LNFBN7Jyy2RLJ8ahC/3X0AtKKdaR/G
      ztzGgjcqzp4WXdzW89mLoYR4juG9onLavGLLtKA1uKpWfutNaRX5QM86t4j3nc3vU2OY108k
      1QsaiOLiHk73X8ucpyAeECOQQCJiBBJIQghIIAnxuzCBJMQIJJCEEJBAEkJAAklIE5DiDmlR
      /rjYD1Eajts68NbsMOIvP3qcKw9SGl3LhgQhV3e5Rh6kqlvVbDwrCneZjCo+5RVfqBmYC54u
      EgRUTFLwZGZEv4BnVCKpqamkHN5G4OgSdv4nrXrREROYoHOClLTH20gj5URXRo3q1vhutBBK
      rx0leLIt7lGaupgqjcT9XewZorq4vYLl1Y0563Ghh/od7yUI6AxH9uZj7uaDU2elA1+lp2GA
      XfWibewYMxoOJZypvj09GbmONTY9JWfWPr+UXuNo8GTGeO9H8YqGSfVAgXw5HiuzcVi7j5Oq
      i3tB9wfcrCxRvwu9Jo73kmOggiLNrFP7DrKlRJ5MepVtWaeTKLEbTC+pnXiOydqzmdNWq9gX
      H4anxg5tmezcmIvXhkBGdlG6u2rpGGM5yYG+FUU0cKHXxPFegoAG4DDegJuR85kbdVrpoVcH
      WgMGYX0zidOVI3A+qck5jHyjb13VWjxmrssIGNkFnYY86jqzl92dnBit7hFeiSYu9Jo43ksQ
      kC7WATvZ4j+Ie1H/xnGoPR5+4Ry9VouSdO0Y8cYlklNVvsPFp0hKs8X6KTlrPc/kX72CockL
      fB82u/IGx9bBi+CEm5WxiyYu9OqoO95LzIl+ib6uy/gqIZFjXy3F5uG3fPDmCKbH1BTo6TLQ
      2orTSacoBhRnUkiyHoTQT9NTVFRA9o9y7g54l8iDP1bGLvdCpvHRmUdRcn0u9NWoxfG+idaB
      Kt6oE88nLtr8FLaNpBpKGcgGY56UwhkFpKWcoK/1QGp8c0O7dugD5Q9b5PsNmgTTMTOYatsd
      vSqxy4cL/kn8gZTKMvW50FdQl+O9hJzoUkpryIk2etkYyhU150SbWWFteIKUtHSS5T0ZMbQW
      o2ODLnR9Ec7/fKG6wXbxJS5cAavXLRvd7ZaAWY/XyL5wSe3FN7rmlpgWFPIAzVzooX7H+8YL
      6I9dzHbx54sTv1JYCqCg5Go8G6MvYTDOnppD414MG62DPDqCJP3ByGozymYAk7wsydu1nI/k
      tygFFCVXiV+6jgT98XjU6rAtAOCfg7BNiqtyN6WkOP08OR0NaYNmLvSaON43XkCd/oX/2yb8
      tHEe44fKkMkGMWpWNEVjQtkaaFdrTnSvwXaUHD9OgbUVdb0/zsx9E7uX9SNjxUT+RyZj0HAv
      thWNIXRrANaav7GoZaI7HG/vcjbMWYP8VikVF/fSDXl4TVK9E0ADF3pNHO9FOsczTRZR7hNZ
      r/7qEQDGfZRKkJ26U72SUi7Hr2RZ2FEyCspp23kYM5YGMrXqWlI9LvSaON4LATV7hFO9QALC
      qV7QrBEjkEASwmj8CaOjU4Mfz3OEyKN4wjzvF6CYwgSSEAISSEIISCCJJ2w0rrIn6RaMPKC6
      9a/SgLyb0lg8O5rpU8K5XPNeKi1JlHWqlGrTHks7T97xmUCf9iIv5GnwlxuN14ipGxFyN+Vn
      lZi6qbxv1HnkZl+Wl8G+jYHMdznC9IjPcKvDUEnQeAp+iSZkxVZO3Hig9Adasgi33spHIs3a
      aFzb0ALnD79k0aBfCX8/qtYRTCCB7Bj83z2O+dK9HJMfY+9Sc46/60+MykdVcgz09I3G9Rnu
      PBb9a4c4dvEpd+W5Q0Fq7E4M/Nbgad4WLbRoa+7JGj8DdsamouA5MRrX6tWbPuRw5qcbT68T
      zyWXOZvci6E21ZNz9G2G0iv5LJeRJCCV0fg8Gf/d7o/zGEdmBkSQcP0pKElHh3bAQ4Xwhm1a
      8sgrMaLD44vpOh0wKskjD8lJ9c+I0XhJCUWAXjuRadbkGHWghtR7KnLvn7DRuC7t9ICHCp5o
      evylDM5jTK+eItW1ycm9TQ2p91Tk3j9ho3EDOr+qD79cIKNa2RIyM65C/95YNLoDFRRw5D/x
      FHQezbDXJDcmqIYhhjq53H78PqnkNrk6hhjyFxiN93vTA4v8OEI2/KAMtBX3yTqwig3H9Rj3
      1ogahkfNKSu8QkKoDyEp3fFeOZUeEtoS1EQP+g9OJ7HqyzOAgpOJpA/uTw/+CqNxU1fWb+vA
      pytCcRtxlwcVhtbLw/Ee3JhUh0ME2KkctFUr0R/HipXoJ4MWMpfJbJ7hzzazMNzNtSm7tAP/
      tflM3iJDC2HzK9CAulaihYAEkvh/JVf+sgOmuDMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='109' name='(D3) Diploma Graduates (Words)' width='164'>
      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
      H3iXl0SjE+EIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D3) Graduates [Chart]' width='192'>
      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
      XrDQbpkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D3) Industry Size Figures' width='192'>
      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
      tgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D3) Job Vacancy By Industry' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D3) Job Vacancy Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D3) Number of People Employed' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D3) Number of People Unemployed' width='184'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D3)Annual JV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D3)Industry Size' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D3)JV by Industry &amp; Sub Industry' width='192'>
      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
      oD8AABTCeqedhY6kAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D3*) Compare Employment After Graduate From Poly and University' width='192'>
      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
      ME7aoXIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D4) Comparing Job Vacancy &amp; Recruitment Rate' width='192'>
      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
      68d9ReWHMgwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D4) Employment Change' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbaElEQVR4nO3deXAc14Hf8W/39NwzGAwG9wAEAQIgCQIkwVsUKcmUKMqWLUu2fGp34ziV
      rVScP7y1ldqkUqnNH6nUlv9IJbWpraTKySZb5dq1LSda+RAlWhdFERJP3CeJGyCOwQCDGcxM
      z0x35w+QBEBSEilTJHv6ff4ipzHd/YD+9Xvd/V4/yTAMA0GwKPlh74AgPEwiAIKliQAIliYC
      IFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKliQAIliYCIFia
      CIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYmAiBYmvJpCw3DQLw3S8hnnxqAqakpFhYW
      HtS+mJau6xiGgc1me9i7ckc3TmKSJD3kPbk/7md5JPFqxD9cJBIhlUpRXV39sHfljlRVRZIk
      HA7Hw96V+yKdTmOz2bDb7X/wusQ1gGBpIgCCpX3qNcCjySCbWGBqcoLZaJKsIeEsCNO4tYoC
      uw1JAkPLsDw3xvD4HEndQaCsmppwKX7nxrzrqQhX+ofJle+kqcK1YZmWjjEzMcbU/DJZm5/y
      2i3UFHtR5PxoRwurTBeAVGSMvp5uxqIZdAMkQyNzdZjRlSO8eLAGu54jPtNP2wcdRG0eHFKW
      sfFrLK3sYff2KnwKoKeYu9JN15VpxvvOkdxfuzEA2RjjPRdpvzJLxmZH0ce4OjJH5umjbC12
      ITKQP0wXgIyaAU8JO+q3sqmsAKecZWnsXf73zzqYOVBDhbrCZO955n37OH6smRJbnLFLH/Lx
      6FWKy0JsLXWTnOila3yBrKuSurCX7g1bMEjODTM4voCv4QiHmitxZ2doP/kGp7u2UPfEZpyK
      aDnmC9P9JT2ltbTs3kNDuBCXIiPJToLhCgKqSgqdrLrA1JhMw6EdlHts2JyF1Oyop0hPszgf
      IwPYPMXU7TzMsSf3silw6zlAJTK9iOEup6ExjN9hQ/GG2X20kVzfMAu6/jCKLXxBTBcAu92O
      3W7nZisks0D7qQsYB1oISwY5bYlYooSyorUD2+YrpFDTyaaTZABXSQ21pQXY79iWSZNIGtjk
      AvyetV+PEqqgbDHCgi7uGucT0zWB1uikZ7o49dZFEqUtPH24Dg8ScckAVwG+9dGW3XiddnKK
      zmcfvjq63YHTcLPhmtlWQKFbJyfa/3nFnAHQVWY63+WN83OU7TrMse11lPjsIOlg6OhplcyG
      L2TJZHNoubtcfy5HNpdj44+rpNMGd5EgwURMGIAsMx3v8O4VnZanv0JTdRC3It98LC7jxiWP
      Ec8ANx585lKsGCDJjrsosB2npKPpSVQNuNG7IRMjavPQKGqAvGKyawADdbKDj8d1anYfYldt
      CLfdtq5PiIzDUUZZ5RQDgwk0w8AwdNJTU8zYZNyFAVyfun4AL0UlCpnsLDOzKrphYOga8Z5e
      JmtrCMsm+5UJn8pkNYDK9HgEm+Kk0CsRX1xct8yBL+jF4fGzeWsjHe++xkfu4zQ4Zrl8th8j
      tIvqigAyOmoiTjKjYWCwnMyRIUY0akO22XF5/YQ2bSHU/z6dH32E4+B2gslefvv7KPtfqsf5
      iHZ4Ez4fk3WGizH44Xu8824n87ft9Xa+8+++SaMsoatxJrre49TpLmZzfmpbj/DUoRYq/Qqw
      TMf/+wdO9c2S0jauoaCygSNf+S57KyC7NMalM+/R1jNJylHJnmee48ntZbju8AxAdIZ7sO5n
      ZziTBeDRJALwYIneoIJwn4gACJYmAiBYmgiAYGkiAIKliQAIliYCIFiayZ4EA2isTPfTduYD
      Lg/NksgpFNYc4sWXn2Cz144kga7GGe94h5PvdTCb81O350mOHd5JuGBjcbMLPfzml2+Q2vtD
      vr+/6PYtJaa49O5bdNpaeeFoMyV+E/66hE9lur/o0sBZTn08gFJ7lO8fC+O3pRhve42//aWX
      f/tPDuLW08wNvM/Jtji7vv0jtjpnuPDeeT44K/Glp1opcwG5RXre+gWvXtKoCiZI3/pIWEsy
      3XOGk+/1s5JZIlXbRE6MA8hLpmsC2St389xL3+GFI01UhgL4C8vZ8dwTNPYOcQWDTHKZkf4r
      hJ/9JodqigiWN/Hk0R0omTnGp5fQgWhnG1eLn+HHf/6nfKnWc9s2ktdGGU94OfStH/K9LzUR
      cov+P/nKdDWA1+/f+IGeIxlZJFlWTBCDTGaOuZkqtr7o5kYnUWd5BWXaAulYjBSFFO35Ci+w
      +oax6B26N3uqmjhUtfrvpRlAdIHOW6arAdYY6Gqc+fEe3v1tD6UnDhKWDHRSqEYA//puL4ob
      nwSGnkX7xPUJVmS6GgAAQyMdm2VsoIPz3fOUHPg6TzcFV0eESTKy08nGbl8Kil3BZs7SCl8g
      Ex4SOsmFcXrbLzGwVMCuL3+dbeVrA9wlQ0ZKLxPXoORG011Pk8xk0XKyaM0IG5iuCaQlZunv
      7GJS2syTx59gR2Vg3dsdJBRbIQH/HLPRtRG9WnyJRVnG7vbgfCh7LTyqTBaAHLHxK1xTfTQ0
      b6cy4LylABIOVxHhGhhq6+LaSg5NXWS0e5BF2U1RSSF/eA9yIZ+YrAmUZG52hsm+aWai83Rv
      2Ptqjnz7McIOL1VNB5g4c5m3Xx9EkXJoUgGbm+upCrqQSDLS9gHtk0tkdFgejTBt/y0/v+bG
      XVTJjr0HKVzup7O9jzkV1PkrjK1c443IEF6HTM1j3+DQJhGjfGGyADgpa2zlkKea1G3PpYrw
      AMh2fGWNHHrSw9jk/OrLcUvDVFUU41UAbPhKKqiWA+QMoKaGlutrcHiD+JwyTm8hZdU1uLOr
      yxvXbaXYa7JKU/hUYkjkfSCGRD5YYkikINwnIgCCpYkACJYmAiBYmgiAYGkiAIKlmew5AIBB
      LrVMZH6exXianCHh8BYTri7Ba5OvT5KXJbk0y7W5JdKGHV+whNLiQjz2WybJU2NMT1xDK6qj
      pshxyzbiLETmWVxOkTUkHJ4QlVUl+K5PxCfkB9MFQF26xtX+LgbGIywnM2i6Abgp2/skJ3ZW
      oOgaycgw5z88x0gsi2GA4i1nW+temuvK8CiArrI4OczQyCg95z4gefDP+NETJTe3kVmeZbi/
      i/6xOWIrN7bhorT1KMd3hnHaRMWZL0wXgPTyIksZB1v2n6C+qgi3nGFh6C3+12uX2NPyPKWZ
      FSZ72xg1tvPMt/ZSqSwx9PEZLg0MEiwqpL7YSXpmkM7+YeZTAcIVXoZu3UY8xlLaxua9x2mo
      LsYjZ4hefZv/848d7GyqYJMIQN4wXQDcZfXsLW/A4XBc79rsonjLZkrjfSyjU5iOMjmao/7L
      e6n2KUAxDbu2MvL+OJH5JWqKyzAMByVNRzlUXsj0qXO3BcBVUktr8WYcTufNbYRqayhN9hIX
      D87ziukC4HDe0qE5u0jfB51orS1USAY5bZGlWBmtJesmySsIEtRHySRXJ8nzhbfSxOqQyDtu
      49YuA9klBs52k92xlXJx9s8rpgvAGh11foAzp9tZcFRz+IlG/EBc0jCcBfjWj2OX3XjtCppN
      494mOdVRI0O0nWlnTi7jwJFGgmKO4LxizgDoGeb7z/LuxWncm7ZxoHkb1UHX9UnyQM9mb5ng
      TiOnaWj3cvTrGSJD53j/wjhKZSP7W7ZTXeRZNx2TkA9MGIAsc71nODO4Qrj1KDu2lFPgUpBv
      TpLnxEmMeBZujn7JpVjRQcLO3b3gJEdk4CM+7FukpOVxWhoqCLjsN7ch5A/T1efZmT4ujCQJ
      Ne5lz7YwAff6A1PGbi+huHSKq6Pq2nfmZpizSTgLCnDfzTbmBrg8HMO3ZS/7mqopdDvEwZ+n
      TBaADNfG5rB5gmyuKcUhGeiahqZpaJqOYYDDE2BzQxUjb7zG5bk0amyYs2c6SUpBwpWFSBgY
      uo6maei6jqHf8n8jw+zkPIbdT21tOc7btiHuAuUTkw2IWaTn7ZP87uRFZm/b653805/8MTtk
      CU1dZvTiSV5/6yLXcgEaDjzNc0/uoTpgB5Y4/7P/ya87r5G85SVBgartPPPyNykaOcVvXv+Y
      a7dto5k/+o+vsNu1cSCGGBDzYIlJ8h4xIgAPlhgRJgj3iQiAYGkiAIKliQAIliYCIFiaCIBg
      aSbsCqGTiozS1d7OwPgCKc2Gr6KFp55upcKlrM4Rll1hZvACbReHiGoewtv2sH9nPSXejcXN
      xYY58/ZZ0tte4LmmgrXPU1HG+7vo6h9lPpFGk5wUbdrN0cd3UOaxixFhecR0AYiPtXP2Yh9J
      fy3NB7bjklQiAxf4+UkH//LFnTi1DNHh87zz4SSlew6xVVlipP8yH+UMDh/YTsgJaMtcbXuL
      U90JHJlhUsXqui0YJOammY6uUFS/m3qvA0lPMtN7gV+8qfPDr+3CZxdTJuUL0wUAX5gd+4vx
      FpXhdzuwSTqZ6iyDf9XH6NdbqEvHGe/vxrXrZY7sLsUtZQm7NE4NTTExV0VRtZ9Y7zl6jVqO
      fbkK9fLfcvrWTZTXsbuoBsXlwanIYGjUhjVG/ssQo19poVkEIG+YLgDeYAneIEjyjckubDjt
      NnSnAzsGGXWea1MhGo+X4VEkwElhbQ0l/f2sRGOkq/34Gw/zNHZcdoWx3lsvgyQUpwff+nE3
      koJDTRILBgiK9k9eMV0AZPnGAWtgGAb6yiTv/f27OE68Qo1ksKInWFGLKHSvHaiSw0eBbpDI
      qWQBt9ODh08eEQZg6Dq6nkNNLTIzcIG3Ts+x64WvUybO/nnFdAEAwDDQskmiVz/m12904X38
      23xrbymyZIAsIXu9eNefqCUnLrcD1X733Z5WRtt4/XenaB9bwVW5jy8//yzbK/3YRAWQV0wY
      AINsMsLVC+/x/hDsfOmP2FtThEOWAG11UNjKMgkdQjcrixTJVIZsVrrrOcJ8dY/z/X/1ON/N
      plma7uf86V/xd52HeeWFVkJOUQvkC9M9B9DVJa5eOktnvIJnXvoqB2tD1w9+AAmbrQC/Z4FI
      fG38o56KE5Ml7A73PU+RJNtdFNXs5sQr36R+pI3L0dxnf0kwDZMFQCcx3sfQsofG3bvYHHLf
      PkeYs5iK6hUGL42wqOro2RVmB4eJ2JwUhAJ3MUlehsTiPLMzUZIZDd1YnV94JRolLoFNF22g
      fGKyJlCK2ek5YjMxcHeQGF2/LMT2x7cRcvnYtH03V0+3cVqbJGhLMj+7QmhLK1XFXiRUZgd6
      GIkkyekGkdFlos4LnJH9OHxBqus3o8+M0DMwBwE/bsWGYWRJRWdIbd7P9hLR/MknJguAhK88
      TNmCxvLiLLMblilsAZAdBKp3cfSonc7eCRZ0F2VN+9jRUE2hA0AjHYsSmY+hakBpK00kmZ1N
      4s7IFGc9VFXVUqdmGZ6KEFFz6LKDgpIWTuzaKu4C5RkxIuw+ECPCHiwxIkwQ7hMRAMHSRAAE
      SxMBECxNBECwNBEAwdJM9hwAwEDPZUmnU6hZDcOQkBUnXp8bRZJW5wgzdHJqimRKRUPG7nTj
      djlQ5I1PcQ0tw0oiieH043d9wv19PUsykUTVFXwFbpSb3bCFfGC6AOTSy8xc6eT8pU6uTC+h
      5iTcRQ089vxxDm0KIBkGmdg0XW3vcLZrgmXdRWndbg4f3s/WygLsMmDkSMWizE/18fav3yB5
      +M83zBG2Ric918Fvf/kmHy3U889//AKNhW4RgDxiugAkpoboGYlQsu8ljteX47WluXb5NX76
      q3Ns/fFxgrkVpnpOc2m2nOf+9HvU2efpfP80HZe78foPsDmgkFsap+Psh1ya9lBe5iP5CdvS
      UxG6Ll7F01hHRa/vLl+tLpiJ6a4BXJU7eOL4l3m8qRKfQ0ayeajcvZPNcxHmMMiklpgYjlF/
      7CkaC+0o3kp27m+iQI8zN7OEBqQXFqDhOD/4wUu0ln/C01E9yUxvB6NyDU1bwvgdpvtVCXfB
      dH9Vl9uN2+Vaa4bkEkx0XSWztZYSDHK5BaLRCqor1w5spaiEkG6griRIA/76/RxqLMetfFJj
      RmdldojuKY3N9VuoCLpEsydPma4JtMYguzRBd0cvI/PQfKyFkGQQJ0tOCeBfXzKbC68iE5dy
      dzVHmLYyy+DgNFJZLXXVIVzJkS+qEMJDZs4AGFmWxrq50DlMTCqk/uBjNIW9q3OEAdype59x
      549voyWZGR5lPlNIXXMNQZfMJ14kCKZnwgDkWBxu53zvNEaokYPN9VQUuLDdnCPMgaItEc9B
      +Y3SaSlWNB0M5TPbfNnYNANd57kwrjM6NcAZgEyE0QmVN34xTeG2Y/zJE7VfYPmEB8l0AchF
      hukYnIHyZg621BBwKeva5zKKEqKo6CzjUxkaalavA3LRCBGbRJnPh+sz1i97Stn+2DOEdmTX
      PkwMMbewTGNzCxXh4BdQKuFhMVkAssxPTJFWCmlo2HTLwb/K4Q6waUshb739DlXfeJot9jna
      z/UQl2rYWVb4mbcyba4CKmqbqFj/YVTl4/YFtjQ1s6XwbqbZE8zCZAFIsDA/Scfvu/jg9O/Z
      OGd1E9//y2+z1e4lvONJ9i//njf+5j+xpLspb9zHE0daCPsVJGJcfvVnvNk7S0qDbGKBhPxf
      +cu3bRRUNvLk115hX+XDKp/woJlsRJhOVlVR1ewd7ubYcftd2CUJw9DRsiqqmkNDQrE7cDrs
      2GRpdR2pFOmcxq0ll20KDpcHx63VhJ4lldaxuxzY5NtfrSJGhD1Y93NEmMlqgNV+PXbnpzdD
      JElGcbhR7vj3lrG7vff2ehTZjttzL18QzMJ0D8IE4X4SARAsTQRAsDQRAMHSTHYRbE3JyVmu
      nTzzub+v5XIgSdhs+dGhO5fLIksy8n0ojwiACcSHxuj8i//8sHcjL5kwADrpxSkG+/oYuRYj
      rcl4Sxo58Nh2Spw3JslLERnrpr17lCXdTVldEy1bayhybzxjaPEJLrRdJrPlGEe3+NYtSTDR
      1UlX7wTx9V8I7+Mbj9Vit4mWY74wXQASU31cbO8lKhdRXFGNnQyxyQu89p7CD05sw6FlWRq/
      zOkPhnHW1lIlJ5jpv8h5VedAaz1BB6AlGL98hjN9UdILfaRcj20MgLrI2MQscamAqk3Bte4T
      RT5kMUVSXjFdAHR7gHDDThpLqikucKNIGskFmZG/7mbi2a1sUhNM9HeSq3uO44c24belme9t
      472xcSYjFRRWeokPXaInUcC21kb0gTE+vnUjiQQJxUd4ZyuPbSsWdwrymOkC4A1VUBsC2Wa7
      3iVBwev3okgSYJBV55me8NH4/U0EnDLgoaS+luLhQZYjS6iVXtxVzRwIewh4nUxM3H4hlVqJ
      Y1Ns+Px+cfDnOdMF4LY7GekZzrx6Gvmpl6iWDFQtTiIVosm/dujK7tVJ8pLZNBmgwFdEiE+e
      JC+5ssLUxd9x6tQ7/EqRsXtCNBx6lmcPN1DkvL0HqmBepgvAGp3k+Ee8+upHsOd5XjoUxg6k
      ZZB9Bfg2TJLnxuN2kL3LSfKCDUf47o8OkNMNQEONjvD+6/+Xv0u+zL840YBbEfVCvjBhAAz0
      TJzRcyf5zeU0u772xxyqK8ZpuzFJnoEWj7NiQOhGCIw0qVSGbObuzt2yYselrHWX8/l2840/
      yfLf/+ocA0/XsVsEIG+YLgBGLsHI+Xf4eL6YE985RH2pZ90gFwlZ9uNzDbGY1NnkXT1QDXWF
      uCzhsDvvoheocb2b9Opb5m7y+ggg3d24YsE0THYq00mO99ATddO4Z+8tBz+sTpJXQnnVIoMd
      M6xkdXQtTXR4lDmbHV+o8DOHREKG+OIcM9NRVtQcumGg51JER8ZZCAbwi9ugecVkNUCaa1Pz
      pONpEpFxepfXLwtQ01xNgctHzbYWBk6/wwdyM+VKjLErM3irdlNd4kMiy+LEKNdiaTQDZmdW
      WHYN0tU1g93tpzRcTHy8n46+RTw1VRT77JCK0N91laLHv0aNkh/dCYRVJguAjqMggKLOM9xx
      nuENyzYT2FFNgc1JsHYfT2ky5y630655qGjcw56WOoqcABkiV3u4PBpF1QFqKEsNcP48eIqr
      2V24ma3N+3B5+mjvHqQjlgZ7gIq9z/N4cyWKmCo+r5hsSOSj6YseEjn77jnOvvxnX8i6rc5k
      NYA1+WrDbP83/+xzfz+X05AkCVue9GG6n+URNcB9IAbFP1gPbFB8JBJheXn5035EYPUA0zSN
      bDb72T/8EGja6hlTlvOjBrif5fnUAHi93vuSsny3vLxMJpMhFAo97F25I03TgDt0IzGpXC6H
      LMtffADcbjdut3gT2me5ceYPBAIPeU/uLJPJIElS3pzMMpkMsiyjKH/4JWx+1ImC8DmJAAiW
      JgJgAZIkIYkuHHckngNYQL60/W+4n7dzRQ0gWJoIgGBpIgCCpYkACJYmAiBYmrgLlNcyLIz0
      cvlSD7Pp25fWHP4WR2pN2EFOzxKbGqCja5DppRTYC9m07wiHa+/9SbwIQF6z4SooYVP9NoK5
      dR/rc1z4dTfxI3czbfijJsfClfO09cyiBMvZUmrHUFNEIlEQARA2suENhWkMhTd8mh15k7b6
      g7SWmvDPn5ii9+oSzoom9uyqI+hSIKcSS32+MItrAMuJ0v7BFNV7t1LkNF/v0MWpqyzioLJm
      M0VuO7IkIdtdBAs+3yRuJjwFCH+IzFgHl12NfLWqELvpukdkWF7MgBpj4MzPeWvgCvMrOq7y
      HTz/3RfZW3bvPZdFAPKIYRjoWg7dACQJWbZdnxr2xvI4PedHqKh/loDHwaP9jkfjenm0deXJ
      klGXmR5bpOrgM7xy4mUK7BoLXa/z07/5Rwr+/XdpuMcjWgQgj+TUCd786//G6XmgIEzr09/k
      e49VXV+qkx29xEVjC8eqg3jst893/GgxSMeucPJ//JS2BSBYy+FnT9AieajaXs2uli2UeldL
      ED7wMi/0/gfOD3yHhh33VioRgDxid23iq//6J3z1DsuMXIye7hnCtfsIBTyP+MEPIOMubOSl
      v/gJL637NNI1hDoaI7acocrrvF4OOyWlAToyWeDebuuKi2BLMEhN9zOcK6G6vASf49E//D9J
      sLwKezLGyMgoS+kchqGTiU/TPSZRVXLvzzREDWABRibG0OAMnrJGyov9mO/ezxpbqI7Whkk+
      7O/g48wiJX4FdX6QiaJn+FbVZ3//ViIAVpBNYgTraaiootBl3rM/ALKb6t1HeMrdzaXeYfom
      dNxl23j+q7so/ByrE+8Fug8e9fcCCZ9MXAMIliYCIFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBp
      IgCCpYkACJYmAiBYmgiAYGkiAIKliQAIliYCIFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCC
      pYkACJYmAiBYmgiAYGkiAIKliQAIliYCIFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpf1/
      h81932+xWM4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='(D4) Job Vacancy by Industry &amp; Occupational Group' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D4) Recruitment Rate ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Foreigners' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Local' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Seriousness' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='(D4) Trend of Unemployment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D4*) Trend' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='(D5) Change in employment rate' width='192'>
      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
      awAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(D5) Comparing Employment Rate in Industries &amp; Qualifications' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(D5) Employment Rate in different qualifications' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary of Full Time &amp; Part Time Employees' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (Anually)' width='192'>
      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
      H7ZTAYjuoO+CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (Rate of Change in %)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WZAc13nn+8vM2vfqqt5XoLE1dqBBkSK1UrZEaTi6mpDse0e+99oxnpeZ
      CDvmYZancXgiJmJiXh3hOxF2xHV4ZixrdClREiVT4mZuAImlgQbQ+75XVde+Z1Uu5z50owEQ
      1SBAAg02O38RiC5UnXPyy5Pnf06ePF9+RxJCCCws9ijykzbAwuJJYgnAYk9jCcBiT7Ddnb4l
      AIvdiV7hL//iLynWDAAuvvUKr743tG3y37z6DxjVHNfHZ+/63vZYjbSweFwInaaAi5sTC3zx
      ZC/pbJGqp4heK3Pt+giKy8+ZEwOszE8TzxTJFKsoDgduh4Nidp2JmUUkm8saASx2L6GOforx
      ObIrM0R7DwPw4Xvv03/sNM5qgpnlVYanYjx1bpAmvxsMldm5FXyBJoJeFxNXLlkCsNjNyITc
      Mh+OLnHsYDcAxUKOqfFR6o4QTXYNpy8ICO6cArz75msEO/ZztL/XEoDFLkWyEWkKc/zYYWrC
      gdflpCUa5tkvPUulVEbXNWzBTvxmlqGrw8hOD0h2IpEgXV0dzE6OEcuVkKyFMIu9jDUCWOxp
      LAFY7GksAVjsaSwBWOxpLAFY7GksAVjsabYEsDx9k/c/HOLiBx8QzxTvm2l06Bq1Rt+PjgKw
      vjjB1fEFAMbGxh7eKiGYnRzlypUrLK6tc/7ChYcvYxsSM8PMJsr3TTMxMbntb6au8cHFS/fN
      n00l0cxPZJ7FDrMlgPjSFN0Dg3zh6ae4dP4dDL3O6I1h5pbWEEKQjC1z/cYoNd2gtacTO1Cr
      FBgeHqZQ3pBDfHGOsi6YnF1hfXUeYdSZX1xB11RGbwwzvxxHCFA38y3H1hFCEFueZ3J2cctj
      b31hjITq4Ny5c/S0N5PNZlien2Z2aQ2BYHVxluGbY2i6SSadJBFbYWR8GlMItFqF68PXWFiO
      Idiwe2xyFnOz7HqlyPLSEqOTM5hCEIvFAEglEuibaWbn5kAIEvEYU+MjxJJZhBCkE6tcvzlC
      OpcnFY+jA5VChpKqk0muce36TSrVGq/94v/j/UtDpHJFkutJVhZmmV9YQjMFpl4nmcru4CW2
      uB+3b4GEYHR4iH988w16Dhyjrqp09h1gbfQia3mV9y8OM3BoH/WaxvCVy2imzmtvvMPA0aMI
      QwPgcF8LU4vraNhwSyaFzBr+SBdarUZn3wEWRy+yXijzm9feZuDYca5evEBycZyFjIbXyHBl
      fBGAqdkFDvX3ASBJEvVKEVeojfmRK1R1E7srQG+rmzffuczYtYukqxK24hLT8TK/ffU3HBw4
      zs0rlygkF7gxn6XNZ/De5TtGIpubVq/OOxdH+OD8++im4MKHH6J8pHLeev23tPcd5PIH71NO
      znNxfI3jAwdBwLXz56kAifkRllJF3nn/MscHDqLrBj09+zh1dpBoyMUv/tffcWNqCS2/ypXR
      RRbGrhAr6I/xklo8DLe9QSWJY6fPEhEp3v7wBkppjarioVQqUNUkBvq7uDI0RNum05Gp1bB7
      /DgdDpwOBwCt+w5x/c3zBJu76fKovHtxlNPPfYPpsStUFR/5YpFSPos71ILTbsPhsBNfWyGr
      erH7bPgjG+aEfB7y5SpRnx0Apy9Ic9iPw65Qzae5ODTMvt4mquUyvoCDzrYWcqVZSrqK7Aji
      cdpxOBykVhfJ5hXm43Wa/KGtU41Emoh0uqnceIvnTu3n/MUrOAPtSJJ0V+WEIi343U5sio21
      hVkOHfsqik2gfHTmJNk4cWQfl68MEW3vu+un5u6DfOebX0eYGiO/eJW8Q+F3v9P8KK6dxSNg
      61LKssLY9auMTUzj8QcwDAOtrqPpBgidcqWGIsvkcnkURUFxuPHbdC5dvsxqIgOA3RVkfWGM
      9r5+OvbtZ2R8js6wa6MsTUM3TBzeEHIlyZWhqySzRQ4MnECvFEGWCfi9AAyc/QIz1y5w5coV
      FlYTKMpG36woCggTTdOpqzVkWUaWFSQJJFlBlpx4bDUuXRkinsrSeegUtnoeISAQDGycp93F
      8swI7775FscGn6H14FmG336Vc0+f3aqUu463+bd34BQ3P3id4es30IVCV08rVz+4zNTcMhIm
      pUoVuyKTyeXp6W3nyoULZIsqbpcLAEm2sz+iUHZEUe7WmcUTZOd9gYTJysoaAb+H8xev8e1v
      feORFr+6skwwGOCd9z7kO9/5Fh/X1uq1Cm++fYEXvvk7SI+xYZqmwdD5t+k6+RztQdfjO5DF
      Q/FEnOFy6QTxVIH9/f04bI/2SWwxl2Y1nqJvfz8ux8e/77MeW8UXacXzAGk/DVq1RLJQo6M1
      8liPY/FwWN6gFnsaayHMYk9jCcBiT2MJwGJPYwnAYk9jCcBiT2MJ4DOIEIJKuYxhPJxHnWno
      6A+ZZ69jBcb6DDI7cpl4xUaxUOCpEwcoagpyvYDi8uLxBdEqJbLZNK5AM05RxrR5ePet13nq
      zAkq9mbstTTtff2kVpaR3H4cZgVcIbrbLReMj2KNAJ9B4vE0J06fQWglPhy6QatPMLGSw15L
      Mr24xtWLF5leTDF24wqrazHev3CFULiJiN/OxNUL1FxRzr/3GqPjy0yODDMzPUU6Y3mgNsJa
      CPsMUkitMjw+TzDShign8UbaWF9ZoqOzjbnlOB6bxPjUIgMnToCaw7D5cElVotEIeVUil14n
      2t5GragDKh6nQrps8NzTg0/61D5zWALYjRg1FlbT9PV0PGlLdj2WACz2NNYcwGJPYwnAYk/T
      8DForVpifmGRYKSNtubItn7yQghM08Q0zXveprKw2A3cMweolbJcHB6no72VbHIdX7SDgQO9
      AFSLOVaSefo6IkzNLNK1r5+Ax4kQAlm2BhOL3cc9rdbpC3O2v4np2WXm1gtbjR/A5vSAoRJb
      W+fgwCFSifUdNdbC4lHT8BbIFWrHF6hw4mjLXd8L06BSqeIL2YnH18Fm3xEjLSweFw0FcOPD
      N0nWouRyGbq6ura+r9drNDe3EopEqBQLhCPW630Wu5uG6wDF1ArXJpYIR1o4MXDgvgUIIaw5
      gMWupWGrlfUydcmL2+3caXssLHaUhgKweaOszV5naXl1p+2xsNhRGgpAKyepO8N47JaXhMXn
      m4YCcIc76PApaDh22h4Lix2loQDUXBxvSx/1yv3DpFtY7HbueQpUL+fIqhJaOYPTE0TTNDra
      W7ctwHoKZLGbuWcdwO7xsz55haW1JE6Pj8Gnnn4SdllY7AgN1wHq5TzpiklbNPyxAWOtEcBi
      N9Ow1SoOJ9PXL/DX/+/fMr24ttM2WVjsGA1dIdRCCnwd/OH//QKlQm6nbbKw2DEajgCSMJif
      n2NqZo6I5e9j8Tmm8UKYVmPwC89Qq5R22h4Lix2loQBmpiaZGBvBVCxfIIvPNw0FcPTESXpa
      oyytxnbaHguLHWWbp0AeVlN5Th/p22FzLCx2loYCME2wmxWuj83stD2fGwxh8Nb6W/zrq/+a
      l1ZeoqJXnrRJFg24b3Bc5Z4NcTfQ6ir5YplQKIwiW9Eg7kQIwWRxkn9349/xD7F/wMTkv83+
      NzrdnXy/8/v8Ud8fcTJ0EkX66LbcFk+Ce1q4ECYfnH8PzRA4nY2381yYmyGbtxzlPkqqluJP
      h/+Us2+c5fXE6/yw54dc+sYl/uuJ/0qLs4W/nP1Lzr1xjqfffJq/mP4LYlVrjvWkaegKUV6f
      5sJUEaOS5YVv3ruPr1otk4qvgKed9qh3z8cFqpk1/nrur/kvU/+FVC3F9zq/x58d+TOOBY5t
      pTGFyURpgpdWX+Lvl/+e2dIsXpuXbzR/g3/R9y/4evPXcSvuJ3gWd1MxKrybfJcWVwv7PPsI
      O8JP2qTHQkMBmJrKG6+9hjPSxVefOXtPpnQiRiKdobf/MB6H8lh9gWpGjYpRQZEUpM1trxVJ
      2RLcnd/bJNuOCtEUJq8lXuPf3/j3jORH+ErzV/iPA/+Rr7d8HVnavj5qRo1LmUv8ZPknvLz2
      MqvVVTrdnfxBzx/wz3v+OSeCJ57ILVJVr3I+fZ6XVl7il2u/JKZujFABW4B93n2cCZ/hXPgc
      RwNHGQgM0OJsue957gYajwCJSS7O1ejrbGJ/T1ejfFs8Dmc41VC5nLnMT1Z+wq/WfkW2nkWW
      5IaN/i4ByLenNHbZjsKGUE6HTvPN1m/yXPQ5DvgOfOrGJYRgojjBv73+b/lt4recDp3mPx39
      T7zQ9gKK/HBll/Uyryde58fLP+a1+GvktTzPRJ7hhz0/5Pe7f59m5+Pd1EIzNa7lrvGjpR/x
      s5WfsVxdptnZzLfbvs2L7S8iITFSGOFG/gbXc9eJq3EqRgW37KbL08Xp0GnOhs9yIniCY4Fj
      dLg7cMiP5kUqQxiPvSO4RwBCCJIrM7z5/hD+aDsv/u5X71uAEAJVVR+JMTktx89Xf86Pln7E
      fHkem2Tj6y1fZyAwgCEMNFMDuOszbNyCCDZOo2bc/qyZGqqpMpwdJlPPYJNt9Hn7+GrzV3m+
      5XnOhc89dAXrQucvpv+Cv1n4GxRJ4U8P/Cl/0PsHOOVPv2iYrWd5Ze0V/ufS/2SuNEfQEeT5
      luc5EzrDyeBJDvoPPpLjAGTqGX628jNeXn2Z6dI0dtnO15q/xosdL/Kl6Jfw2/z35DGEQaae
      Ybo4zXB+mLHCGMO5YeLVOLDR6bS4WjgZPLnxb3OyX9bLVI0qFaOCaqiU9BKqoVI2Nr/XK1SM
      ClWjSlkvo5oqFb2CQHA0cJTTodOcCZ3haOAoLqXxvPST0lAAi7MTrGeKODxBTh8/fN8ChBCk
      UilM8+H3pjKEwVRxip+u/JTJ4iSSJNHj6eGftv9Tnmp66pEPr6YwuZG/wTvJdxgrjG09mmxx
      tfDV5q/ybORZos5ow7yqofJXc3/F5cxlOtwd/MnBP6HLff/R8dOSqWd4Lf4ao4VREmqCqlHd
      +s1r83LYf5jB8CADgQGijuh9b/90U2e0MMpLKy+xUF5AkiT2effx3Y7vcjZ09pHcOgohWKos
      MZwbZqI4wXJlGdgQhkN2YJNtuGQXLsW19ddn8238X3HhUzY+exTPVkMfyY8wWhhlsbJ416Pk
      dnc7Z0NnOR06Ta+39xPPnxreAqn5dYYmljl+bICgz/OxJ/0wt0BCCFaqK/xy7Zf8ePnHXMpc
      ot3VzovtL/KDrh/wdOTpxz4ZFEKwXlvnYuYi51PneSf5DiP5ESRJ4mzoLM+3PM/zLc9zMnQS
      v83Pz1d/zp+N/hkxNca/2v+v+DeH/s22QnkcaKZGpp5hrjzHzfxNJgoTjBXGGC+Os66uo0gK
      XZ4ujviPcDZ8luOB4xwLHqPd1U5CTfB3S3/Hy6svM1GcoNfTy4vtL/J73b/HmdCZR96j3sIU
      JnktD2zMzeyyHZtku+s29UExhEG6lmamNMP1/HWuZa9xNXeVxfIiWS1LxBHhaOAog+FBzobP
      cjZ0dksUpjAp6SUKWoFULUWyniRWjZGoJUioicYCMOpV3v3HN1lJFjl66gyDJ45sa9yDCmBd
      XeeV2Cv8eOnHfJD+gC5PF99q/RY/6PoBTzU99dguxIMghCBZS3Ile4V3k+/yXuo9buZv4pAd
      dLo7mSnN8C/3/Uv+w5H/QIf7s7Mryy1hjORHtnrKscIYs+VZ0rU0PpsP1VQ55DvE97u+z3c7
      vstAYOCR3aM/SYQQlPQSq9VVruWuMZQdYqwwxmhhlFg1RtgRptXVSq6eo6SXKBtlJCT8Nj9+
      u5+oI0qzs3mbN8JKGd58/zL7Dx1lf3cbdvv2MUA/TgA3cjf4z+P/mTcSb9DmauO7nd/lB50/
      4GTo5Gf2QgghSNfTXM1eZbw4zrdav8WRwPadwGeNqlElWUsyX56nxdnCQd/BT9Tz7kbqZp24
      Gme8ME5MjRG0B2l2NhN1RAk7wnhtXtyKe2vu13AOEJu6zFwlTC27yjee/9p9D/hxAvhN/Ddc
      SF3ge53f43jw+Ge20VvsTRoKYPjKB1TqApcvzOCpo/ctwHon2GI30/AWSAiTmdl52tta8fl8
      9y3AEoDFbqZhqy3HJ3nv2iTXrw/vtD0WFjtK49CIkT7anDWEzYNuWPFBLT6/NBRANb2A5oyy
      Mj/JB5eHdtomC4sdo6EAXIEWUstTSO4wfZ1tO22ThcWO0TguUCnF/hNPs6+jie7uz87Cj4XF
      o6bhCODwtUJlndWYtQukxeebhiNAvZRkZGqJni6t0c8WFp8bGgrA6Wviy0+fJVOu7bQ9FhY7
      SuPIcNUCk3OLiE/g4mxhsZu4ZwQQwuTipSvodWtl1+Lzzz0CkCSZL5w7y7rUQWV99knYZGGx
      YzReBwi1MX31XYpq41sgU6+Tylhh0y12Pw2d4RCCSrWKw+HAZrt3njw7NYnTLuGM9BL1Oyxn
      OItdS8OnQOXUHD96/QZfONrHqdNn7k2g2IlGvaQqdUyvjVqthiRJSJK0FSPoYT/DhmfpnZ9l
      Wb7L2/RhP996T/nOz4qiYBjGI/3c6Fg7WR+3sOri4dtGQwE4PGEoJphecnP0hIn9IyESI0Ev
      cyt5Dh1uQZbA5XJZI4DFrqRhq63l47T1n8RUc3xw6V5nuFC0laMDh7BZcUEtdjkNBeCJ9uI2
      S3T0HqK/p3OnbbKw2DEaCqBezbO0liCdydDZaTnDWXx+aSgAoev07e9HafAEyMLi80RDAch2
      D0Kr0dfbs9P2WFjsKI13iBE6mWyOUtHaJdLi801DAdgcHtx2k7GJ6Z22x8JiR2m4EqzXa9QM
      gcfl/NigqVZYFIvdTON1gOwSiaLJ6MjNnbbHwmJHaRwWpamTueH3KGtWr27x+abh+wA3rl2h
      UCqj2/JPwiYLix2j4fsAB/d1Uqw7WElbLs8Wn28a3uM4vU2sp7OcONC70/ZYWOwoDQWgFtZZ
      iSeYXVzaaXssLHaUhr4OrkAr33j2HKmSFRXC4vPNvZNg0+RXv/4VFU3C4du5fbAsLJ4E944A
      wqRSLlNQDTyPaEtOC4vPKg13iDEMHSE2ngjZbPffR9daCbbYzdzTaiVJwmazY7fbmZ6efBI2
      WVjsGA0nwVo1xz++cxFdmASiHXQ2h3baLguLHWEbX6A1/F0DeNxu1hbu9QhVywVm5+aoacZj
      N9DC4nHS2B3a10Jidpie/iMcPnLv/riLCwtIigO7zbrvt9jdNN4l0jT44B9fZWihwJ/88Q/v
      +EGwsrRAc0cP1ewKeT1IV6v/rvgtFha7iYYCUAspplfSKLLE0SOH7smUXo+RSOfoP3gYhyJZ
      T4Esdi0NF8L+4TevolUKHPrK/9EwU6SlnUhL+0b6BpEVLSx2C/d225LEucGn8IWaSazMPwGT
      LCx2jsbBcTe5Mx7j/dIYhmHNASx2JfcN/POgjVqW5U8sANM0P9X8wcr/yfPvZtsfVf77jgAP
      wq3sn1QADzLKWPkfT/7dbPujyv+pH91shLKG60NXqH+CLcVuncD81CjpQgWAfDpOVb8jkalT
      qt52zS6XynflT6wuMTE5g2Y8vAEbxxdMjY+wtBrfNl06k9k2/9zUONPT8xTK5YZp7sQ0dCpV
      9a78qbUV1K01RYOJ0VFq+oMtMmrlHGvxDMnVWWaXU9umyyTXWFq7e9tbSZJYWZhmfHyURLp4
      12/ldIKZ5Rj36x0lSWJhdpLxsVHS+cpHfhWsrKyCoXH9+jBLq4mG+VcW55iYmqKuN7525fL2
      sakkSSK2Ms8HH1ykVK3fx9LGFNOJ+98CPShatYDH7ye2FieXitHcHCWRzBL0uinXVJxOF4Vc
      FlWDcNiPrqqYNidnThzdKEAYGLKDbHKdXLxKLp8nGCyQyWWx2e2Eg2E0CTLJLP5AALssOHTo
      4Nbx8yWVw4cPsTw/TaFYQrZ70Kt5iqaTliYv2XiauqnjC4XxOmwoMvTuP8RW1PdaFuFuo6cz
      ys3hIeo48NgFxZJGKGinpDnRyymqvf3EluY5eOw0IZ976/iVSgWn301sbZUkJtVqmaaWboYv
      f0j/0QGK6RK+gA+1WqKjvY2KDn1d7Vv5a2qFemKR2Hoen8/FWiKHKcao6zoumwPJF6CaXqNU
      1XC5/ZwdPLXVc5m6TimTwG43MWQn77/1Ou6WXqiksHvDuO02bLIgk00Tae/lnTd+S6CjnzNH
      DwBQrVYAO9mVaRbXfARtdcrlGoqp42xt5te/+AXR7v1U06ucOHeOaxev8YUvf5mg17WVX7G7
      UItJfvn2dbr6j1DLLKEE2gl7HIBArdWQZYlL59+mbf9xetpvu9lLgGEIVucmuDE2zaFD+6hJ
      fjw2A0UCwzRRhIHs9rM6M0pJ8tHk1GntO0pvRzPtXd2UKoJ8bJ5lPFCKs5TR6Il6qNYMXA6F
      uuLDLdepVar0Dpwk6LYD4A96H40AYqsxNCFRySSR2BwVkNganIREV28vhUINh00jp270gMVi
      ERkwtTL5koqhlwh47ciyhGxz0NvdBXY71XwRIcm0dfYiaSVq9fpGXgncXj82SWdycga7Itjo
      zxX27+thteLEoado7eimVi/jcDooZVPkKjWire3YZVBcPhyOAJXUMEv228OO2xck5AWb38Xq
      yDR9XS0IJJrbu/A7oFytIkzwed04PX4O9vcxNT2F4nDT39bEzEyC9p5e6jWVrr79VAvr1CQJ
      pI3AA8VSGYTA7/dtNARZYV//fgr5HN2dXUiiRF0Hxe6it7ebmGTgrdVxO5yUS0UUWcbm3BCh
      ExXd1oReKmALNCMJjUjrRlDjYiZNslKntS1K1KsQD7eDuVF/sFH+vv2HqCVXqAY6yCyMIwGB
      QBPRjhby8S56u9vJOwziiQxtrWESyRSKCCOEwOb04LYrCNOgrauXjhYfC8UgNkkHHFvNXAiT
      9vYO4vE4Yd+Gm73f70ex2TDULAWbi4NHBgh5ZTzNfZTjU+R0D3aqIIEkgT8YoaulA0UvEYvH
      6e1o3rpeit3J/o4uRq6u4HM78PhDNIXBVJzMzMzjaAqCLKOrFVTJiS4kfG7fp58DwO17sSez
      JrDR5D9VCZ/C9lt5P2kZD5RPkuCx1u2nr8NPUvL25/5g9ty6fb1dxPb5EuvrtLa03JP/kQjA
      wmK3YvkvWOxpLAFY7GksAVjsaSwBWOxpLAFY7GksAVjsaSwBWOxpLAFY7Gm2BJBPJ1haSwIb
      K7vjIze2dW6rF5LMrWVYX1tBe0D/s7pa4vrwNVYT6U+15jg5PrblOFXOp5hZWP3YPKa5mT69
      wkrqtnPV8tQ0FbPxCSRTyU9h5fZUCmmuXLnC0NBVSqr20PmNepVUtgDA0sI8mmEijDrr9wll
      Pzc7va2z2S1mJ0cYm55HALVybtPGIfLlu+PDmmaF6allyukVljfrUpgmI9eHuHz5MkNDQ6Rz
      RVbWYg91XjMTNxkaGmL4xjgPGmtkcnLqoY5xi7npKTRjoxVuCWB6+AqvXbiIALRinP/xNz8i
      p234rWiatrlkvRE1Ts0lWEzkkeWNqHGmaWylEaaJaZpomr61zF2vZHntrQ84cuwEqGUMBKZp
      YhjG1gs1um4guH08czPinKZpWw0Y4IM3XuHa5EbU6ksffsj7588D3C5DsFm2jmEYmKbJr3/1
      KzRNo5KJsZopb9m6OjdH1RQYm+Wbprll8+XLlxBiw059055b56/rBmxG0NMNYyuvoesYpom+
      +XfLLuP2JY1Pj6BEehkcPIvPaftIPTQuz7ijPFkyufDBJRAm77z6MtOrWdLLE8zG8rfra7Pu
      btXD0sIcmmHedX53pjUNg9HJeQ7t6wYgtzyO6u5gcHCQgMexVf+maYJZZW5ulWo2Riyz4QEq
      yTLHTw2ytLTM4OAgkaAXRZa3rq2m6wjT3Pgr7j72LW6MTjE4OMjpkwPIt/Jpm/k225L5kbqd
      mZ3dan+6rm8dDzZEKTbP7Va7EEKgaxrzszNbArjDGU6mO2QnUdJYvnqTp54ZBCF4963X8Ycj
      ZEsGp/Y3cWUyRkQuQOgYo0PDDP6TdtanJimUqiSLNQ6FTa7GodVZwt16nDNHupgbvc7B018g
      n1wlkcnT2t3BT/7uv1OpyXzt+WeZnF0l5IZg+2ESs9cINncSaWknOTeK4QkRDkU51L+xZ3HL
      /mNkl6cRRztRhZOAq0YuvsCHI4sEnQahrqNMXHmTfYeOMz09y+88/xXW1tYYm5qlzQ5zU2Mo
      SQPNt3/DWU9ovPTSq/z+732PV155he9+97u3q0SY/O3f/DWD555mJZ7jmePdXJqI0RIJ0xWx
      MzyTxCNVaT84yLX3f8OhgeNcv3GTUyePM7sY43e+eIwLw3O4qNBz/Fn2tQXv7oqMKj/6H3+P
      ioPnv3SOmZUUHqlG28HT3Hj/txwcOMH16zc5eeoEswur/LPvfhvJ7kUxVaq5Vfad/QrxhTmK
      Zo5DTw1w/u3XcQebSaZzfPXsfv77y+/g8fvpiHgQRp1XX3uL51/4Dm67tJV2PZXlqVNHWFtb
      Y25pjYP7790b+uWXX+b73/8+v/ntq7zwu8/c8/s9SILhoWt8+XQPP724zH5fjazcRNjI0jTw
      LKWlG9g8QdbTBV743a8hbYqrXq8jSTL14ho/e22IA21u4hU7rR4Nd/txFm68R/+ho8wvLPCN
      F14EoFZM8cb7V2kNe5F8rSxPXuXb/9sPuPjWqxw6M8i1q6OEXAJ/9zFqiSk0m4+19dtu43fN
      AU6cO8vNK1fJ1iWibhlhaMzOLyCERLGQ49qNKb7+/Fc4erj/jkZikEiso5uQiK+BJHNw4Bin
      Th6mkNkYqm/5/Ld09FJOrlIxQBNO/vCP/5Ds6iJnn36OLz73LAtTY0SawlSrVRSbnaZoBLVa
      RVaUO26bFAJOifnJMVr3HwNgdGKKZ559li9++cvMjd/A5Qtx8tQpIn43bn8TPT3dnDp2BFmC
      /kPHOHfuJLnUZiVIdtoDCrH4Eq5w9z0vWLR29nHy1CkkXWX4+iRfff7LnD19nJGbM3z5a1/i
      i88+x/TYDdz+MCdPnqSpqYmTJ0/hUATTI8NITg8ur5f1+K13DQRTozcYunqNSuMXPDgAABDj
      SURBVF3HtAf44z/6v1hbmOfp577Ec198iunxCdy+MCdOniTStFGuS7ldA01eO8NjC+w/fBz0
      InnVIOyBvAqDZ88QsGsUVI1Aaw//5//+z1DMGj9/6aec/fLzuO0bl7xQ1TbSShq2pla6e3o4
      tL9ny4P31i1JSdXZHsHU2E2mF1a2UwK9+w9zeqCfUEs3Jwf2kcnnmZqaByFQi0VulV4pZJiY
      mGB6YWN07+o7wMkTA4QjrZw8dph8voDDF+TkqVOc6mthMbnRtpYnJzlw9mnOPfMcicUpnj55
      kKHRGQqaQmVliip2HF4vqViMeKbMM08N0t1224v0LgEorjBaZgp3uHPDfEUhHIpw6MgAp08M
      0NUSYHxmhXj89ssNpl4nka2wr7ttW4fF/cdOMX75PMVKlXKlgiRBU3MURZLo6upkamqa1blp
      wm3dBCJtnDl1nKuXL+HwBhk8c4bRG0N3zRtOHN3Hy69f4ej+NgD2dbUxNjnLysw4kc59914m
      06BcVbedezz7lef4q//nb3nm6dPbpNjg4L42bo7NkVpP0tfTwuj4PIvTo7R272+YvqO7F5vD
      xcCRAfq62za/lTh07CSDZ8/gcdhobo4iSdDV2crU1DzzM9O0dt3bC9/Jgd52LtxcoCXowi3X
      qQgHsmRDMarkikWyJQ2f00Y00rzRoBUn/+TFF7jw9ttbLw3Jpk6+WCKjaviUe5+FHDhygsHB
      QXwuG5IEhUySZPajL/xIHDp6goN9Xfe1924UmiIh9h08zJkzJ7gVetkTCHPkyBEO9HZvm9Oo
      16hUKkwur9MV9QPQ2tPF4uQUqbV53OFW2g+cZOq9X9DWf5xoRzdOm50jh45wsL8HxayRzhdJ
      JO94cUhsUsxlRN0QIpdKiGrdFPlMStQNIepqSYyMjIh8qSpM0xRL8zMiFouLXKkq8pmM0IUQ
      6cSqmF+OiUwmI9RyQZRVTehaVeQL5VvFi7paFqMjN0UykxdCmCKTyW79loyviLnFVWEKISrF
      nBgZGROVmia0WkWMjY6IXLGylTaTyQghTBGPJ4QQQqRTKSGEEOuxZTG/tCZMU4hsJiNMIUQu
      mxWGaYpqKSfGp2ZFrVIUxUpdCKMuMrmiKGSzom6awjR18ctf/kqYprjrOKZpikw2u2nvxnET
      q4tibmlNCNMU8ZUFsbiauMOuj/41xfrakpicnhfGZuHVYl6UqvWNg5i6yGRzm0c0RXxlUSyu
      xO9T3q1sNbG8GhNCCFEuZEQqWxRCCKFrqhgfGxOlak0Ymiqym/Wfz2WFbpiilE+L4uaxDU0V
      46OjW7bcWX69UhD5cm3r/9lkTMwurGzWSV1kswVRr27W5R2kUumtc8lkskKvlUW+VBW6Whb5
      kio0tSzyZXXDztGRLbuFEGJhdlLcuHFDjI5NibqmilyhLPS6KnLFstDrVZEvlsUvfv5TMT46
      KvKl6l02Z1NxMTW7KAzTFKZpit/8+hWhasZGmmRMjE1MC003Ns55bFzE15NCNzauh+UODcxN
      3MTf1k9zyPOkTbG4D7Ozs/T39983TTK2RFGzs7+n/b7pbmEJwGJPYy2EWexpLAFY7GksAVjs
      aSwBWOxpLAFY7GksAVjsaSwBWOxpLAFY7GksAVjsaSwBWOxpLAFY7GksAVjsaSwBWOxpLAFY
      7GksAVjsaSwBWOxpHqkAVFX9+ESfEWq12q7a5X431e1usvWRCkDTHj7Q05Pidqyj3cFuq9vd
      wiO/BdLUEjPzyx+brlousxmbCL2motbuDr8xPz3B+MTUPVufphJrJDP5hmXWq5X7bpWaTK43
      /F5Xy4yPj5PLpVhPf/xWp40wtAqZzO2oc5papFB++K07AVKJVcYmprbq50GIrSwyO79EosE5
      lhps37qeTILQmZoYZznWuF4aoVWL3DdSSgNq5TzjExMUK3dHmStlUyzHEhRLH91idXuEUWd8
      9CaJ9EZYlMnxm0xOz2Fu1lU+l0bVNgORmRrF8t2jkaEWyFduC/SR7BJ5J+vxBLW6IJ9aZXat
      QFvITbqsEQk4yWTzBAMB8pUafpuDYLPK1MQMQZ+bvOag2QepXJUzZ8+g1g08LpnZyWkUrxu9
      mEfYXWTX1+jq7mFobopQKEy2WKKjJcJ6pkRbkx9sCqlUhnDQSyxRJNQUQtaKlA07LptJOhHD
      G2kn7L/9AvzC0jIHDx/BpmeYXEixODdBU0s7WiGB7GmiVsogO324pDqpskHUa8fh85NYWePg
      sZMEfS4MXaVQNPG5TG6MTtDaGiWeLBGJBKkU8jh9IRyKCUiY9Qqy00cmGccbjlLJZAmGfBTr
      gqNHDlMtlajVN6LEKTZl+8reQqdQ1jh8+ABT01PUillimTLNQR+y2w9GnbXFOQIt7WTWVrD7
      o5h6lZYmH4VSlWiHl8WFRWQJdK1GqVTGHWzCrJXweP2kcyWCoRDZxBIu2aDs6eXckQcPhbK0
      EuPw4SNU0ssML2i0BhUWYzk8ehlnc4SpiRn6uqLUceCS62QyeewuF9GmCKtrq0SjLRSKBQLh
      Znrbw+QLJQIRDQHoJrhEndjqMqurawTCYVpabIzPTOAPh1hcLXCwJ8xaIkdXRwv55CrBvjME
      PRtbpT7aEUAIkuk0eilDTpWRjTK67EQr50jnK0RCftLJLE3RZkytznoyBXodHB4iTWHS6Qw+
      n3fjktbreMOtBDwuertbMSUHGAaRtg48NgNTduL2enHLBhVNQqgl8uUqxVKJpkiUSrlAtL0b
      u6STzRbIZtMABAIB0un0XWZ7nXbWUxmqqoZeLVDWJFy2OrmSTiadxh+O4nM5SGey+L1ebE4P
      Xe2t+H1u0pksur7RJVarFRLxBLIsyOY37FDLBWwuH3pdpVIukcpkkB1u2iM+SlUdl8tOONpG
      c3MEvVpErRuUazpaMUUqu/0m0XejoNUr5PIFBGzWow9JdtDT2U6tXsNAwStrFGrijvNX6N3X
      x+L8HNVyiVQ6g4lC2O+kWNOJRiMU0ut4m5qpVcs0NbfT3dlGUzj0UM3CZZdJpjNU1Ro9+/aR
      SWco57L4w8307ttHa0uUUChIOZdBV5y0R0K0dXaQS66DzY1Nkmjv3ods1ijlM3g8XuYWNwJo
      1SpFsqU6+WwKt9eHLEnkM0mEBNW6REukiWxmoz5K1SrRaNNdtj3SqBDFQgGH04XDrlCr1SiU
      KoSDPnKFCpGwn3S2QDRyq6H7kSWTQqlKMBCgUCjg87oolGtEm8LU6zWcTidavY7N4aBcyIHN
      hV2RcDjspJNJ/KEw+VyOcChINl8kHAwg22xk0mmamsIYpgTCoFIqoDi9OGwyWq2KqTiRhYHH
      40GWZUCQTq7jC4YBmUohi8sfolLI4fH7UWQFEAijTkk18Hvd2O020qkUHpeTiqEQCbiIx9fx
      B4NUqyoBn5dcPk8k2ky5kMXhCaCrJXRseN1OHA47uUwau9uHXVGQJZNsvkw00kStWkLVBS6n
      E5dzY6/dYrGI3+/ftu7raoVCuYbf50HGJFdSCfq92B0O6rUahlbDkOzUKiW8/gCyBE6Hg1Ry
      HU8gjFmvoAmFXDKOv6mFajmH3eGhtSVKNp3EH4oiTH3jvDM5opGmbW35qK1CmKSSSfyBIHaH
      C7Wcp25IeN1ObE4HxWwWm8NBtaYT8HmQEEiKAgKymTSBYBjFpmAaxsbx0xk8Xi8et5tarbax
      oTaQy+UJhYIokkQuX8AfCFIpFvD6vOQKZSIhP5lcnlBTBPtmMLBHK4CPuUifJUql0h0C+Oyz
      m+p2N9n6RK5+KZdmcSWGAJLxVcbGxsgV754IVctl7p7OCsq3JnOmRql694TqUSKEYHZqjEQq
      u/XdrZ3VYSPUomHe3W/Uq2U0cyOdVi2SLVXvygNgGjpV9fHZ3YhyqYhpaiRT2Y3PH+nuyg0m
      yI+bXHqdsbGxhg8zDK2OWrv3KVKxWMTQVDK5wj31Cgbl8id79PrIJ8EPQmJ9HVWXMWmnua2T
      bLGMW9aZmBinpbWVRDyJDQNVSLS1REiup4i0diDpGom1FQLBEIbdTXJ1Eae/iXI2juQM4KSO
      7AnR2Rr91Daaso1cKoFd1EhkSkiyoAeDxeU1fE7BfN7OkXYPuYpOk8/B8vwC+wefJZ1I4LAr
      qEJB0jXS6zGE3YtDqiOwo5saXm+QfGadQDhCJpPB5/VQrZn09/c+8h6pnEuTzynEC1WCThmP
      M0O+qhMJeKhoYGoVPN4AtXIOHAFQ89icHrKlMgcOHMJpkz7+IA9JKNLCejpPyKswMT5NJBog
      nS7Q3hpmcWGZcGs7lUKOcCRCKpmir/8ghfQ6BbuDbEnDZRPk0uuopg2/S8aQJWpFHV/YRymX
      xeVvoppP4PIEKFRqHDqwH0VufB5PZATQDZ1yPk2uUN36Lr6yRE03ia2u0N6zH4/bS19nC9l8
      gY7uXtRinnw6jm7z0+Szk81kKFTqrKyu4XD7sMkCWVGoVh5NjxZbmKZsKCwuLmLWVOom5PN5
      tHKGqnDS1dnB4uICNVUlW6rS07kR/Dbid5AoGcj1EordTl1yoqllKjWD1miIuZlZjHqBRLaK
      Wi6huPz4XA70egX9QXeGeAiizWFml9aJ+pwYQqZYruFRBKlskc7ONmJLsxiKzML8GmpNpW7K
      REJ+FKFRqT3k886HRNdUfMEo1WKBXHKZ+Xie/n095JMr5Ks6arWGIgkqao1wOMByIkfAYSAp
      Dqp1E7tRI1tWaW+NsjQ/i9CqrCRzqKqKkO0E/W5MrU7d2L5ilT//8z//80d1QvV6HafT+bHp
      hKHj8Pjw+/047TYUm0IkGqVUqtDd00sytkog3ITH48bhcOJ2uXA47Hh8QSS9hC478Pn9GPUa
      kWgzoYAfj9uNodexOT34fR8f47Ner2O32+8Jh36LcLSFgNtBU1OYuiHR2hLF7bChC4Xmtk7K
      uRSdbc2Ykp3moId0USUaacLtcaMAPq+bYKQVUSvi8IaIhII4nS5a2ttBsmGXdALhKEG/D0Uy
      UTVBJBxiG3MeuG4/imRzYVcgGg5gc/nxuSSqhkJbcxSXy0k40oJsmvh9LlweP03hIHa7svF4
      NBrBtk3PeT8exFZFseF2e3A4XcjoSA4PnW1R4skMXT19mLUKoaYwqqrSFIngcbuRJZmw34Mr
      0IQDDdPuoSUSxuV0EWluA1nGbQNfMEwo4MemyJSrGpFIE/I2FWtNgq1J8CNnN9n6SOcAu8kH
      pFqtYprmtiPAZ41K5cFXS580u8nWRyoAl8u1a5QvSdKuGgGAXVO3sHts3T1X38LiMWAJwGJP
      YwnAYk9jCcBiT2MJwGJP88BPgYQwmbpxidD+QUpr05Q0iUhTAI8iEO4mIgFrgzmL3ccDC0CS
      ZDrbWykYJpLNQ4vNJF0qEC9rDJ7uxDAMDMPY8o3/rHPLXtPc/g2yzxK7rW53i60PPgKYBkvL
      a6hemQBlEppEpClIRxCSuRItYT+KomCzPRH/uodGURQURdk16wC7rW53i60PPgLICkcHn3uc
      tlhY7Di7o/uzsHhMWAKw2NNYArDY01gCsNjTWAKw2NNYArDY01gCsNjTNBSAml/nwsUh8g8R
      s9HCYjfSUAB2t59aLsYvfv4Lhm5O7rRNFhY7RsOV4GouQcuhp/j6t1rRtE8W4djCYjfQcARQ
      HE7Ov/Fr3nzvIna7Y6dtsrDYMRoKQJYlnC4nlUcUZMrC4rNKQwGYdZWOrt6dtsXCYse5Zw4g
      hMm1kWnQBcFg5EnYZGGxYzQYASSOnzxONp0mly/svEUWFjvIPQKQJAmpmkXyt+B4DJGBLSw+
      S/z/kGt6cy0awS4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (per Quarter)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee Rate of Change in %' width='192'>
      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
      xuEADkY0/w8CkZAX4Q0OZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average salary of Polytechnic Graduates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average salary of University Graduates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Basic Wage Change by Industry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparing Govt. Expenditure vs Poly/Uni Salary' width='192'>
      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
      rKCGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparing Gross Domestic Product against the Percentage of GDP composition and GDP per industry' width='192'>
      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
      YyHs/wFnCkEdSDm9UAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparing Poly &amp; Uni Courses' width='192'>
      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
      iPBY/x9e61e0IdXcgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison between Poly &amp; Uni Salary' width='192'>
      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
      /xQHoihvrOVpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison of employment rate between Uni and Poly Graduates ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V3RcR5qg+aX3DibhPUmAIEEHUqREiZQpSV2SykmqKlVX9+zMnnmY2j27
      L7tPu3NOz9mZ03NOd0/1dLUrVVVXt9TqcnKUISU6UTQgCBIA4b1NeGQmkN7nvfuQIECQSRIU
      ARAi7ncOicx7b0T8eSP+MH/8ESETRVFEQmKTIn/YAkhIPEwkBZDY1EgKILGpWaYAEZ+LN//h
      b3nz5//I+HxkVRP6u3/4+weOY87RxX/+s/9K1/DUV4whwl/+5c8eWI5bmRzqos/hvPeDiQDn
      6xrvePsv/sdfPHgaK+TU+28xFUh9fvvtt267f/6T39I+OncfMXr4q794c/HbX/23/4c3f/6P
      /NsHn9/25PF//Rld0+nL13BXM3/7t3/HP/7jP6zo9440neW9s3d+pwABp4PGrqG095Q3f/nX
      X/2C5//k/6DcbkIURXparlDX3MMLr3wXbWSWax2DzLjm2bG1iK7BSd544wc0nD+Fc9ZJ3ra9
      HN67hY/f/wB3WOS7r72Oo6MRrdWCJ6pi3+49ICb4/KMPmPYn+O5r38fj6ORMXTNPv/AKudoI
      dS39TI2N8ty3Xqco2wyiwJeff8y4N8n3Xv0u7/zLL4gks2Fh3D4x1MXJc1d45qXvYBO91LX0
      MDM7R832Mjp6R/nBG29wve4ss85ZMkp28vTBytQPFZOc/vQYzrCCV7/3beounOO5557j+uWL
      FG4t58rVVpwzs+yq2U5bRy/f+8EbJD3jfHLyHIeeeYkiY3yZrB++8wscsWze+OMfsb+6nL7W
      BpJaKy5PFIvMQ0NrL4eefpGQ4yq/ePsUc/4g33xyFx9++BGFVbU8daAmJVcyyifv/w5NdgUv
      HDlA29ULNPWM873XXue9G2m88T2C836eOlDJh6cbee1bz1BXd5Xd1WV8+NEJqmqf4kDNFi6f
      PcGQK8rrr32P1oZLBINenGEVP/jOi8iAmYlRtiYWCtHoKAGnY/n7r9iG1qJPFaD5GT786Dha
      WwGvfvtF6i+cxe+ZRzDm8/JzT3D1wkm6HGPEbypLIVHL//2ffsLf/Lc/w/XKC3ScXcrH1G+N
      cPZcE889c5hLFy7w+JEjKJIhfvXOx/yX//ZnqOQyEokErQ2XF8tQ0jVA59AUz730XcrsBj45
      9iGOoQFya79Jw+XL1D7xBJ0Nl6mofYLmLz6md8zNi698l6sf/45TnXMEf/QjdpXY+OjEaWqf
      eoHtxbblLcB0IEG53ZSSLzDF70818ydvvMqvf/kLnGP9zAlmykwRxkIm7LJZOse9XLp0mZdf
      /T4XPvodvgSUbt1OrjbM74+fp63hS949cZF8eyb1dXWEZwc42zLGc08/hUII8C+/P8W/+5M3
      eOfXv8TvHKNrws+3n9nDsVOXAOi+8jnjgp0XDpbzT28f4/Dhp3jmm9+jujwfiPNPb73LH//4
      h/zhnbfxTA0zFVKzPVdBn0tGiTFMy8Asly7W8eK3X6fp8z/gWqh0rp87htdQztEaO//8+89x
      dF5j2BXk1MV6VMFpuqdCHN6ey5U+F3tLjFxuGeDNf3qLH/zxjzn2h3cI3CLrDbn2V5cD0N/W
      wNvvniA/344tO4+9u3fwL7/+Zw4efpKqHbV874+O8tav3uTwN1+j7/JxZoLJlGCCyNFvfo/B
      K5/SN9DLJ/UDvP7SE7z9b+8upbGzmsuXvmC44xqNrT3MTfbS6fDyqzd/yTdf+xGXj79PX3sd
      rbNyntudx28//pKGS+fZUvsUvt5rzEbvVEsu/03D3U1MLvQC5AoVNbv3MNH+Bc1Dc1z88jyH
      nn2J5itf4Bxo5EKPlz/54XdQ3BRf0OviWkM9UwGYaFyejwAotLTUncYXDlB3rQ0FkJifQF9Q
      SdQ9xl//5X+nrm1wWRmyF5RQU1XKr//lXznzwdvoSg/w4pEDADRcriMBtDVcJpCAvKJSdmzJ
      5Z/f+j1PHj5M7ZPPc/Tgbt785a957Uc/5vj7v6W3+cJyBcg1Khly+gGIR/wYrdlo9CZUpKoK
      m82GSq3CarGg0WoQRVDrjOg0Gkx6LWM9TRw/34TFaiUWjQEq/uNP/hNFuZkAaLK28pMfvcCx
      3/yalq4BVEYrao0erQoEICs7G71Oiyikanif10tubi42ey6RgPeWLIszMTTIW2+9Q1ZBCQBW
      mxW1So3VakWjUQOg0uoxaDVYjDoSQiqkz5eKNys3l5DPy3e/+xLv/P1fkVd5EACL1YZGrcJi
      taLRaACYnRjinbfewpZVQOIWWWUyGbdak//0P/6EiqIs/umX/0RSpkanUoBMhmzhMe+ck4/e
      /Q0JrY1ENMaCsJj1GiwGHT7PHAM9Hfzm/ZOUlpUsS6M0Q8fnbbP8yQvb+Nd3z3Dg8UPMOad5
      9zdvo7VZcc566b5+hY/Pt1GWZwOFBnumBa1We6PxRK/X4fV6SUY9yNUWSPP+b/DFR7+jb8qL
      dSFf1TojNpMejVaNzzNPYUkpSpXqtgGlQqXjP/+X/5eIL30+fvuFx/npX/wP9jz1IgBKWwHB
      sR40mUW8+MQunPP+pTJkEfjFW++j0FpQymLMz/soLS1CpVKlIhPhhtQJ3wT/9NvjqA0WFGIM
      mVzGjbvOaQe/efstbNZcSh97YUlmURT5wb/7X/j0nV/ws7/5G8YiWZQZvPzPn/6Ux559GaXW
      iFGrRGu0odfI0Zsz0cgFfM5x/v5nf41lay352bkQcjIw7iLbZsSWnYMYjxKNRrHn5BBwj/HJ
      5+eIKozkF1awr8zA//yfP6X6sWeRK7XYjFriopJsm5FoNMquwy/Sd+kYP/v5b/juq6+g1psx
      apVEo1GiUQXf//5LhCJR5DIZMrUei16z+IzWaEOrFAnOTfEPf/c3yAt2YVPEycnJZv8zr3D9
      5G/4u18f43vffRF9TiUB5xjPHDmAIFOTZdEjU+uxGbWLv/uH3/8+gVAEQS5DcYusZdv30Hr+
      I6609hKNRjHaslGKcaLRJCWFdtra2rFl24lixq718odPzvD6D98gEvCTSCQBkWg0ypb8LH7+
      D3+L37SFmpo9PLu3jFgsjlzGsjQOHKzFH05SUVXD2ISHyjwdP3zjBwT8QRJJBVUHDrO9wEI8
      ngCZjGx7DvFoFFu2fTE/nnnl+5z5/Zv89Ge/5NuvvoZ4y2+6kb/RaJTSbZWM9HQQiCvQKkXs
      OTlEo1Fy7DkUbj/AVNtZ/vmt97HmZC3kTZQtVTXs2LEdlUy8LR9vvJ/i3U8y7Rjn8V3FqXAJ
      BT9+/Tl++ld/xcmrvWwpzF4qQ2gozFDT1tGDPSeHIy++zLu/+Ckn69ux6DXs2l7Mz//uTSY8
      ERQqPXYDtHcNYM/Jxpy/FW9fA2cuNfHGD17HHwyTVMiY6mtHdmMiLBQK0dLSwv3y/nvv89rr
      r913uPXig/fe49XXX7/rM3VnPiaoKeCFp2rXSSoJgM/f/1csWx7n8d1bHpoMMmkmWGIzI80D
      SGxqJAWQ2NRICiCxqZEUQGJTIymAxKZmUQEmh7q41NBIY2PjwgTEvZnubWZ0LrbqQrnd7hU9
      N+92I6wwTjER5szpM0w65wHoam2msbGR+ivXiAu3GsJi1Dc0r1zgW0PPjdLcm/JXingmcThT
      TjdD/X0LU4o3EfEs81MJ+dxcvXqVhoYG/JHbnr6NwHTvPX12Iv55grGVvqnNxaICTA13U1C5
      n/3795NtM+F2uxnu78Y572eorwvnvB8hFmRicpK2zl4EESKB1IsVhQSdba3M+8OEvG4CCxnn
      dDpxu91MjA4yPu1mYmSA8ZlU4Z6fnaS7fwRIFfjpsWGGx6YIet389ve/o6mpdbGwuN1uXFNj
      +CNxRgZ6FsIlOPb739LQ1ITbGyQS8NLa3knypsLscU3R0TOACHRfPcuwc8kPoHtgmP3797Ov
      2s6ZL1tIREO0trQSjiUBgTn3PLOzswAIsSBubwiAWCRAS3MzLm8AEHA5nXS2t+ILpSqCqbFh
      Ojs7mfen3AgininGFhRguL+fBOB2u+jv7sDlCYDWSFlO5oJUAqfOXuLAY49x8LEDaBWp3x7y
      zTHj9uKcdNDStvQbJ0YH6erswheM4XQ6F98VsOzZhjPHOHm+gfFpN0I8QmtLK6FYagKuv7ud
      kfHpByhCX2+WdYG6Wptoampi3h/hi9PHseWVcvqTd8nIL+fyxXPE5kY5f91Beb6Zz89cXAx3
      6rPjFG2pouHcSRIkOP1FHYngLA0tA9R9eQaVKZsrX55AZbbTfOUS4TkHDT3T2PVRzl/t5PwX
      pxE0FnquN6CyZFJWWkpt7e5FT71P3n2bC1fbIB5Bl5FPFk4udkxTXFrG3tpaMs1qTp29RGV5
      AZ+d+gKA8JyDurYxSnMMnD5XT3l5OeXbqsnPti17ATMTM9iybRw/8RlV1VWc/PyzxXujHVcZ
      coVounSeiCwlTSAQZseu3Vz64gwQ46Njx6mo3M6XZ04x1HaFcb+M8uL8u7704x9/RG7pVuou
      nAUCNFzpSN0IToExj6h/noa6C0x5Ilw4e4KPPzuHCIgKLdu35PP56fN0N9XhimkoKcwB4ML5
      8wBcabgCtzxbUlxMVc1eCnMzOXnyFJXbKzn12WcMN58joCvCoFGkkXJzsEwBqnfXUltbi82k
      RW/OxGrUYcnKwWrUolSmXlJOTg5GWx5i1LcYLokSs15DWbYOZzITedjFlStNHDr8GEqtEXuG
      Gb0pA3uGGaVSyezIAP5wmOEpPxadAo3eTL49A7VSlbZLY80p5dXvvEzMM05Tcyujk7P4vEvp
      E5tjYnqeju4BbLZUAXeODlJStROjLY9EOE0XIR6hsbERwVzCoZp8lBozGrUGnVK22PLsP/Is
      1+vOMxsWKTCnfIu62pu5fv060y4PALkFRWjVapQKGT3jbvZXly76IQEoFArisVTrkBAE5ECm
      PQ+TToNSucwZF7RmFLEgWpONykJTquVQmfjhD18jxyTjUn0D7V2DBIMBhqc97N5auOirdDNi
      zLfs2ZuZnpqgo70Dk9VGUfUB/KNtdHb3kdik06FpW4C7jQFGBrq5fPEc+eXbF69l2wxcabhK
      3xyUZih56sBW6vs9ZOnT1ywFVXuQBVJNtS0j47b7RrWca9c7FpVBrU4VqFgkQhIZsoXrZYV2
      Ll2qxxMzU2TXIgK2jJQCFGzfx1DjOa7UX8JemGaqXaVl//79lBbkAGoMqjhXr10DrXmx5ZEp
      9ZhxocsqWwwWCoWRy+WI3F5i9mwt4sSZ87R19S9eMxVsJzDaQuO1qyQ1ZtS3hboJhQm7RaS+
      voGOgUmsRg1qtRoZICbjRGOJlGOXCDvK8jh57iId3QMAWA0ampqv45icue3Z7OIyuhsvMeX0
      UFZSREIQsdls+LxetDodXpeT6CYdItyXK0Rkuou6cR3P7S+763Pu0Q4G/CYO7ix5YAEfNuc+
      P8Gh519Ct3l7CY8096UAQiyINyrHZtLd5akEfX0Otm0rXwXxHi7+eSeBhJK8W8YNEo8OkjOc
      xKZGmgiT2NQo73ZzfHycwsLCFUWUTCYRBAGZTHbvh9cBURQ3jCywseSRZFnirgqg1+uXfY9H
      AoxOzVFRnENPTz/5pVuZnx5FY8okz56azFEoNsZoMZFI3G5mfIhsJHkkWZa4axdodnZm2fck
      SsREmEnHOKVVO3CNd5NU2Aj5PWsqpITEWpFW9U6//ysmkzkoZQJVVUv2fq1WC4BGJcfv95NA
      jRgLgXBvnxUJiY1I2hbg2ZdeI0OvIMNmXXbd45pBEEBlzSXmm6di63ayrWoKSkrXQ1YJiVUn
      bQuQjIUYn5ohOyd32XVrVg7WrJTvicWYmuTKtOetsYgSEmtH+jGAKFK9vRqtTp/2toTEo0Ja
      BRBFEZcnwO4dlestj4TEupJWAeRaKxWFGXh8K1sYIyHxdSWtArR29uCeHqWrq3u95ZGQWFfS
      DoL9rkkiSRVGs3m95ZGQWFdW1RkumUxKM8F3YCPJI8myRNqU//CL/46m4hkKs8zU7q5eb5kk
      JNaNtC1A2DtD76gTe24B+faV+8JLLcCd2UjySLIskX4eIOLBE1fT0dq0zuJISKwvaVVPl1WK
      0H4BW3b63Q1GBvsI+H1k5tgZdHioqiwjy2paU0ElJNaCtF2gRCRAQmlEiAbRGwy3BZoaGyEQ
      9hKLm1EqoogKLVvLizbUegBBEJDLN856n40kjyTLEmlbgOsXP6XbaybDrOOVF5657b7RaGTO
      G6CgKIPpqUl0et1i318aA6RnI8kjybJE2pRr9h1i6Hw7Go02bSCTLYsdtiwArBbL2kknIbHG
      3MEZLkkwuLrnBEtIbETStgDazFJqqjxsqfj6b20iIXE30rYA4Zk+2h0uWlqvr7c8EhLrSloF
      0GZXoPWN4Iur1lseCYl1JW0XKOYZJ2/7YcoLbt+3U0LiUSL9ghghjtfnl9YDSDzypG0BBLme
      qK+T2dt33t7URGMJwrEE4WicUCROKJogEosTiiQIRmK3XE8QisQJR+MLB1qImPUarCYdGWYd
      GSYdGWYtGSYdFqMWqzG9yVlibUmrABpjBrkZRgaH+hjaUkF5gX295Vo1kkmByELBvVEgQ9E4
      4ejC91iCQDhGJJoquKFonMhCAeamLdAFEXRqJVq1Er1WhU6jQq9Rol34a9ZryM0w3nRdiV6j
      Qq9RoVDIiccThGNJ5v1h3L4w8/4w/eNzzPsjzPvD+EPRxXRMOnVKScw6LAYN2VYDFoOGDLPu
      HhsTS9wvaV0hon4XXza088ThwwQ9LnLz7n7iyQ0etjeoPxSle9RFY+8kQ5PzaFQK5HJ5quAu
      FEidRoVemyqkOo0KnVqJUa9Gq1ah16ae0apT91aCKAoQjyBGvIixAGLEC7Hg0vfwPGIsiJiM
      I1Npkan0yBQaUKpBqUN2469KC0otMqUGX0yGLyLDHYgzFwZPVIYnlGTOF8YbjHDjFCiDVoXN
      pCPTosNm1C62LDaTDqtRi1ye3i3lYc++3szDliWtAsS8E3zyZStqjYZv/dFzK45svRUgnkjS
      Pz5HS/807cOz6NRKdm/JYWeZnZIc84pfrBgPI0b9iFE/RH2Ln5cKtQ8WCrcY9ac2AhNFuOH3
      pNIj05iRaUzItBZkagNoLcjUxsXvSRQoSKQ2EktGERMxSISX/sYjkIggJqMphUpEIBlP3YuF
      QIjfJncokmDOH8btj+ITDMwJZjyCAa9gxIsFdJnIjHb0RvMyRbGZtOTYjGRa9Bh1dz2yY815
      2AqQNmW5SotGqUCnv89tUYRkKgPFpZ3ixMRNp0gKCRCSCzeEZZkqJuOpQnWXeyIwFbfSOi3S
      PjiFz9HOVluC3RV2vvNUFmplEoRhCAyT9CYQEqHFgkx0qVYmuXRYXuot6JCpDanCqjEh05hB
      Y0Kmz0JuK0GmsSDTGBcKtQGZ4v4LjZhIoFjljNYDWdxohcKIyRjEIykFi0cQ4yFIRAknwBMF
      dyyBNx7HMRWiqa0Xp3ueoN+LXGNCbbaTYdaRudD1yrbqyTDpyLToH+nxSdoc+fLceWJRkGnu
      r78Z7/0MYeAkyJeiXVZY5EqQL7QQMjmym55DoV6qUWVykKe6IP5QlJYhN21OBTP6HRSWbWOX
      XeQ/bp3CUqlFplCBLAnhGUS5AmSp+EUR5DozcnMBMo0pVaBv1NLKR2t0L5PJQW1AhgHSZJlp
      4V/Rwveba11RFBADs8Tmx3E5Z3G553ANzzPscnLN42cuaSYgtyIz2lEY7dgshkXFyLToyTKn
      PmeYdHfscm1k0naB4gEnn565gsmWxTeOPn5boOGBHgI+H6bMPDw+L2ZrJuVFeavSBYrFk/Q4
      XDT3TdE/PodBq2JHWTa1lfkUZq98kf7DblpvZSPJs1JZxHgYweNAmBtGmBsk6RlnzjmN0+1h
      LqrCq85nXpGLW5aNV5WDoNAhl8kw61OD+EyLnkyznizLjc86VMrl5eNhv5e0ChByjfLJ+Rbi
      YR/Vew6yb+e2Zfe9806ck6NMeZTUHtrN5PAgW7ZsuW8FEASRSbef6/3TdAzNLlo9KgpsmPUa
      yvNtt72wlfKwX+ytbCR5HlQWURQQgy4E7zgICcSIF8EzBrEAQiKKb2oIlzdEWF+I3FYC1jLm
      5dnMxdQkEkmSgkg0nhrU+4KRlDFCm7KYGbQ3jBSqRYubQatCo1Ji0KWuGbRq1KrVGWumfQsK
      uQyVWktefsFthX/hDZBQZXD4UAG9PZ3kl25dcYK+YJTr/dO0Dk4z6fKTn2Vid0UuP/nu/ke6
      r/koIZPJkRntyI3pzeM6IDvkRpgfXWg9riO4HYgRLzKlBrk5H3luBfLqMhL6QuKoCcUEwnGB
      YFyeMlnHBSKxGN5ghGA4TjSeIBi5Mc8SJ55ILqYniCCXydCoFIuKpNcoMejUKSVasPzpNMqU
      tU9zQ7HUdxgEK0RCoWi6WwBYMuxYMlI/fvuOnXd9Wbd2aXQaJTXldl49sv2+ujQSXy/k+kzk
      +kwo2LfsupiMp7pVHgdJ1wDC/FmUYgKzkMQsJFIDeVFIWcCE5DKDCgCqhX8sN8SBjGgsQSgU
      JzSfmucJxmVEknLCogavqCEkaImIKsKihqioJihq0ytAIhojnkgQjd1uersXgiDimPFyfWCa
      lv5pkoJAVXEWB6ry+dMXdqFQbIyleBIPB5lChSKzAkVmBVQ8s6pdQz1w8x4mYmKhEk9EEcVk
      ygqZTCxaGUUhmX4MMD09iUwmRxQFcnNXNgkGcLZpkFPXhijJtbJ3ay415TkPzc68kfrcsLHk
      kWRZIq0CfPzBbwjHQaUz8eq3v7XiyEKRGHrtw51YucHDfrG3spHkkWRZIm3K+w8cJi6AXHV/
      9nLNKo3MJSTWi/RjgPA8luI9WCWjjMQjTloFGOxuwTPsIy/LyqHaXestk4TEupHWJHP46ecR
      IgGcTud6yyMhsa6srjOchMTXDOl8gHViI8kjybJE2i5QxDXEv733CafP16+3PBIS60r6Q/LU
      OmSJO7tCSEg8KqRVAKVGj8Wkv2N3xjfvpKurm1A0REdbJy6PtHuExNeT9PsCBeeJy7QIfm/a
      QF6PF5kYwTU5TTCZckpKJpMIgsAqDikeCEEQSCQS935wndhI8kiyLJFWAXoHHUT9TgwZeWkD
      +YMRSopyGZ6MsnvHVgb6h8i2VQHS9uh3YiPJI8myRForUMQzTUSbS8w7jT0n97ZAiViY0fFZ
      ykoLcYyMkFdchkYpl6xAd2EjySPJskTalDua6ujx6CjMtadVAKVaR0V5CQCl5RVrK6GExBqS
      dhBcs+8xdBoNFWWF6y2PhMS6klYBFDob2qSH4bGZ9ZZHQmJdSasAce8EhsIaIj7JF0ji0Sat
      AuiySkm6R7Bmp7cCSUg8KqR3hfBM4gzEmZyYWG95JCTWlbQKIFNqEONRQh4nzR196y2ThMS6
      kdYMqtIaMBu16CyF6fcFkpB4RPhKrhASEo8K6c2gKj15BQW8/OI30gZKxMIMjY4jIjLuGCUh
      bAz/HwmJ+yWtAgQCfvq7Wjh78UraQP19g1iVYa639aA22xgcHFlLGSUk1oy0ClDf2IrVauP5
      NDtDA+j0apz+CEIkhslkQikX1lRICYm1Iq0CxEJ+5pxTHD9zIW0gi8mMKCrZXrONkZ5OsnIl
      lwmJryertib4xnoAuXxj7P25kWSBjSWPJMsSq+aHesMNeqO4Q8PGkgU2ljySLClWVfU2Sq0C
      G0sW2FjySLIssarbokhIfN1Y9aU4YyMDTLr8ZFt0+Lx+bDk5+Lxe9Gol3oiIVqOhunL1F9E4
      p8eZcIxhsOcRDfiwZeUx1NXNY88eoa+lkaRCz56a6lVPNy2JCD0DIyREOWLUR1Khpzg3g5FJ
      N9Vbimhs6+XJxw+sjyzcnicFWytxDDmo3lLI6MQUSq2JLaXrY8gYHepn1hPEZlTj84Yor9pG
      R0cvhw/U0DswQkKQsbO6cl1k8Xvcq9sFAtDr9WTbc0ChYmdFLkOzIWp21pBMRFDKZQRDgdVO
      ciFdA2qLHbmQZOfOGqIhH0WFKW9Wg9mG2bCOJ0MqtWhVMnJychfTzsjOxahTozWYsWda108W
      bs+TUFKLWa9BazBAUiAnJ2f9ZNHpyLbnIFdqqCy2EZGl3odMqUWvkiFXrd/2+gaDfvUVwOEY
      I5mIo1Mr6Rrzsq88i/aOdjJyy9CqZOTlFax2kgvpOlCQwGIy0tHRjtmayYzLxdTkDEI8QlxY
      v75mIuhkei5KPB5bTNs5PY7L5cLpdOJyudZ1K5lb88SqDOFyuxjsHyChUBKPrd8eUI6xMZKJ
      BBqlnIGZCPrkHC6Xi5mZaUJxvvKhiF+FsdFRaQwgsbnZOOYACYmHgKQAEpsaSQEklhEKhR+2
      COuKpACbgLOffUJX61W6HS66Ozrw+v20dfYQ9s8zNjbNjY0Jo7EYf//Pv2PEsXmWwm6M7cEk
      1pSnnznCr3/7GUeqfXR7RHomvMhcnUw5iogZCsgvyiUeT/CXf/fP6HVa1GrVwxZ53ZAUYBOg
      0FqoqSojtySbkcAEGbnZRBV5qAw2ciurUADRRIJXX/4GMpmM/Fz7wxZ53ZDMoBKbGmkMILGp
      kRRAYlMjKYDEpkZSAIlNjaQAEpsaSQHWgGv1l/DNTdLSM/awRZG4B5IZdA2I+Wf5+duf8oOX
      9vPOsXPsOfA4zoFW9AUVTHZ38NIP/pSSXNvDFlOCW1qAEx8fI5YU6elo4drVBhzTbkCkpfEK
      VxpbEIFExE99fT0dPYMAjA/3c7WhnvFZz00x3T0OEGltOM+kJ7IYYmKkj+sdfQRcDs5cagKg
      r69/8f7Nn2/Q2tzMxjjrcDlqk50tpTkoRJHyqt1UZMpImotRCGGKt+xYtcIvxAJ8fOIMQjxC
      07Vr1NfX448kbssj95SD+iv1OKZSedHV1szly/UEo8mluO4Rh5CMcfLMF8vSb2s4j8MZoPf6
      JbpHl86S6GptprGxkfor14jftmtgjPqG5lX5/QBXGh7wMHdxgXlHm3iucUAUI8IIcwAAACAA
      SURBVH5xas4viqIofnjsQ7G7/qzYPekVvZPd4pn6LvH4Rx+KkYQgXjnziTgxPy9+euKcKIqi
      +P7774uL3COOvrYG8YN//aV4bWheFEVRFGJB8dTZ0+J7730qiqIonvjomBhJiuKnnx5fjPLT
      T4+LAY9LdLndYmtHtyiIouhyucTNzKVTn4izgbg455wRI/GkKCQC4rGPTy3PI19M/PDDD0VR
      FMUPP/xQnOy6LDYNuEQhHhI/+OjEYlz3iuPi2c/En/3814vPu8f7xU/+8LZ4qXNKFEVB/PDY
      scV77733niiKohjxjognzjaLiWhIbLneIgYiMVEUw+Knx8+IMzMzoiiKohAPi86FsiIKSbGr
      vUWc8wVFMRkVp6enxdaWdjEUCoitrR1iPCmILpdLHBnoESdm3KIoiuKnx1Nlxj/vFFvbu8Wk
      IC7GHQ14RE8wLM5OT4ttrS1iKBQSW1tbxUg8KYpCUuzpaBMXW4Cm1mH276kAjZFcm4H6cyfI
      LNhC77SPbXlmzHnb8E/3ERNAo5CxrSyH/hEnkXCQZDJBYN7D4rqie8SxteYx9m4vW1TC81+c
      49DhJxa/15Ra6Ry9uUVJMdpxhY4xHwXaAJfaJ7jSkH7rxodNV1cXTU1Ny/6Njo6uejrusEC2
      QYkty45KjHHs3Q/YUVu7PI+GhwAjLPwf0xnwzruIJ5J4vfOLcd09jhmefPaPyM8ypx4WE9Q1
      97F/R/lCaBkqmey21nhmYgZbto0TJz6jsno7pz//nBvtwUxfM10TXtqvXMCXTBXDL8+cJK+s
      kotnTpGIzXH89DW2Fur4/ceX2Fqg5WxdB3XnTmPIKmSw6Uum/HEAhPAcp+va2Faaw+enz9Fx
      9SKuUIJL588jU4p8evw027YW8pvff0zl1gJOn63j4henySyqWOoCBRICegWAyEe/extbeS1P
      7d+JUSUnlASSIRRqE3JFKkgwGMZszeab33ictvYu9BYbkXknjY2NBGPJu8ZxM/Ggi4m5EL3t
      rTgcw3iDMfQGPX5/AEG4seXi0gHcxSWlGAx6YtHYVyo064HVaqW2tnbZP6fTiXPSwdWrVwkG
      AzTU1zMfjNHR0sjo5CyDPR109AzcVzrJhfeTiHj5l7d/y9OvfJ8t+RnL88ichVyReldxhYKC
      0l3syNPSNzyFzWJk0jHE9fbue8RhXJauo6sRUWOkvaef/r5eBEAtJFns0MYjNDY2IphLOFRT
      ilytQatWY1EpuOFsXfPEM3RfvcCYN0Z5lh6AqZlpBro7MBlNRJOQm5eLzmDAnpWJzmAgGYui
      1JnIshioLM9jbMYHQMA5SlZJFVqjDTER5sizR6k7f4mwqMCslmHPzUOjM5Brz0KjMyBLxpia
      mWakr2vJGa48U8vwXITc2BDDPjWFrnE6I0GeeLyW0ydPoyPMvkPPE5ro5PylejxzAV7+lpWh
      7jbi0SC5xaVYbNns359NcLrrrnGMjwzQ2TuE16KkxLqPH//o+0CE0dE5LAY1jaOzVOzfS1iW
      y4W6emQxHxU79iNONt5XAdloZOQUEPI4uXy9h6OHD9HdcAqy9+NxTxCPxojGfcCWFcenkMkQ
      gIazn2Gv2M5QbyfZecVsL82/KY8yCY+ouNJwBaUpE2Uyytikk0jIw7adB8gvziMfqDv+u7vE
      YaW7/Tqjow6amprYsfsQ394B010K9KRq0ZBMzqKaqLTs379/UU6zRsHVq9eIqA3ob1yUa8jU
      RogZl37vtvIyQrEEBrMN9R2WBiciAZqbmxgfd/PCy5mc7QNzwXa8Lae4GsjGZi9Eqc8CVwdZ
      ta/e8d1VVpTjjcaXxgBCzC8e+/T06nZSvxJJ8cMPP3rYQjwQExMTt127du2aONTbKU7MzolD
      XW3itNstNl27JF5tHRSvNl4THUN94vsfn0gT252ZHrgu1rUNrZbYX5mof1b89PSl+w534eRx
      0RsV7ivM8U8/XcFTgvjZ8eNiYgVPLnaBZCojNVsLiSUfrlU04Jpk/5PPPlQZ1gqNVsvk6CBZ
      pVV4Z2fZXXuYfItI5fZdyGUynjx8+L7iy6nYQ4Zq/XZ0uBPjk26ef+aJez94E0Gvm7LdBzGr
      ZfcV7uChQ/d8Zt45Re3jT7GS/SWkeYA1oL6+Ho1m+T5EXq+XZ5555iFJJHEnpAUxa0B2djaZ
      mZnLrvX29hKPBOgZmmBn9Tb6e3qpqKwi5HGjsWQSmZ/Bn1BSkJN5h1gl1oIHcoU4fvzEasmx
      RCJA/9Dkih7t79uYJ1jq9XpsNhs2mw2Px4PNZkOpVOILhMnVhDlzqQmL3U5rRyed9ReZi0Hv
      8BiT48Orkr5ncghnYCNOEW48FluAeNhHU2s3eksGu7aXUXfhMhqNAqXeRiLkIX9LDQHXKOFQ
      jHBSzsH9exYjGerrxD3vp3jbTlwTI1Tv3ElkfpKZqIGZwVZUGg0o9ZAIkZG/haJMDY0tHWgM
      NvbsrOTq5QsoNXqMthz0iSlOnx9A4Ekqy4tJBJwMO6N0dXVy9LFd9I9MoNDo2VqUzelTp/EG
      o+zbs4P25kbCSSUHDuxDcX/dyjVBEAR++tOfcuDAAcrKUnMeQizEdNxIoSWMzWZjemKC0tIS
      ANRqDcjurzfa199H1DONJqeSsHOUcCxJ1a5aWhvO4zZW8VjNNtRJHyMTs+QWbaE4T2pdbmWx
      Bfji3CVqDx4kPNGHMxLH7Y2w/+A+RofH2X9wL9cbrtHfP8TOPfsoM0Vp6J0BIBmcoXssyIGD
      B2msO48hMUdj3wxX6pvIzDQz4/ayb/9BxkaH2bf/IJ3XGzj3xQX27D8Ic8OM+xJMzLrYV7uf
      ga42CouLKS3fRmV5MQCJgJPfHTvJ0aNHsWTaMenUXL94CWzZlJaVsn9vDf1XL6Av2UlNiZ4L
      jfdnS18r5HI5/+E//AeOHj26eM3j9RENeMgvKeb6lSsUlZYx6vIyNTyE1aBGoTbcVxpXL5wi
      qMxia7GdgoJ8VMoEX3xZT0lxMVU1eynMzeRaSxePPXaQtqYHdBl4RFlsAbweF61NjSisOejl
      4sKhBTKUytRfEEGuQCEDnVZD1JuaXBFiIRQaY+oZmYzSPYdp/uBjNBoNJpVs8fADpXJpuOH1
      zdN+vQn0WVhUC7UfC8nI5chuGZc/8dSzWI1aTh3/mMeOvkDV6DhJQCZLVfU+nxd3bydejYzt
      5VvX6FWtnHA4jNfrRalU4vWmjppNJBJs3b5kGz/4eOr8tYNHnv7K6djyyji0t5rgTB8NvUFe
      OnqA6RN1yORyxIVJsqmxIRobGykqe/jvZSOy2AIcPXwIfziGKCSRyZRkZNoA+fK/iQjNzc00
      Dvk5XFNERmYmKlsZNpmTaw1XKNu2A1Bg10awV+wFIDMj87a/Tz95CG8omsokmYzMzIylZ9RZ
      6JhjcDS1N41cbcBm0gJQWJBLb3cns94QSiAv20pjaxd7n3oaWcADiLABbFqzs7MMDg4u+xcO
      r/6GUzfem8acjTzs5npTKwarjfxtuxjvbGDK6eFAbS1JASRjX3ruywx6/MRxXn7p5bs+4593
      8sWlRl751jdXZId9FJmcnCQ/Px+AQCCA0WhM1cK5WYwM9iKzFBENecjKKWC2vYHKP/oBkfFW
      ZjwqDu5fpzMMJID7tALdq/ADmGzZfGcTF/4bCILAu+++y+eff754zWw2I+qyUCkEnnziCeJh
      P5XbUl2T0i2VaKTlSeuONA+wRsjlcrZt28auXbsWr3X39KCUq8nPtFF3+TLFpeX0tzWiFi0E
      5F4mJufYua9aypR1RJoJXgNu7gLdoLGxcZmDmMTGQKps1oCWlhaampqWXbvZCiaxcXjoLcDc
      aDsTFFBTkrHsel9fP0ZlHLU5G19MRXl+6lwtR18X+gwrIdFMwOmgujr9oHHe0cmUrIDqIisn
      Pz1G4dZd7KgsT/tsw5V6sjMzKd66bVVqhJtbAFEUkclk9xwEB0ba6XU4efmFr7cj4N3y06YV
      SahNhAXdfedncGaAAb+Z3VvstFyrJ6E2s3/3jgeW96FXS7Ggj9kZF283JrDpBaaH+njmmy9z
      +tRpDmwvIKmfp2M8Qrc+ihWIaEHvUjMwpyND5mVmYoSgL0hQUBCKxfjxj99ADXSPeXj8cOoF
      zbnnKK6S03D+cy53TbOrLIvc8mpG+nsAkCEy1tdFRKlkqHsQtQpeeP75B/pdoijS3NxMT08P
      P/7xj4GlQbBaIXDgiSdo7+hYHASbjCaKCrUPlOZGIBb04fMG+VW9iyyTGvdYD0eef4VTp0/z
      VE0Z7qSaQRd3zE/XlIOgP0BGeRHDzX1869//KQagbWCWxw6n1g5MzM7z8suPc+70iVTeo+Vo
      bT51TSPMRTXYVAEKtuxitPU8EyEN/9f/9r/eUd4NY3coKNmCXIhStbWCrsFJcjJTy++y84vR
      KoFEmNGJWQByC0tQy5caLhER5CrsNhMCgBgDmZobHhGWrBy2bynFMekkN8MCMpDL5AR9blye
      1KmVpSXFJEU1JoUXa87KF6XcCVEUcTgc/PCHP1y8lhoEi4uDYGtGFv2OCUYHh+jt7SUW37ir
      3O6XvKJyVMSortxGe6+D/GwryCBrBfkJIiqtlqLsTFKLHpOIMvmiZVEtT9DY2rnwpIhBI6e7
      N+VHtffxJ9lXs52W5mZ0RhvPHrm7m/ZD7wKtBZ7xfvzGYoqs9380av2F89Q+eRT1A1QN0iB4
      dQnODjOLnTL7/bmKrIRVVQCfz4fZbF6t6L5W+P1+TKbUeuczZ84sumncIJlM8sILLzwM0e7K
      Zs4z2ABjgJUyPj5GYY6FMTcU5aYyLBgIYjDeuVYIBYOI8QgyYyb6dfyl1dXVaVuAmfERRh0O
      7IXljI87KC7fxkTbVSqffom5oQ4m5oIcfeLg+gm6wejuaCGeVFBVU4NavpDnhUVrmubXRgHC
      4RCIesK+OepGhsnMNCMX48hkqb7KjKMfTXYFQmAKo9GMP6nGZlSjDs/jM4TRC2HkcjkVFRXr
      JrPL5eL8+fO89tprANjzC5kYn2Bs1s2TC4PgssI8YgLYrBZ6HbPrJttGJBwOIZdpGBrsIxAW
      MelgsL8fg1aBPqcU84P0S+/AhhkE3wsxEaOzewSLzUBBSTk6lRyQIU8EUOqsmGxZlBTYyS0o
      oaioiMi8mziQZbeDCBadkphs/c6+EgSBt99+mxdffHHxWv2XZ4jINRRYtFy6fBmVRkdnTy8D
      /UM4XW5kSWFD7nS3XpismezZX4vuplJZWmRncMq/JoUfNtEYYHJ0EHNuGcY1cri5eQzwdRoE
      b+Q8g5RzZSChJC97bfZSXdUuUCwWw+fzrWaUq4bRlo0QDeBbo00UwuHwogL09vbSd8tyzXg8
      vjYJPyBr4aa9qig0GBSsWblaVQVQq9WrXpv4ohE6Z6bZkZOLWbNxJ4putvpUVlambQGckw6G
      x6fZsaOajrZ2tu2qZbqvlaKaAxgVcZpbe9i3p2Zd5dbpdBu6BbjBsHuQ0blhDpcfRaVYva5s
      2v5AMpnk8vkznL98bdUS+qpcGB6k2p7DheHBdU9bFASaTn7Atc/eZWqo577Dx+NxTp48ufg9
      I6eAHKOCy9d72HvoEI6hbjTJOIEEdLd3EElszFbiYeMNe7g+3khVTjXHu46tatxpFaCno4XJ
      GTc6nW5VE/vqPJxV7l7nNBZ7Hge++X0m+jrvK6wgCPz5n//5Mndox2AvquxytmRqmJ+fJ4ka
      vV4HCHh9PhyDfYQ38yh4RaxuWUirAFOT46h1elTK1V3WIiZjxDo+IDnbveIwR8oq6Jqd5kjZ
      +pkvb2DJzsU7O8W1z96lYNv9OV7J5XL+7M/+jLy8vMVrt+0MV13BVCiJe3SEQ08e5eWXX0b3
      FTulx957hytXrvDFhctfLYINjEVnZW/hfnpmuni5+jurGndaK9BAdxtxlYXtW0ruK7J7WRSi
      V3+BauuLxHtPoKr5PnJD1uI9IRJB8HpR5uTcV5rpEOKpbb/lqhVaDpJJGByFTFvq31fgZitQ
      Q0PDbe7PsViMxxcWwq8Fw/1deINx8opKyMm0rjjcRrcCrTVp65stVTu41tjC/JwZW8baH+Uj
      RCJ4f/8HVEVF0N2D8emj9wwTT8Y53vURAC9Xf2dxYJQIDhD3NACgsh5EaVhybIv4Q0x1jZFX
      XYTWpF+KrKMXyopSSqDXge7BBtsHD67/bK7X50OuNhCNPvy9Qu8HEeienQZguz133Tu7abtA
      4Zk+2h0uWlqvr2pi6tp/T2KiCWX508trf68XVVERhqePkpiZWVFcdUPnOVTyBIdKnqBu6Pzi
      9WRoEHXm06gznyYZWj5wHrjYRe72IgYuda3K79lIZFtNtLd3MDXjetii3Bc3Cr/sps/rSdoW
      QKa1UlUYRKFSr2piMoUa9c7b92xX5uRAdw/ed9/D+NzKFoSUZJRxefgiAPsKlyaY1JnPEpl+
      HwBt7msrE2xnZar2Ly5Yce0/53Iy55wlM9uOLSt7ZemsIXNeP9l5+aiEtbfrxzreR/ROILMU
      oN65wnd8FxZ2nXoopFWAzubLDHt0FOTYl11PxoI0tg9SkZ/BlHOO4pIiRh0TZOcVkpe18n5n
      OlbS7bmZsswKMvSpvYYsuqW0ZXIVuvw30obZ8lQ1U11jbHnyllVHCgVsS79a7E64Z2fYWr2T
      /q6ODaEApSUljNQ1oCm6v9/xVRC9E2gO/59E6372wHFtt+cu6wI9kFxCfFnlJ5Pfe74grQLs
      PfwNhj8+TTgSWnZ9eHQSi1mHNxyjprqIcxeHeOqZWhyDQyRtJgRBIJFI8EXzCNNzAXIzjDy7
      r/SBftTdMKhSZ5IkEiuzHSp1aopqK+4rzN2YcIwsxpVMJu/+8BozNDSEVmdASKz9ohqZpYBo
      3c+QWQoePC6g+gEL/g1i7i9QZzy1+FmT/WLa51zD08z2TSJTyNMrQNQzjVxvIxAMLruulAuM
      jk5QXFhIe8cg5eU5dLR3YLZmolAokMvlKJVKZj0h/t0f7eGdU22P7GLwLdt3EAz4yS8qQSZb
      2gLyYXHjuKRbmXIMMuGNY5RF8ccgx6rH6/OSt2U3WcblNWTH8CzNfVMo5HJ+9NxO5PL0Q9LV
      6PasBQp9BTH3l0DKAHInnANTVL+4j/GWofQKoNTbKC1VsWd76bLrpRWVlFZULrtWwu3+2jkZ
      Bt451UZOxuqv4NkoyGQyjKaNYz7UaDXEonPEE0stUTLipXtoEhQKbAW55OogCNTsrGBw3I9N
      Z1lstQGu903xx8/t4GKbA8eMh8Js0x1SWxliNErS40V5S1d6zdCUosxY6A6rrHds5TPLc+j4
      vBGFQpF+HiDmd3Pi7CUMNjvPH1257Xoz25Rvngd4GEyO9tPvmGHvvgOYDcuXgo6NjyNEQ/hj
      kGvVM+Wco3z7Tgwq+bI8W2kLsBKWmbbl8vse460XaRUgEQmQUBoRokH0hpXX4pICPDwFcE8N
      c6W5i1g8wfaafVRVrGwl1VrlWWJmhkhnF4anj+J99z2sP/zBqqexGqTtAl2/+CndXjMZZh2v
      vCCda/V1IBSKIJfLKK/cueLCv5Z8FdP2wyC9FeiJ55n6oh7NBnY/llhOOBRAbzAyPz8HrL/f
      VDo2arfnZtIqQDw0hyW3gvKCtXeDkHhwEhE//pgctUpFTsGDmyY3E2ldIVSmHIY6Ghgbn1hv
      eR4JXC4Xn3zyCS7Xnd0SLl++TG9v76qkJ1OoyLAamZ6cQqZc3dn7R530LYBnAtGcRzToXW95
      HglisRh+v59YLMabb75JWVkZPp8Pu91OQUEBXV1dxGIxmpqamJycxGazIQgC+/bt+0rpKVRa
      PHNzHHrySfr7+yjLz7p3IAngDi2ANruCXYVmrNn56W5LrIBt27YRDAYpLi5eXHdrMBjo7e1F
      FEXUajV2u53a2lpOnjzJ3r17Hyi9vGwbJz87gccXwO0NrMZP2BSkbQFinnH8oolyy+Y0aT4o
      +fn5i2uCt269++F0fr+f55577rad5O4X17yfw0eOYDZbybQYHyiuzURaBRCFOF6fH49Jxf0t
      iZG4QfvQ0iZXdpuBHFv6+RSTybQq26Ukkgkic3MolJLl7n5IqwCCXE/U18nsLXvLTk+M4gkl
      KbJbGJl0U7m1hP7efvJLt2Ix3P9GtI8y//lXXyx+fuPZHfzoGzW0tVwjJirZv9Dd6RscYFvF
      0oKdieF+BkbG2ffkMyh8U1wfGKektJzCnHsfcJ1ts9LcPYhcK7Xa90NaBdAYM8jNMDI41MfQ
      lgrKC1K+HPa8ItydXUy6RKpKbdRf6ab28d1MjgxhLC1d5ley2ViJN+jM/ByIIic/+wSd2Upb
      Ryc+1yRX2vr593/6p8iSETyR1Ey8WqkgEYshTwY5daYdk9XK4/v3pI3XM9JELLOW4qIwYuLm
      /XNEhvr7UOgt6OQJ/FHItekYmXRTVbUNxcPZa2BDkVYBErEwfQPDPPfK6+hlS0vsRgZ6Kd1a
      yeToEH5/CKNRjd/vJyHIl3mDbkbu5Q2aiPqZmXKhQMCQYefFw08xPTWB2ZaNVdXDtNONe9ZH
      zONgYLiEHSUW9DoNk+MTi6tF5ufnUSLDZFu+9kJlsFF/6gMSET+F5duX3SsuKaF3cIyEOrW/
      /rgrSlWpjdEJLyV5xk1dacEdfIHCM700jMuIzTl44flvLF6fGB0iEIMtZYVMTLspLsxl3OEg
      t7AYpVwm+QLd5AvUPrS0tDM1Bli7gWkyGsQbFckw35pGks72XrbvrKavtwc5IMpk5Ni0BOTZ
      FGbpN3WewR1aAF1WKUL7BWy3mEELSpZWGxUXprb7KCyWhsnpqCl/8N0tVkoy4uGdfzvOnp1V
      ZOeXLO3mIQio1QrGJqYpKcjFH4Msi57xaTfFhfq7R7pJSKsAZz4/ji8KYdzrLc8jg/+vdy5+
      Vh/6CZrH/3fqL54jLtdw5PDyY3v8vnlUOhNa1VfrPqot+eytLMQ956V6903LM+UqtlYurd+4
      sc3ZjcpL4g4KcPToU3x65goa1fptJ74ZcIwMklRqqdeoKMo00+eYRoYce7Yeq8nE0LSf/Cwr
      c7NzmLMycTkcbK0qo6N/ktr9tVj06d0cQtPdGEoP8lS5jcuXr5B1+O7nYkkskXYmOB6axxOM
      M9jTSnNHX7pHJL4C+YXFGDRKppxOZqYnkauNuKZGcUxMEQmH2VpTS8Q5QI9jFkEQMFmMTDu9
      WHQyZmbn7hivLruC6c5LHD/xGRl5xev4i77+pG0B1MZscjMMGMr3s2/ntvWW6ZFAfegni58V
      hQcAyMyyYy+sIDfLwujYJDvy85kwqKkoLQS5EiHmI7viIEcyZjBk5TCfiJBXsoXRoQFKi+48
      ppApNLz07dXdMnCzkNYKFPc6eO90OwUFuRx5vHbFkW1mi8LDXBEWC3pwu6apbx8jM8PK0ScO
      rDjsZs4zuNM8QCRMXmkFZfkPttfPZmbm//uvi58NR45gfPoortlp3N4AlVvv4xziRARvVI7F
      cGc3Z7XBgqO5Eb97ikOHNu8he1+F9NuiKC1oEyNMz0Qpyl+dPVs2G9GupR2wNdu3I4pJvrxU
      xwvPv0BbSxORJOjVIjNOD6IgsntHFUMTs5SUFUNUBaKXi5fqePrIU8R12VjultbcCJ0jc+Tk
      5hEJ+CBr89bo90taBRgZG0erVQJ3P7BBTEbp6ZF8gVaCKCbQGU2YTSZc7imScZF4hgl5PMi2
      ijKG+ocpeewI030XIFYE8nm2Vm4jW5ekcT5CvvXOTm6ajDLeeDUbjd6A4h5epUGvW3KFuIm0
      CuCacOCLgsacRXrvkxSTjnFKq3YwOTKEZR2PH/06oNm+5JKgzM5GLtdQmJ1B4/UWMjPziCYh
      NzeTZEYEU4YNiz9CW+MVqkq34JpwoDFlo5NHcYYV5FvVzM97AQGbLf0yVb1hZTPN0y4PVaU2
      HJM+ygqkluKBTol0jQ8jGDOZd7qp3Fq2qQdUDzoITkSCCGoDa3Qa6CL9vb1kS64QizyQ51pW
      YSnjDgcVFaWrJM6jw+mBpfW+5bZMKjLvvkxRqV2fXfQqKsokV4ibeEDXTdmiL1AymSQajW7Y
      Y1LXmpuPSQU4M7A0gfiNim1UZGbxb7/+e1SmDF565dsM9A2xpbyEkbFRMqw2vrxQR+2enfz/
      zZ1ZbyRZVsd/uUUujtw35+K0nbbLS9cyVdVVFA2PaASDkHjjYXjila8wj7zwLXgAIQRIvDBI
      SEyr6aEbmu6iplxV7TXTTuee6VwjI9fI4MG4co20oe0RfymlVMSNGxH3nnPPiXPPEo3FSJzn
      0dUK9DxhtkNuSpcSK+srtCUJUfxhTnV6o0AsGkJVVYbD4f//Mqn3jDvzXTYYDJjN5rniVFEU
      TXfh63NdqUoiU0anKixHYtht5rnX3Kavm453ZRmjzQYz7RVkeYDNZr51X9e4TUhjOBIlGonw
      F3/992yGXJyeHvL4Nz/j/VECu8NJJX/OUAey1McriES347z+/HOeP9/j/a/eIDjC7PxABhh/
      XoPBcKsyqVrvfD2OhhvaybKMzTaSOLdtdxto9TWukmrTjDLfFeKu0G426TPpK18oFEgc7lOu
      X6081+fkSgVXeAVVVSlk02PXKCRPTylX6hPtx9FsNifOnSXPOD0+4OjkbO41Q0VhOLcvHYJg
      nLim15ZIJJJk8sWpvhQKmRSv/+s9t02MLrc7JHKX/M5vPMJic7K+ukbA58fjcqD2WxgtDuwO
      J32pzsCiJ/F9gtX4BjZHkFKxzIP1X1OSWfo0myPJoLXgXI/jTe2mg4Vu224eruf6pr7Gj2vH
      aujutlD2bdCsljDbbHS7ky9rDy6z/9W/4QyusrM2ntpPh14HxVyG8uUlO1s3F4CwCnoGNi9o
      1N0VrFaNWlQK7fYAu31UHlbpdSheVonZpldelYvzNJ5QdG5a8j//3T+YOfb7f/hHH//vjB1/
      /uQxz5+MyqlGQ9GJ64a9FrGtnftdrf4P0B7HSdy23O5dlOWVm1Uy+TJu/YcWAwAACbFJREFU
      3zI3C5N7kwBDDj+84/QiyzTv2d1++m0Zs3nyjFQusLL3jM21CGbz+J6CgnXJw94ne5rEP219
      qdUllgNeGo3J1UKSqpwenZLLFydK8kiSRCZ1RjqVpj9FzUazFbtFT7Y46xrea3YZ6IZzy/t8
      yL/7+CtJxTktbg+9sMTWWvTmhj8Q2UyGXqvCd6/36anapCFJNVLJ85lxnIE6ZNDvkUlfIHfn
      R511JIlcPks6naYpdzS7ql4kKHcUCoXFY3lxkWNjc4NiTjup2/h83xMDDJDlHj1ZZvq1m9US
      JuusBBD9Yaxql3ZnusqhnouzI46PExN9DfsdTpIpzk6+J3Ge+3i8124TCgf496++xh+aTBMo
      inaymQva7cmBNulVDo8TtGSJztRz6Q0GrEtOwgHP1HPpsNiMVOvSDJMD/Nk//+zj74uTfwHg
      H//hb/j5P/2c4ZTludmo0unPJ5Cvv/wF+9+fzD131+i1Jb59e8LeVohaXfvjWBQd6FDIprNz
      pd81ymcnvD5M0pS72MzzlQ2LKNJtVChVG/Q1xgDA4vaSevct8kBb5gz7bVbW10meJglFtReM
      8fm+FxWoUpXY2lghVW4y7cGi0w/oSH0swvjQDaiUqnRVhU6vhc8z8kFqVLO0OgaUUpnYVvzj
      A9fzaeqSTK+nx2WrA1dBHgaTiSWzm5cvX6LXT5Omkfj6GhavZ4JozTY7n+xu0WoPcDknd7Qr
      F+cUJPAO+rA8roMPWd7YxsRgIRGMw2a1EI0E+Ku//TuyiSPiG2u0ugZ2tvy4/FEqpQZGk0Il
      XcUVDvHq0ydUSiWWAmuo3HWN9FmsbW6z9j9uShsLtzSG9PoKW3u7LIoY8cbW6BYuMRoXx5Us
      R2JYWn0sgpau3iGVrmIUrAhol4CqZdP0fWtsbKxzcHCM27E9t934fN8LAxTzBXr9Pk7BTJtR
      JBKAIJg5z12yE10bO2qkmEqgeP3oB5Oro+gMsLMrIgg6xknTvbLJ08iQarmAxTGysRuMRo6+
      f4fRbMPh9uFzj1s4upzuH+OMR1j6ZI9x54Ja45JhRyFbcLEZG+22+lY3sMoyqWxp6i311CsF
      FJ0JT/h2GfSymTTVVo9I0M3K8m8T9Pv58otfUGmImO1deopKX+mytrkD+jb0augsbl5/94aV
      oBtBBya7+942y2qXRY4T59itJpzhB4Q8Wkr0kEa9yVBXwO6IaxLRZeqMTEvFplcJBrT3QVLp
      HKhQGars7e3MaWFBMMj4VjdRutpZ7zyrmySPjzhQhqzEFycku57ve2GAaDjIwGDFiML0Z81Q
      MRAMBzAbJ9ezjYcPuWy2mI7R0eshe/yOJiIvfuvpBNFK9SrVuoTDYGXJMpIa6lBlMBgwHE6v
      zWZcAREEC9OeNU6Hl2Q5ye7W+KQrJBNJFKAlyVNXKHTafUTX0lw9+Gc/HnmD+sUryfHTP/nT
      mXa7u1cVK3utOm/lQ/yhPVYjo7DGn/zkx3N6vx+4vAHsuTwGEwx6izJFGEB3s9zzrqxw+uYY
      38pi61V02cPr9wkebM8j/iusb+5yWS6hX5D8d9DrYrU7sQJKvwcaaheM5vteGMBsFTH0u1xk
      S2xsiRPqRrVWY8kx689iEe0sW5c4PDoiOuaB2m4rGEQHEbtzRp0qFIoEI1EEYVJtsdmstAfz
      yLJLrSjhFJ10YIIJ6o0WL159hn7CZGYgrpnacDER7C0/0jw3D8KSk08/ffm/uuY+4HDZGA5M
      WKzazo3pixyB5RAWVaWH9mZSNZNhaDJTKVdYDmp7FafzFQIeF+VCjoB3vt9rJXVC0xbAb9Fm
      AJ3eQD6XJ74RJ3NxgWN3vgoEY/Ot2eIH4MP7fd6+3adavpywkUuSxEoshtVqxWCYvLXS7/Kr
      19/OZKIwmQysx7cI+Gezo7lddhKnp+RLU+GCqooOqNend6XNxHYiDPrMMFOn1SSVSiF3FnvA
      jqBHQI/FsTRXN69883sff3L6LwH4+svPeXdwcMv+R6g3fn1ZuqVmlcPDE9rtaWPECJfFHGdn
      ZyTP0wutQJ5YHGu/ism2yJkb1lcjlMolfMtatQ0Ual2FVilHuVLT7MdgNLG1EaNQLOBbXhz4
      fz3f96QCheirOip1eeIjSRSvEjH12peoukkGaOYzhHefUU2dEPaP1Bmpnuf1mywup5WHn/5o
      gnAr1SbxeJzjD9+hDAU2YleWGrPVQqfVwTJT9b1HQ1bZis+mcnG5XfQUhdv7BvYpZnKUBwrB
      4O1SoKTOTnkciPDLX36OyxMkfZ7AIjroNOt0FfjR7hbZfAmPL0itkkVmiWg4hG7QwulYTER3
      gXa7TSC4jt3Vx62p/8OT57eLOKteJHCt7uJfEMwDkEimePT4MYJZS+oY6NZq4AtQKpZY1chq
      0ZEk+uiwWqwYDYvX9uv5vhcJ4A2G8fn8REP+mdXx/PSAptwgl5tc1WxeH5V0kiEqxcsRl7u8
      IXxuG3anY+ZhI+Eg+UKB6NoOft/IbDFUQaeCWZgeeAOC8Up1mlZeJKmFP7iMRbjdmiBJHbaf
      PSYeicw1g85DOBpjd/sBjVaD9dUAA6OFVruOybKEx26hVJPYWfVylmvxZG8Ne2gLpdNAkpo3
      d34H6HfbtNodFEWZMdWOo1G94F+/+JZvvvoGbTkBNp//xlUbwONykC8UaMx8Z11jiFl0YhME
      YjHt+mcWUaReLGAQrFjNi5nuer7vaSe4y7v/+Gbuh2tkZQ1JkvEEJ+1scuWSgcGE1+ki4J0M
      xWzJLax2+wQzdSSJvk6HzWpFsNlx2EayplGrgWk2gESSWjicToboZxjTbNKz/+YNT168wmS8
      maRF0Uqj0cGiYQa1hH/68b/JcbXL6/UFeHdwwKvnryiUZR5trmMRXQhGPTqdijpUObvI8tnT
      OIJoZttsxKCuMhwOqVarAJrxAHcB0eFEh0qp3l6Yo0h0Bnj40InTtbSA+QfI7SFOh4hxATF2
      JAnT0hI2BUya99QR29q8cpXQLV6zvT4fbz8cY374CMuC+17P9z0xgBFXZI2Y3TajazvdHmxC
      n1ShyYPV0eaSwaCn2+kwmNkOF4hFwzO2e4sokk+eoQw6yJ0B7rG0gNGVKJl8GdOUBBBFgf03
      aUChIkk83hllvOirRl492+Ks2MSxOr3pNQ+LzaC26B/PHNt7NAov8mhYBd2e0beO3Qh36K94
      I/R6AxfZAutRF2eZGvGV+cxWvazS7g6Q2xKhaFiDCYzouk0anQGDusTynG84uJrH1Id9dCYz
      58kj1ndeEvZPu53oaORS/GeygN8h8uzp47l9AaSzBV68eMrxSQqPQ9sUej3f/w3eudWEd+I6
      PwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      YmwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Employment Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Employment rate of Poly and Uni Graduates ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure' width='192'>
      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
      EWj/D66xKhg6qcrLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure ' width='192'>
      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
      aO1/AeGtoXz9yrwqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure (Expand)' width='192'>
      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
      ACLSJAAi0v4fu+/EjzRTUQkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure by Institutions' width='192'>
      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
      8lved1v+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2915Ml2X3n90mf15vyrquqvRvbgwFJgAAJEiSX3GVQVOxySUboRbsvGwpJ
      oVf9A4rQixSK0JP2SbtBieACXFIksRiDGQAzg5k202balff21vUm7Tl6uLequ6e9qTa4+YnI
      ypuZN889mfX7HvM7TpFSSiIiuhT1RUcgIuJFEgkgoquJBBDR1egvOgIREY+KlILzn38Kuo3U
      LL7x1mtPHWYkgIhXhsXLn2AMnuKNiTwAUkpmb3xFsdpk8thpCutLHD9xgsrGIq7dT2VtmmK1
      xak33mZrZR5d8dioq5heFakbmIlcVASKeHVYWCgyMZ5ndXGWH/zo7/Eqq8xuB3zj3Xf44tOf
      EZRWWSg0OXvhKyxvk5WKyjtvnuDnP/+EqStnub5W553Xj7C4WuDtt8+wOHMjEkDEq8PERJ75
      hR1Gxg+RMFVCr4VhJwAVBTh55htcP/cLhBFH9RrML8xz+doMJ08eR7ezfO87v4amgmmae2FG
      Aoh4ZRh//Vs4q1c4e+48sXSeWN8hEv46Zz//JYdOvI5mpbH8EodOv01q+BhHBmMIIRBCkO/t
      QQFAobenXYTq6e1FiRrCIrqZKAeI6GoiAUR0NZEAIrqaSAARXU0kgIiuJhJARFez1xVCSsn0
      tctUHZ9YMs+pYwfve5MUgp1imd7e/B3nA7fCRx+dJ9ebIds7xKHx4aeKXHl9mjUnC7UlDp48
      Q720TW9f31OFGRFxO3s5wMzFT/ESQ7xz5h2OHhxDSsnOxgpf3ZhGSMnm5hYAtVKBpcU5/vpv
      /hNf3Zi5I7DAq+GQ4MyZMxwaH2ZjfR0hJVsb6zTrFZaXl7h6YwYhJSIMuHH1MtulGiLw2Nzc
      4MrlS9RaHlJKVhZmuHrtGvWmx+DwOMKp8Nd//decv3CReqPGTqkGhBS2i5SLBZqNGgvL63it
      OpcuXabp+s/1RUa8muwJ4OriNqcm+pifvs5nZy/S2J7n3PQW4/0JPvzZF3z5xWe4QvLJp58z
      NDrG5ORBTh8/fFeAK/PTnD9/nsW1TWSrwD/+00+4cH2BysoUV1drDKbho0+/5NOPPqBv7DBf
      fvpTKtUy7338KUeOTvLxhz9n6uJnFDybg2NDSODK+S8QdoaJiQnOvP0mor7J+atzgMcXX1zk
      2vlP+Zu//SeEAu9/8BHHjh3m/ffeJ2rhi3gYewJIWxoNHyaPnKBW2mZ7ZZEDh4+TzA3iNYq8
      +8ZBzl68jmIm0ZX7Bzg6eYQzZ84wPjzAwPhxZi99xuETpwCF/r4+8gOjONUiqxsbLExfx05m
      CIKQwaFRbNtCRbKyXub4kREM0+T2n1K4zw8rGv/sj/+Eg6NZNla3uHr1OrlsHvFs3lHErzB7
      dYBvffvXee+9nzA00INQLcZOvMWPP/wZ5Vyc4Ylj5EbHufaD/4Xf+W/+RxRNB6/Gtel5ek2f
      htnH5FAOFIW1hRnOn9fJ9g6xPX+FP/1v/3vO/fx9zhwfZXr2K+pLIYdPvo63HWOn5RFPprB0
      DVVtG7eqqhw7PMpHH/6MuF/AHu9HUds67cnY/PL8RV47Mkp18yoXL7q4oUTTDXRNBUwOTg7g
      h4JUNhPV8CMeynPrC7R+4xzrxgHePtT/PH4uIuKReG4C8Fp1PMUiaRvP4+ciIh6JqDdoRFcT
      FZMjuppIABFdTSSAiK4mEkBEVxMJIKKriQQQ0dVEAojoaiIBRHQ1kQAiuppIABFdTSSAiK4m
      EkBEVxMJIKKriQQQ0dVEAojoaiIBRHQ1kQAiuppIABFdTSSAiK4mEkBEV9OVAhBCsB9zAUgp
      CcPwmYcL7Eu4u+tn7QevynvoSgHsJ/s1ycarNnnHq/IeIgFEdDWRACK6mkgAEV2N/vCv/Gpy
      eXYLIdrlyYPDWTJJ+wXHKOJF0LUC+L/+/iItLwDgv/vTd3jzSCSAbiQqAkV0NZEAIrqaPQEU
      t9e5cWOG4AkC8Z0mbnBng0rgtWh5IY164wlCFBSLZQhctoqVvbOFzVW2bzu+PyH1WhOn1SQI
      Xy3/ecTzpVMHkGwXqxw/fozVxTlKlRrxRIZmYwcXm76eHoobS/hCJZHJkbQ1JAoycKnX6uR7
      8gg1TrlaYjCfZW5+gZ5snC03xkjapLC5SrXpEovH8ZwG6VSGzVKD104dp1neYmpuicHePiqt
      BvlcjlKphG4kySd1SrUam4tzaPEkpa1VhodH2FhbJptKsVmskkvaVKpldN2gf+QAW8tzxDMZ
      lua3OXJ0GE3VKZZKpJMpivU62UwPB0YGXuxbj3hp2MsBZOBTLleoOR59mRjlus/B8SEyfaMI
      36FnYJBsOkfc0mk2GhR2iiiayeRwnkbLpVpt0Ns/wE6hgPDqqHaa3nwO13Vx/IC0rdMMVSYn
      RpDSQBcO1aZLoVDAd2rUW5KJiQPUKgXS+X409dZ6YOlcHwnboG9wmLipke/ro1mrMDh6AMsw
      GRzsY2R4kJ3tLXwkjaZgoL8XGfrUak36+vPUK3WGDxxEEe4LedERLyd7C2SIwGOzUKavJ0Ox
      0iCXTqJpCr5QUWQICkghURQFz2ngCo1U3EZXwe+s01XaKZBMJmi0HDKZLOVymXQqiSJDai2f
      VCKGrqsEfkipXKGvvw+v1aDR8kgkEhimjggF5XKJVDqLbWi4gegsjSeRUmKaBtvbBfL5PBIF
      RDtuiqIghKRSqZBKZWg1qtiJJKahU9gp0ZvPIhUNEQbous7/8L+/9zUv0NPnCrt9gXT92TvX
      giB45uHu9gNS1WdfFdyP+O5HuF25QowQIhIAkQAg8gJFdDld2xD2xpEBPL/dtTaTtF5wbCJe
      FF1bBFIUBUV5wIrfT0BUBLpFVASKiHgFiAQQ0dVEAojoaiIBRHQ1kQAiuppIABFdTSSAiK4m
      EkBEVxMJIKKr6dquEFz532AfukarQsA+tKzuR7jKbieAZ9wiDs/pPaQm4dCfPVV43SuAxb+D
      oP5Mg1Q6236wH1n1fsUV9q9ocUe4/b/21AKIikARXU0kgIiu5pUtAm0sTrFVD8nle+jPpUDV
      mb1xhdzQJKmYQSwWw3VamHYc322hmzae0yKWSLzoqEe8RLyyAhBScujICdYXb/DLa5dRExli
      msAurnJ1aY2BgVH0uIXmN/GwSZuCqfklDhx5jcNj/S86+hEvCa+sAEAyO3OTbCZNLt9DbmCY
      wK2TiZsMhjq9qRRWTw/1zUWcmguxOP2DIwz0ZF50xCNeIrp3QMw//A7KM/YCRTxn+n8NvvV/
      PFUQUSU4oquJBBDR1bzCdYCn5PX/CcSTTAR5fyQghdiXMbZiH8IVUrYb7/ahJXg/4ntXuLGn
      d2Z0bx0gGhQfDYonKgJFdDmRACK6mkgAEV1N11aCpZT7tpbtfi0+/azD3X3+VyW+jxru49Tv
      ohwgoqvpSi/Q7iPvhxdoP8LdDbvb47sf4XalACIidunaOkBxc4XVzR0GB/poYeM36xyaPPDE
      4V26cJb84AEUGRC6TQbHD2NpT5NSSRamvkJLjSGaW5TrDv25HoyUgR+YDPVlnyjUwHf48uxl
      3viNd7h+4QL5oQOooU/oO/SPTmAb2pNFV/jMzMzhChUTDydU6cmk0bUQPdlPPvWEy9BKyfLC
      LNtVh1xCxxc6uVgMNWPTasLoYM+Thduha+sAtbrHydeOUdve4fLFSwwMDz9VeIlEnHK5QmVn
      k6orn9L4ARSGRkcQQUioaBwczrBdqnJteoXB3iczfgDdsOnvyYEUxBNJyuUy5cIqFVd5cuMH
      UA3SqQSpdBrNtMkmbaqVMosbFXJPswi5opDJZkgmU8TjCdxGlVqzyaVr8wwPPJ3xQxcLIJkw
      uXblJqnePK+/+Qbryys8eVkwQEoNkGR6BshaCg03fLoISsHK0jLrGxsoMmBurUJvLsXJo2Os
      bu48cbC+02B1Y52NjcJeWTrbO0LWEjTcJ+8aIr06N2eXAQi9FqWaQyqdZXwoy07lSVYK7YQr
      Jdev30BR9xbKQtNt3jh1kOW1rScOd5eoDhDR1XRtDhARAZEAIrqcSAARXU3XukFfBs5+8jHS
      jHPk2AmScQvf9Wi2Wui6jmZYpOI2lXIRM5bkv/zdf+Lt7/4zmuszbNcdYpl+joz2gW5hG9B0
      BZahIYXAcZrY8SQXzp3jyPgAZTVPX1wlnclSK5ewEkk0r8zfvvcZ7777LoN9PSACHMfBsJPo
      +HhCRVcEjhuQzSS5fv5ntMx+bEOjWHM58/oxTF3FDwShFBgKuCFk08kX/Vofi0gAL5BcNs38
      Romrn3/I0NHTXD93kVYsjyEaWIbNb797nE/OzyH9Fk4AvZkEH53b4g//8A/4h3/4exZuXEU3
      dfxmkbqjE0/pnDz+OuuLUxRcDaVVY2IgxmyxwY6sUdpukOjN0ax7fO/dw7RcD1VV+PHf/hWT
      x9/g5sImMT2kXlgjMPOkbLANDc2IkTBdhGlRF4K1oodT+oiRniQ3V0rY/YNUZi/jaSn+8i//
      NcYrVK6IBPAC0Uwb1Wsg40nmZ+ewE3HyQyMoXhUCD82Kg98gkc4Tt0zitsnBkX5+/sknDI4d
      4uqF8/SOHCAT1zncf4BCcZvjB4eYm5snn01gxFXcUCEesxnOJHAb6ziNKkFooqgaMcsk9F2y
      PYO0alVqlSI94+PE1JDBiRMUNlfJ2CotHxq1Otm0jWYniZfnScQMlte3icezvPHWG1xrbNE7
      epinbv54zkRu0FcV4XP56jSvv3bykW/xWlUuX75Kbvggh8YGvnaxzqXZTd44cegZR/TlJhJA
      RFfzCpXWIiKePZEAIrqaSAARXU0kgIiuJhJARFcTCSCiq9kTgJSS9eV5zl84z9JD+llLKWk0
      m3edD/0Gn/78E86fP8/s4tpTR662vcjsaomFmRu4ITQaT9Kv3OXSxesP/p2ddcoN/4HfaTab
      e2Nob9y8Cdw/PnvnpeTG1NRjxjdiv1men+aXn/6CT375+S0BrE5fZLEkeOutt0jFTACa9Qob
      WwWklNTr7anE3VaD0s4WP/rb/4/1ze07AvadEsWmzpkzZzg0PkytVkMC9VoN33OoVMqd8EBK
      wdbGOo2WixQhjUad9bU1PD8EJJVSgZXFOXbKTdLZPNJv8aMf/pDllVVcz6XZcgFBo9HEaTbx
      fY9ypUYYeKytreGHu1NnBCwvrrC2tk4QChr1GkJKZOjTaLVXiSws32S97NFsNmjUKmwVikgJ
      rUaV1bUNwjDg7//uRywsLtN0PPK5HI1ahR/+8EesbWzRatQJhCT0HVotpx3P5WUcPySfzQHQ
      qJXZ3C4iaQukUS2zvVPae89r65uEImqSeR6MTR5hKCGxeiduCeDC9SXeff0gizM3mV1cxSmv
      8dFnl2lVNvnk7BU+/vADAgk//+gjpKqh6zqGYdwVeHlnm+XlZUqVGpsLV/nFZ2f56S++YHv2
      Cj+9MEVla4HPLlznwmc/o9zy+fiD96hVd/ib//wPhKHDBz/9lKUbF7kyu44QIRK4cv4crlTR
      dR3TNGnuLPGL8zcAl48/+iVffvYhP/jBD5lb3eSjDz4gDH3e++CjvRFexZ0CInD4L+9/xNSX
      nzGzXmH28ufMb9XuiPunH/6EudVtrn7+czYbHj/5yXso0qdSa6FrOoZpoioK586eRdN234HO
      lx//hG0XaitfcWGusBdPRYFzZ89SLyzy83PXaRRX+OWFa3z43j+xulXk8qcfsN3wee/9j5CB
      S7XR2sd/e8S92BOApSn4AiaPnGBzdZG12RscfO0dJg+foFpY5e1jI1y8sUig2uTSKTKZDL35
      u8em6rqBaZpomsahU+9w9v3/zOlv/BqKonDgwARHT56mvLXKzMISteI2hqHRdEJGxiYZHRtB
      +i7Tc+u8c+Y1Bvp795by1AyLdDrNQH8fmnpnhxMRSr7z+3/M2ydHWFpYZ2urgKYo7OYBvQND
      jB6YRA1bvPbN3+Dq+c+ZWa9wfOzOMaWqYXPk0EH6s0mcQDI61M/i4hJuIEll0vT392NbbdHb
      8STpdJq+nvzX3qjejufAAFZnjO3S1DWOv/lNDh49RWljCdWMcfTwQfqyMdxQY6g/x9LKSif3
      i3ie7AngN775Ju+9/zMWFxfxQhg+cpLZS59z8/oVcgNjDB55g4s//o+MnXwbRdUI3QZrmwVK
      60us7dxKSYPAx3VdXM/n8he/4A/+/N9w4WfvEwrJxtoKl86dZ3jyMJOjw+ixFGMHJoibd9bF
      D4z2cP78Zebnl+4Yp5u0dWYWltCsJI3yJjNT07T8EFU3ScRMwGZoOE8ml2d8/MDewzWqZWam
      rmGletHNJDmtim/1oqsP6rnlY8fzDPRluDk1y3A2xbXpWZrObXWF0GN1fYue3jyLM7NMzS4A
      0JuJcX1mDsdrG/TEsde4dv5Tbly9RO/wxB2/IkVAIpWnN5tkunN/xPPjjr5AntuiUq2TyeYx
      DQ2n1aDhBORzGRTaZfl4MoWqtOsCTU+QtA2EomOZOlKEFAo7SMCKxTE0lXg8jtNqsrNwjRkn
      zZuHh8mkkkgpKJeK6FaCZMzE9UNsy8BxXGzLolIpoekmphVDhj6GZYPwKZar5HN5GrUKimGi
      qxqKIjEMC1VVEKFPsVgmmclimwYgqFdrOIGgJ5dFURTO/ex9Rt/4NoOZ9mwFgeciNQPhe5iW
      ReC5KIZF4DSot3zy+SwKklKxSDKTRwQetm3jOU3qTkAuk6S4s0MimUTRTExdYWdnh2yuh8Bv
      f9dp1ml6glw2jes42LaN7zqohoXXatBw/b34Rew/ge8iFP35dYZrVXZoqYknnx/mGdGsFlnd
      aXB4cmxfV0qPeDWIeoNGdDVRQ1hEV7OvAtiv6bEjIp4V+yqAqHQV8bLz1AKQImR2+gZXrk1x
      /vNPaHiCLz7+kNqzXYAxImJfeOpB8YqqkYhZ1D2fXE8Pm8tzKLqFEAKhiCgX2GfqGzusfvYV
      vScnyR8de+5uVCkEhWsLVFe2SI30kp0cwUzGnmscHpV7rS751F4gEXrMTM/hSZVcJklpc51s
      Pk92ZJKYEqJpTzHjcMR9kVKycXGKm3/7MZpp4NWbpA8MMvnb79BzdAxlH5Y+vR0Rhmxfm2fh
      w/PUN3ewsymcUg1FU0kN95E/NEL+yBipkX506+4uMy8L++oGDcNIAPtB6AfM/PgzVj69zNCZ
      Exz959+iurrN/AdnKc2tkRkf5ODvfIP84bG9WZWfFV83/N7jE0z89hlSw314tQbF2VWKU0uU
      5tdwK3X0uEV2fIieIwfIHRoh0Z/bd3E+DpEAXjFaxSpXf/A+tZVtjvzRtxh599StqcOFoDS3
      xux7n1NZ3CA7OcTk975B/vDoUxeNRCjahv/Tc9Q3dug9Ps7Eb79DerT/nmGLIKBZqLBzc5Gd
      qSWqq9sEjoedSZI7NELvsXEyE0NY6cRD4yalbK+T4Hr4LRe/4eBWG3j1Zntfa+LWmgy8fpjh
      d0481nNFAnhFkFJSnF7m6v/7PpplcPrPf4/M1+f22f2uEOxMLTH/4TkqS5vkDo0w+b13yB0c
      eWwhiFBQuDbP/K7hH+sY/ti9Df9++I5LbWWbneklitPL1Dd2UBSFRH+e/NEx8gdHkIBbqePV
      W3tG7dUauLUmftNBBCEiCECCqmtololmKUi9jjRrHPrO7zHyxjce6/kiAbwCSClZ+sUlZn78
      GT1HxjjxX38PKxV/+H2inWrPf3iO2lqB/OFRDn7/XTIHBh9qvCIUFK63771l+GdIjw08dW4i
      hcSt1ikvrFOcWaE0t0JrpwqKgm4Z6LaJHrex0gmsdAIzEUOLSaRRR2g7hPoOgdzGcVfw/E1C
      0QIpGB3/CyYO/9vHikskgJccEQrmP/iCxY+/ZPJ332X8O2+hao9Xht4tt89/cJbGZpGeoweY
      /N1371l8ucPw13foOT7O5DMy/AfFz600UHWVkBp+sIPjLNNsLtFqLNJqLuO5O4RhC0XRMcws
      dmyEeGKcWHxsb29avajq4zk2IwG8xLi1Btf/5qcUZ5Y59a9+l/7XDz+VEYogZPvqHPMfnqOx
      VaLv1OReBVYKua+GH4YuYVDH96v4XgnP28FztvH8Mr5bxPMKtJorBH4VITw0LY5p9WLHhokn
      JtpGnjiAHRtC15OoqvnUcYJIAC8lUkoqSxt89Vc/QQrBqT/7PvlDo88sfBEEbF6ZZeGn52lu
      l+k7OUmrXKO+Vngiww+COk5rHc8r4jnbHQMv4rk7nX2BMGgghIsQHgCqZqPrSXQ9hWn1YFo9
      2PYw8cQ48cQEpt2Hptkoyv7aTySAlwwpBKufX2X6Hz8lNdrH6T/7PnY2tS+/tSuEpV9cws4k
      mPitRzN8369Sr01TLV2kUr5EozZLGDYABU2LoxtJdCPTNmwzj2HmsKy+W8dWD7qWQFVNFNV4
      qhwmECFrtSI3d1YZy/RyvOfxEopIAC8RgeNx8+9+xsbFKQ58+00Ofv9dNGP/Z7CXQoJy7xXj
      pZT4XpFa9TrV8ldUy5dpNOYRoYtl95HKnCKdeY105lS7DK5ZbcNW9H2pMwgpKTSrXC8s89X2
      Ele3Fyk6dSzN4F+d/DZ/dPidxwovEsBLQmO7xFd/9RNaOxWO/cl3GXzz6AsZHSalxHW3qFdv
      UOmk8E5zFSEDYrER0plTpLNvkM6ewrIHUdX9beWVUlJxm9zcWeXK1gLXCitsNIqoisp4uo/T
      /eOc6jvA4dwQccN67PAjAbxgpJRsfTXL9b/5EDuf5vS//j2SA/mH3/iMCIMWrrtJrXqTaukS
      1cpXOK11QBKLHyCdPUUm+yapzElMq++xvSxPQtN3mSmuc3lrgWuFZZaq24RCMJLKc7x3lNf6
      JjjRO0rKjD11IhEJ4AUQ+gHVlS12ppYoXJ+nsVli4I3DHP+T76Lbj5+KPQwpBb5XwnE2cZrL
      NBtLNJtLOM1VXGeTMGyhqjrxxCTp3BtkMq+RypzEMHMoyv51WwhESNN3afgupVaNm8U1rmwt
      MFvaoBV4DCSyHO8Z5bX+cU72jpGzk2jPuBtFJIDngJQSt1KnOLNC4eYipdlV/EYLK5PAHg6J
      jbr0nTyMbrQrhpoWR9PjqKqJqhooqomm2qia9UCDDMMWrrOF42zQaizSbCziNFdpNZfxgxpS
      eKiajWX1Y8cGiSUmiMfHicVHiSUOYBiZpzb4QIQ0fJem71Jzm5TdBhWnScVtUnLqVN3257JT
      p+Y5BCLEFwFCSnJ2kqP5YU73HeB0/zgDiSy6GnmBXklEEFJZ3qQ0s8L29Xkam0UA0qP9JMYM
      ZH6OpryI6y6jqhYSgQhduGMiGBVFUVEUrVOp1FA1E02zUbUYmmajaTEURcdxNnBb7dQcJIaZ
      w7YHseOjnYaiA8TiI1h2f+eep/+/1D2HqeIqlzcXmC9vUnTq1D0HXwQEIkRIiaaoxA2LuGGR
      MmNkrDi5WJK0GSNtJcjaCdJmjJ54mp5YElN7vj1H7ykA4Tf54OfnOH3iCENDQ08ceLcJwKnU
      Kc2tUri+QHl+DbfawEon2t2CJ+KI9DzV+i+pVW+gaha5/DfoG/gemfxbgIKUIUJ4iKBFGLYI
      hUMYtAjDZnsLmgjhEQad49BBhA5CeJ0Go3Hs+Aix+Bi6nup4Y55dRToUgqXqNle2Frm0Nc90
      cR0v9BlM5DjeM9I2bCtOzk6SseJkrARpK4au6hiq9syLL8+Ce9ZonNIaM4srOE6Tf/EUAvhV
      R4QhtdUCO9NLFK4vUF9vz6OaGRtg+N2TZA6lcNUbFIv/wHLlKmrTINvzDsdO/c9k8++gG/dZ
      U/fZVwOeCCklJafBtcISFzfnuba9zE6rRtK0OdYzwl+e/i6v943Tl8jse1Flv7hnDuDWtple
      qzN5YJhE7MH/DSlC5mamafgKXm2b42//Olc//Sknv/W7xNVfvRzArTYoz6+xfWOB0uwqbrWO
      lUqQnRym7+QkybEUdedLClsfUi1fBlSyPe/Q2//b5Hq+gWGkX/QjPBA38JktbXBxa54rWwss
      VbaRwESmn9N9B3hz8CAHswPY+rPpivCiuWcOIIXg8198xObRk/zOb37zgQEoqkoiEcNS43i2
      ZHNpDs2II6RAiFd/SKQUgvp6geL0CsWpJWpr28hQkhrpZejtY+SPHSDWF6NSvUCp8B+Yv3IO
      IXzS2dOMH/p35Ht/A8O85dYMgpdrsHQr8NhuVLhZXOXS9iIzxTVqXoueeJpTvWP8weRbnOw9
      QNaOo9w2ldjL9hyPwr2GRN7bqauoDAz0USwWHxpo6DvML64xMj6JHU9T2tpgeGwYTVVRFflK
      5gBevUF5eZnC9DSlhXncZgl0B8X0Sb2dJDWeQYst4QWXWS3WqS/NIEKHVOYk44f+DT1938a0
      +l6KaQ6llDiBz06rylazwnqtxEajxHq9vdW8Jm7gY+kmR/ND/Iuj7/JG/wQj6V6MV7RY8zg8
      sFXDsh6ezWlGjF//jV/fOx4eGt77HL4kkx1LKQjDFoFfxfcr+F653WHLLbSP/QqBX+vsq7jN
      EiL0ICbgpMBUAFRUzULqSRpeHF2m0PUUVmyQnv7fJN/7LSy7/7HdiH4YsNkoo6CgKgqqonYS
      DxVVUdBVDVVR0Drn71fWdgKPklNns1Fhs15irV5ks1FmtVak4jZwOyl20rTpT2Toj2f57oFT
      DCSyDKfyjKR6iOnPttL8KnDPOkB1Y5ZWYpza5jyHDx954sD32wskRYjnFfC8EoFfwXOLeF4R
      3yvjeTsdQy/ieSWE8JDCR8q2IShYiJaK9E1kYIJnYlhZsiMTZEYmMIwMupFu91g0MhhmGkUx
      UFW945J8co9Gw3O4vLXAlxtzXNqap+y0O5IpCigoKMpuYaMtCoV2P532eQVNVdE64tAUFRSF
      stPAC32klCRMm75Ymv5ElqFUnsFElsFkjuFkjphuYWr700/nVeSeOcDszBQLlVkmJiafd3we
      iJQhreYK1fJlKqWLVMtX8LzinlGrWgxdT2IYaQwji2n1kEwdwTBze70SvTKUbg6bneYAABRF
      SURBVBTYurSEV3NJ9PbQe3KS3mPjpEf70cxn74eWUrLTqnFhY5YLG7PcKKzghgEHMn18f/JN
      Xu+fQFEUQiEIRNjepCAUYq+RyA8DAtm+LqXEFyF+2L4mkfTG0gwlcwwlcyTNWGTkj8hdApBS
      oJoJpFtgY3MTTj15DvAwrv/oIxqbRXKHRsgfHiM90o9m3oqSlCFOa41q+SvKpS+pli7iegVU
      xSCROkL/0B+Qzp7GMPOYZq7dwKMad/VEdGtNCtfnWTx7nerKJkYiRt/Jo4x84yTJ4b7HHmH1
      KAgpWa5uc259hi835pgrb6IpKkfzw/zF6e/y9uAh8rEk6j52NYh4OPfMATZXZmmJXoJqdV9/
      vP/UQdaaDqtfXGP+/bPocYvc8TS513UcOUOldBHP3UJRdOLJg/QNfp9M7k1S6RNo+oNnEwj9
      gOL0MhsXpyhcn0dKyB8Z4/Rf/D69x8b3JaUPRMjUziqfr01xeWuR9XqRhGHzWv84f3T4HU73
      j5M07Chlfom4Zx3Aq23x44/Po1sx/vD7v/XEgT+sDrDb9bayc4n16Y+pVi6jxOsoqIhqGlHq
      wxCTjJ7+LXqPHife8+AFJKSUVJc32bg0zdblGbx6k9RoP4NvHGXg9cOYqfgTGV+7Wb9dJAlv
      2wspCUTIQmWLc+szXNlapOw06I2neHvwEN8cOcqR3DCW/vJODNXt3FMArcICZ+fK9OczHD/8
      5PWAhwlg+vr/SmHzQ+z4GJns66TSJzDMLPH4QZobTdxai9rqNsWZFeobO1jpBImBPLFcitzB
      UTLjg6imzvrUAmtTc5S3dijuFCFjY030o/QkkLk4zaDdOavuOQh5a8bqUEqcwLujfL1b7m7v
      Q0LZbsuQyPbqlkiklKiKiqK0K6k5O7nXY3EomWcklX9lW0a7jXsLoLjMD3/yBYMjow9tCHsQ
      DxOA5xZBUR7aC1FKid90KC+ss3htiq/mpllL+GzlVcoJie/5CAVkZwPQVQ1bN4jpJjHdImaY
      JAybpGGTMG0ShkXSjBEzTExVx9B0dFVFU9quxl0Pi6FpdxzrqoahanueGkVRMFT9peznEvFw
      7lkH0HQTqRscGLh7FchniWk9eODHrvdkqrjK1e1lbu6ssm6UCI+EDCSzHMoNMZnsJZNIkTRt
      4oa1Z+C2Zuz51LVOah3xq4OUEi8UuEFAKwjaazLHbVKP0HZ1O/dtCPMaFaYW1jhy9NhTR/ZR
      CYVgvV5iqrjKtcIy08U1tpsVhJSMpno52jPMnxz7JsfyI+RjqSjV/RXiXgbd9H2avo/jBzT9
      gIbn4wRB+7wXEEqJ6GwA3xgd5DuTY4/1u/cUgKJq9GSzJJL7MxvBLoEIWapsM1Vc43phmani
      GiWnjq5qjGf6OTN0mJM9YxzOD5G2YpHL8CVESNkx0hA/DPHCEF8IvCDEEwI/DPFDgbd7LRS4
      Qbuu5XaO2/eJuwxaVRRsXcPWdSxdI24Y5OMxRowUcUMnbhjEOvu4oRO7x8LtD+OeAnBrBVrC
      oHTzCtf6ejl5ZOKpXtL9+D/P/SOfrFwnbthMZvv5rfHTHO8Z40h+CFtvr8oe8eKQUuKHgobv
      U3c9aq5H9Y69S931CUTbeG9HV9st1oaqoqsquqZiahqmpmKoGjFDp0fX0NXd8+1zbYNuG7Wp
      aajqbheR/bGFe1aCncoWS0WP6s4mr73+OtYT+swfVglerhZo+S4HMn1Y2tPND9PtyE7KKSUI
      JKFo/1uFFEjZ9nhJyZ5HS0i5dy6UgpYftA3baRv2rqE7ndRa0jbqmGGQNA1SlknaMklZFmnb
      JGEYmHrbkA1N7XThUFA7063sOgxeNu6ZA6i6zsc//msGj77NO/vQYLTLWLp338J+1dhNbdvF
      ghA3CHE7eycIaPlBp3wc4gYBTmffvh4ikXujKSVtd+3uwa0Urm3wu9+5HQWwdI2EaZK0DHoT
      MQ7ms7cZukncNNA6qfHLaMxPwl05gJSCzY110HTcVpPx8f1rB+hGpJQ0PJ+tRpPNepO1ap1i
      s4UThHvl33Yq3UYBTE3D0ttb+7NOTNewDX3vmqaqqICqqiiA3tlrqrLXXqF1DFfrrCegd7xj
      mqpgaRqmru19p1u4OweQkotfnsX1BYadeCQBuK0GqhmnWa+SzmSolUskMrn9iO8rRbsvfshO
      s8Vatc5mvcFGrUHd8xFSkjIN+pMJTg30EjP0jmHrmLq2V/kzNBWVXSN+OYsRzxMpJXgeol5H
      1mvIWhVRrSIqZYyjx9EPHX6s8O6xapjKkcPH8ELQ7cQjREiwOHWZ1MQ7bE1/xeixt5k6f5ZT
      3/k9El3mtPHDkEKjxWa9yXqtzla9SanlEEpJzNDpT8Q53tfDYCrBQDJOwjQiV24HKQSy2UA2
      Gsh6HVGtIqsVRK2GqJSQlQqiXkNWa0jXaQ82EQIUBSwLNZFETaUfWwDPZFqU2uY8dXsUp7iE
      26jitASTb7xFXAlfyhTLDUMqjkul5VJ23D2328NQAPVra25JCXXPY6PWpOy6eKHA1DR64nbH
      0BP0J2KkLRPtJXwXeB7SaSFvH+Koqvdfx0vV2kZ3FxLpeuC5SMe5tbkOstVEup3zrRZ0ruE6
      7c+dPUK0DVtKUBSUeAIlmURNp1GSqfY+lUbNZFDSGUgmIZ1G0Q3QNHhIYvLoQyIfAykC1rYr
      yLhBfy5PXdEYGkpgaSoqL25IZCAENdej4rjsNFtUWu19yXFp+j6hkCiwV7F7XMRt5fSEYdCX
      SvDaUD9D6QQ9sdhe2ft5In2/Y2TNdmpabyAadWS93jmut1PRZvPWOc9rG94diYAC94v6g55p
      N5zdsBQFTBPFNFFMC8W2UazOPpNBsfpR4vH2sR1rG/eukSeTbaPWtH1dVO+VnhgrFIJWEFDu
      pOSlpkOx1aLccqk4LkHHfWfpGlnbIhuzydk2PXGbTMwiF7MxVPWOwd6PirzNj/J1r4gUAoKg
      naqGIYS3fd49v7v3fWQYgNfZ+z4y8Dv7APzg1rHvt+/zvc4+gMBHel7b6FstEBJEeMsITbNt
      XLEYSjKJEoujplIoiWQ7dU0kUBIdY7udIOBuX1H7lLzXgHhF6Riy3f4ty0KxY20RqOre/mUr
      EbyUAhBS4gadpnDP7zTE+NQ9j4bnU/faDTNN3ycQsjMDmULGtsjYFvm4TS5mk43Z9MRsbEN/
      Ku+GdF1ErdYuk5ZLiHIZUS4jy0VEpdJOSf2gbeh+cMsAb08Nv378dTQddA1F19up3m62ruvt
      z8bu3kAxdNANFMNoXzdNlFi8XUxIJFAS7aKDEk+gmGbbAB9UrOliXqgAtupNVqs1Gp5PrdPw
      0vTbBh6EYq+YsdskHjcNEp2GmIRlkjINUpZFNmaRskx0VX3sFkPpOh3jrrYNu1RsG3pxp+1d
      KJWQreYdlS4llW6noqk0aj7fNjZNbxupprdTXU1rG6uug2GAprc/6zqKYXaM/TbDVpTOBp3J
      +ve2ly3V/FXihQrgH2/OMV8st/tymAYp0yRhGiQtg2SnQSZpmsQNfa85/HGMQUqJbLWQlXaK
      LYo7iFIJUSwgisW2sTcabcMWop1KJlNt487lUNMZ1FweNZtFyWZRsznUdLqdWmtaZJi/ArxQ
      Aew2/DxpX48911ml0jbsnULHwHcQpY6BO84tz4JloWayqNls27DzedRcT9vYM1nUTGTc3cZL
      VQeQUoLrIpsNRKPjE65VEbVq53Ot7cWo1doNIc1Gu7LWmYBIicU7KXUWNd/TMfKetqHn8yix
      +L57FSJeLV6oALwvfol/5XLbqHfddbtuOdEZuqiqt/zByWSngpdCTaXbZe90um3ouTyKbUeV
      vYjHYv/Xu3kAolZDhiHawCBKKoWaTLUNvOMHVlIplFgMlMiLEXE3oRA4bkDD8XH9kHzaJmE/
      3oiwl6oIFNEFSEEgJKGAIAwRQuIHot0T1gtoOgEtz6fe8mm0PBwvoNHyabr+XXvHDfY6DwoJ
      v/PWCH/+e28+VnReaA7w1EgJMoB9XqnwmSNCEB6ELgRN2J2pQtXauR3KrWdS9b1jgUooNYQQ
      hEK2p2cREikkgZB3zcQd7p4TPoQOhB5BGEDo7R1L4RH6HiIMCITED0KCcNcoJUHYNs7d4zCU
      +GFIENI5F3bOSfwQAqnhS51QagQCfKEQSI2wc96X+m1NI7KzZ2/WjV1MxcNWXWKqS1xziKsO
      cc2hRw9JGgF2TBA3JUkjJG4I4oZg6PBvAq+yAKQAvwZeFbwKuCXwSu29X2vvnZ32Na/U3ode
      p5XRANUE1QLNbB9rJiidvWq1jUmzOt8zbvvObUUrRWtvX0fROsZ41wWQYcegHAhaEDrIwMHz
      PJqBSsuT1F1J3dOoeyp1T6UR2tSCOI3QpimsPQPZNfJdIxKoBFInkDqiPayEu/r1d/7cMyvf
      +0LH2O7Z6q187bMCqOiagq6pt23aHecMXUWzVAxdQ1cVErp2x/cNvb2pqtKeXWP3nKaiqSE6
      IYYadEaOCWJ6QNyAhCnRdR1VM1B0C0Vrr5OGZt/63yideO7u9z4/Hi+0CLQz9T6bC5cQbg3c
      IvjVduqIQAhJyD3K/IqOrybByoOZRWhxfM/pbC08zyEIJUEntfGEsZfy+FLHF/odx54wMJQQ
      RZHoSoChhKgIdCVEUwJ0RaAgMJSwc253E+hKgIYgkBoNEaMWJmiEMRphjFoYxxMmAgWJguw8
      i2loxC2dmGWQTpjELYNkzOwYiYqqqe3hhJqK1hlW2DaozqS4qkSXLqoSogsHXQlQpd9+z7rd
      FrdmoWoWmq53cpK2YWja3e5mTVX3hh0auoqmtQ3U0Nvx3XUH707cu/v59muvMi80B/jB1RTn
      po4/VRiKQjtl0VR0vZ0aGZqKpu+mNtpeSmRpGimjk4p1Bpjoukoo2oILQkkYtosVQSgIwrBT
      1JC0glvFjiAUhGG7DSMIBZqmkLRNknGTvN026FTcJBlrb4mYQdwySMVNTEPrNPDu3zjXiEfn
      qXMAEXpcvvQVZiJDY2eF42e+zZVfvM/p7/w+iYcskeQHIU333iuN6Jp6z8xa1+8+/yJSqb3y
      K7y0410jHs5T5wBh0KSnfwLfLWMPDLK1NIMZe7R1sAxdI6O/ml6iPdG94HhEPB1P7VjXjSS1
      8gpSM4klMniOw+iBEbTIMiJeAaJ2gIiuZt8EcK8VIqWUd5SVhRCot7Xufv36vY6Bpw7jed7/
      MsRhv+9/GeLwKP8H9R4DcvbNC6Q+QrcFRVEe6Xv7GcazuH93e5FxeJH3vwxxeNL797UIFBHx
      svNc2wFatTKLK2uksj1UdrZI5vsJ6iU81aI3ZVGstjh46BD6/YQsAmZm5whVE1vxaHgqvVmb
      ze0Kw8MDFLY2UGN5jkwM3ycAKG6ts765Te/gINsbmwyOjLG5tkwy24dXL+BJkxPHj6LeJ0EP
      3CazC0tY8QxevYBqZ7EUj3IzoD8bZ7tQZPzYaVLWfeo+UrIwN0MzUMjEVIpVj4MTQ0zPr/Ha
      sXGu3ZilZ2CY4YGe+z7DxuoShWKV3r4etrd3ODAxwczNGd488zpz178iN3qU3rR93/tbtTKL
      q2ukMj2Ud7ZI5fpR3SIyOURMNtjYKnHw6HHi1n3MI/SZnp0D3UYXDq7QGepNs7pdZXKkl8WV
      NdL5fob77/8MW+srbG6VGBjuY2tji9HxQ9yYusk3z7xFq7rD7GqF104euu/9vlNndmGFeCpL
      s7KNmciT1APqoUFM9ak2PcYnD2IbD66DPtfulXYyQzJm4jk18kMHCRolpJHCViRLK6v4bgvH
      9e8fgKLR15NF1zRCNPIJha2Ky9HxPlrSJJ1MMDjY98A45Hp60TWNSrnM0ZOn2Zq7Qm70MKHX
      oNVyaDnOA+/XzBi5VALd8NDNPlTh44cK/ZbBVqNBLKayulR4YBj9fb2omoYbSA70GLTUNHFL
      p1bYYPjIaZxG+YH39/b1oWoa1XqTE4fHKdcaZNMJJAoD/b34/oMXaLaTGZK2iduo0TdykMBp
      MDDQj+8H5Hv60DX1rulf7kDV6c1n0XQdqeokLbDTveiKIBZPILwWgXhwkXD3GcqVBidPn6BY
      KJDPpJBIVrfK2Jp44P26lSCbjKHgEEsMQeDSOzBEGLioikLoOTjewxeqfq4C2FqcZq3UIplM
      sbE0g6cYtKrblJsOmWQCKQXevWYc6CD8Jhev3MSyLNxWnY2dBnE95ObcGklbp+5KkvaDO8Zd
      u3KRQDVIxixuXr9KvHeUjYVpvKDd0QsRPnCeoFZpnRuLm5hGilpllYbrE7gNlstVxnp7cVoB
      fYP3nxVPSsH5Ly9iWxah5zC/XkVxS6yuruIqOotTVxHKg7v0XrxwHsOysDS4Pj2HqSmsrq6y
      uV1gdWWZtfWNB96/tTjFWqlFKp1kbWkGTyqsr6ywtrbG5YsXkJr5wG41oVvj0tUZLNPEadQo
      lFvUSpusrq6ytb2DbidwGrUHxuHShfPopknMVLh+9TqGHWNtbZX19Q2ECFle3eBBEqhvLzO9
      uoNtpyjtLNH0QzbXV1hdXQPNAEIc5wGJaYfnWgeQst3lQFFV2K2lS4nszB4sZfva/d69lBIh
      RKfSCVLu7m/V+B9WGd31Tqmqunff7Xt4cAX+9jjc/nu3h/Eo94OCqnZ+m/bw0Nvfy4OeQ4gQ
      KbnjGXbj1H6Gdl+i+8fh7v+D7Ewhc/sz3C8O9/o/0Fk7TVFVZMcj8+BnuPv/sBvm7ece9h7b
      S2vtvnux917E7jPcN4Q2USU4oquJhlhFdDWRACK6mkgALyFTl86ysbPD+UvXX3RUfuWJ6gAv
      IaFb59//+//Af/Uv/5j/+H//P4wffwN36yb9h08xfWWRP/2Lf0lfJvaio/krwcs1JDICAM1K
      MjJ+gLSpMDB6kFOHB1iX27SadY699nZk/M+QKAd4Sdl1j8rOXPm7A28gGnzzLIkEENHVRJXg
      iK7m/wdITIy5ib8dIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Graduates who prefer Part Time' width='192'>
      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
      gyPwXXLVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Industry Salaries (Year &lt; 5)' width='192'>
      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
      tf8HevQVv17l2doAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Industry Salaries (Year &gt; 5)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdlklEQVR4nO3d13Nk153Y8e+5oW/ngNgIgzA5YIZBpiSKlMSVtJa25JLK5VDlB9v/gMtl
      P/idf4Bf7dd9c7nK3vLaql3JRZVW1HJpxiE5CTODnBtAN9C5+2Y/YALB6R4EAt0A+nzecPve
      gx8uzq9v+t1zhO/7PpLUoZR2ByBJ7SQTQOpoMgGkjiYTQOpoMgGkjiYTQDpzKuuzfDm1tmtZ
      Lb/MvanVF9bVWhWUJLWKVc6xklWZ/vRDvGCAm+M9LCwvoAR6yWwVobyKISyM5JA8AkhnlYdq
      xNF9m9m5NW7duobwbPLFMrlcjr7eXhZnZxHyQZh01pjFTdZr4FVNwCYZCTC9uEp6eJzM4gxG
      NEXC8NgsuTIBpM4mT4GkjiYTQOpox5IAlUrlOJqVTpHT0geOJQEcxzmOZqVT5LT0AXkKJHU0
      mQBSR5MJIHU0mQBSRzvbCeD71Gp1nj7pcx2Hbz72syzr4M26DrbjNfmVPqViAcfd+dxzHQqF
      Aq7n4zoWlWqNWqVMrW7ieY2eQfpUKyUqtfqB45IOTn333XffPepGTdMkGAwedbMH5jk13n//
      Q4ZHx6jmN7lz5z6xZJLVlSXMeo2aI7DqVXzPYWlxmXgiztzMDELARx99RLKrm0oxj+14LCwu
      YWg2H374FV1dUero5NeXcEQA1yyzuLJOKpnELG3yaHaVQqlKb0+Sh/fv4vmwsp5j9t7nbBYq
      3Ln9BZFUN+FQiJWFWQLhKMsLc4RiSTyzyOTUEoqmoghQfJua5bG2vAB6CLOcZ2V9m1Q8wvzs
      LMFonHqlwMbaGre/vENP/xCGrrZ715+YPrCXM10NmpmfoacvxcLKOna9ylB/N1srKyQG4swt
      msRDGRzbRvF9RgYTTD5axHEtuvUQ/ek0EbXKV5kqF9Mu9coGS5s66f4hgl6Zx8slwuEIWwuz
      oHgMJQJkKpD0BZvrq1yZeA3P9/EVg5HRMR48mKS3f5Txq+d5HOsi4BRZnikQHRohO/+ITNGi
      UJ/llWvjhAM+29tFits5Rrp0VqohgqE4ywtz6IpgIK7x8Z0HXBw/z+z0FNVygVuvvk7ZcoiF
      9Hbv9lPlTJ8CFR2F8bHzuJUt7Eqetc08mm4QCgWJRSLomo6qqhjhCKFQiGAojObWyW6XqJW2
      KdYcBtL95PN5VCOI8ATlwjoV08UIhclvLOMIjUgkRjBoIIBqqUxPXw/zc4sgBIbmcffuV2ih
      GKq6882sqgqKohKJR1mdmwUjREDTGRzoxXUtHBeseh3hWzyeW0YAa0vzKHoQq1ZmZi3PUE+S
      xblpNCNCT1+agKZS3s5Sqtlt3eenzbEUwxUKBRKJxFE327HqpQJVX6MrHmF1ZZXBocF2h7Sn
      09IHniVAuVzGdd0jabRarRIOh4+kLel0Oi194Nk1QDQaPdKGT0P2S8frNPSBM30NIEl7kQkg
      dTSZAFJHO3AC+J5DtWbi+x657CaO52NZFq5lYruNn45K0kl14Adhq4tzZGs+g1GVEgbrU3MY
      uo9ZrXLx2o3jiFGSjs2BE2BweJTi7ALVmsfQpSEWH0+Ty6wQ6hpBVwSu6+J53ql5IUI6Hqel
      DxwwAXwW5mZYXVln4upF7n/5FcmeAfpDBqpdp1BzSIZ1FEVB0850lYW0h9PSB+STYOlYnJY+
      IO8CSR1NJoDU0WQCSB1NJoDU0U7+ZfoJ4Ps+3pN7BYoQCCHaHJF0VGQC7MGyXT64u8R2cecd
      3a5EiLcmhgmcgNcOpW9PJsBLeL7P7z+f49poD++8unNLb24tzx9uz/Pz756XR4IzQF4DvESx
      bCKEYCydQFEEiiI4P5jE9XxK1YOPJiGdPDIBXqJuOYQNbdc3vRCCUEDDtI/m7TmpvQ6dAL7v
      Ua1W8Xx/p/7HdXAbjnNzeqViQbKF2rMxfgBsx2WrVCMRMdoYmXRUDn0NsDI/S83xsHydoObh
      1CqMXplAVc7OeXFAV5kY7+Vv/t80ty70gQ93ZjZ45WI/uiYPnmfBoRMgoGtsVSvUa3UqZo5Q
      zxiGevaqQS8MJuiKGUwtbyMEvHVzkGQ0eGQDCJxVp6UPHDoBYokEG9tF+gbSeFYMYVXPbDVo
      bypKb+poBw04605LHzh0hKFYiombqaOMRZJaTp7ISh1NJoDU0WQCSB1NJoDU0WQCSB1NJoDU
      0WQCSB3t5D+pkNquWrf5cnqdrWKNrliIVy/1Ew6ejZlo5BFAeqlq3eZvP5pmoDvKn70+ykBP
      lL/9aJpq/WzMRCOPANJLffpwle9dH+JcXxyA8YEAuqrw6cNVfvzqaJuj+/YOnQCbSzMsbVUw
      QjGCuo9XqzB08TrhgHxV8CzZKtZ5cyKya1l/V4RPHq62KaKjdegE0HQN27YJRRRyq7OEesYI
      6cqZqQZV7/1nhP/yik9fCeDe+I8tiqi1lM2PUTJ/JJZNkv/0d/QFy88+y5tRYlkNvvgrvPQ7
      eL3fe2H709IHDp0A5XKNRCKBZdbpHhjBq5cpmw6x4BmpBl34P+C9/DxXqCG0V/5TiwJqsdIM
      zP81b7hR3rv7ff4s+SlJrUTeifF+/g3+PPURzJdRIsMoA2+9sPlp6QOHjnD4wmUs00IPGICP
      ADzOzssw0o6EVuYnyU/4pDRB2Q0TVav8JPkJCa2898anwKETQAgF49lM4DsdX579n01depFf
      dH3Y7jCOhbwNKnU0mQBSR5MJIHU0mQBSR5MJIHU0mQBSR5MJIHU0mQBSRzv5z6ol6QB8z8PL
      buJt5VBS3Si9vQil+ff8oROgkNtgeW2dmqPS0xXBN6v0j16W1aBS2/iui/XBnwBQ+vpxHk3i
      P7iH8aN3EGrjfnnoBEh091ErFwj0jjP95QeEukcZO0vVoLBnZZMPuKf872xG8bx9nR97nofX
      YB+0sg+slSosFEp0L85RqttYV67vfDASR3/8kMQHH5AdvcBIIsZgbHdp96ETwPcctmtwLazR
      nT6HXS1Rtz1CAfXUVAJ+WwLO7t/5ktOG3aspKA32QSv7wHqlxsdLa7w2Ocm9SxPYS2vPPlP1
      CK9O3uFzJYyuKoykdk/e/S0iFFy4MA7AyLkRNAUsb49NJOkYeYqC4rnA8/eVVc/FEwe8Bihv
      b/DRJ7cpVmokunr5/pvfI2LsfglaKCqBJ+3q+s5nhjz9l9poqX+Yi4szPLhwDV9REJ7HxcUZ
      lgaGm27TMAFy+RJv/ugdApqgXCySy24RGeo/tsAl6ShsJbsIWXW+c/82th5Ad2wyPf1kk91N
      t2mYAKPjF/j8s48pbueoKxH+4qc/PragJenICMFK/xBrPWl0x8bRdNwmd3+eanoNoNg1jJ5R
      zsWCzVaRpBPJU1XMPTr+U00TwDGrVJ0SWm/XkQV2LEpzUJzZe734JYid/mE8pKPVNAHGr95k
      dmGVunnCB0Ba/SM8+K97rzfxH2QCSC9oen9o6tEk9ybvMT093cp4JKmlmh4B+ofP4wsFS4u3
      Mh5JaqmmR4B6KUve0uiJyQmhpbOraQJ4rsfq3CSLG8VWxiNJLdXwFCizOE3P+E3+zc1/hB4I
      NNzQrOR5NLNIengMs1YEq0b30HlZDSqdKg0ToG9whD/89n+zWvK4dHWCN1+/8cI6q3PzeGqA
      crlMdnmGUPc5httQDfr1qkXPh6ydYstJ0K0V6Na3UZ6UdDarWmxGVoOenmpQz9tfEZrn+S/E
      1DAB1hYe48eH+ed//h2CgcbXyZF4BDXQTXlrg67+IeqVMrbnE1BbXA36pGrR9QV/yH8XgD59
      my8qV9CEyzuJz1CE37Rq8duQ1aAnoxpU2Xes4oWYGkY4dGGCoQs7mdWs8d5zF8isLDN+8SJ4
      DoYKdccjoLbnLcu7lcv06tu8EnmMEOD7cLt8jfvVC9yMyFu5UmMNe+vDe5+ztvCY//bf/wfv
      /f2nDTcUQmFgeIRQQCMUDKLoQcJG+74N5+pDXA/PIsTT+OB6eJa5+lDbYpJOvoYJoHgWv33v
      D/z81/+CkDBbHdOhKHg4/u4LcAcFFfmSgtRcw6/sy7fe5PKtNwHoffvtlgZ0WDcjU3xUusWP
      E5+hCh/XV/i4eIsJefojvUTTc5Zqfp0/3Z7hFz/5QSvjObTx4ApFN8JfZ39CWK1TdYNcCi8w
      YqztvbHUsZomwOTkFANxlUzRIh1v/CzgJBECXo0+5np4lrpnEFRMAsrZvEX5gtyX4O9xqicU
      6H61NfGcIo1fiSyXuXB9gkQ8SrFYpVyxiUYijVY9cQKK0zkd/6kP/h14O9dqvg+mv/OFZQjr
      2U0B1CD86u/bFODJ1fiVyNVZ7jyaxzQtgqEwt77z/VOTAJ2s5hr8XeENLO/JO9qKxTuJzwip
      p+NGRjs0fiXy8i1GL99qdSzSt+D5gvfy3+eN2H3SgSwAGbOH9/Lf5590vS/HwGyi6X55dPdT
      3vv9H5hfzuD5fitjkg6h4EQxhE1azyLYeUqdDmQJCJuCG2t3eCdW0wQwdJ1yqcj9O1/w2VeT
      rYxJOgTb1wkoXzvnZ+fGQECxsb0zWq5xBJrumYoJv/z1rwkoAr/BEaBa3GByeo3h0TE8u4qw
      TeL952Q1aJuktAI5O4np6RjKzmuspqezZSdIaUW+PliU9FzTBKhtL/OXf/kV12+9xg/fePF6
      wKrXQRHYjsva3BTB1BD9ba4GfZmzXA2qAppweSN2n7/Z+hGXQ/MAPK6N8UbsHppw8dEOFGtH
      V4MCdKfPkVgvYdtWw88D4RQ3b6SZfDBFqjdNtVLB80FtUzXo3qud8WpQAaPBNXr07Wf1Tz9P
      /QMRtf5shQPF2snVoAA1RzAy0IOrNP4eDOgaszOzXLx6Gd+xCKo+VdMhFpKH2naKqHUmIvsY
      JkYCmiTAysw9vvjqLvg+6fONh5XTjBCXr17d+eHJuKHyXoN02jR9H+BXXX3cm5wmcdIHxpKk
      b6HpKdDde/cp1UwcH7g01rqIJKmFmibApSs3yK4vYaqJZqtI0qnX8PJ56v5t1GCIO3fusZZZ
      b3VMktQyDRPA0AS/+av/ySs//CVxOS6WdIY1PAUaufIa//bKa/i+jz/8ZqtjkqSW2fMJwqNH
      D1sRhyS1RfMHYeUCK5lNNEO+ByCdXU2PALc//4RyuYyiySe70tnV9AgQNXQeT0+THlW4MDL4
      4gq+z9S9j/DiVzAo7cwUPyZnipdOl6alEFs1D8s0se3GFX2FXIZQsoeS7bGxNkuoZ6wtM8XL
      atD9xuqfiGrQT1bWcfd4wUpB8L3h/c9KevTVoELB9WBwcJCuVOMJMhzXI5/bJGs6nBsYwa6W
      qNke4VbPFC+rQfdFnJBq0M+WM9h7dFhVCN4a2/+IfkdeDRqOxAkEsigINLXxTuvuH6KrN43t
      gsBDU8CWb05Kp0zD3i0UBeH7OJ6P+pLBbp/PFr9z3n/yRw+SpN0a9u5CLsPy2jrZ7CabW/lW
      xyRJLdN4WJSrrzN69XV838d15eCy0tm159XD3btftSIOSWqLprcFPvvg98xn8uTz2yjhHl65
      MtLKuCSpJZrfFxOCrp4egtE4VmkLkAkgnT1NEyCRTFEvunz3e28SMmQ5hHQ2Nb0GODd2nuzC
      ff7X795H3eeDBkk6bZoeAdbX1njtBz/F2/Mhu7Rv9RzUN/deL9gLwcajcUhHq2ECrM7e49Mv
      H7GyluGf/ct/1eqYzq7F38D9/7L3ehP/Hi796+OPp918H9VzAXAVlV0Dm7ZI41KIWIpkPMLm
      Jqxntxjuf3FolGpxi9nFVQLhBKGA2JkpfljOFC/tj+bYXJl7TNDcGbnODBg8PH8Fp8Xl9w0T
      INk7xM/+8RA/9T1My264YSgSR/UXQCisLU4R6h5p+0zxL3MSqkHbG+vJqAb1AXyfG9MPWEqf
      YyuRAiBV3ObG1AO+unoLhDhQ/zmWsUFhZy7goNH4rfharcbw2AWmZxbo6h/GbPNM8XuvdgKq
      Qdsa68moBhVAyKzhC7HT+Z+c9mzHUwxnVgjXa5jhyIFiPZaxQfei6xrrqxmuXLuK4rsE2jxT
      vHR6aI6Lrel8czIDW9fRHJtWTuh0+AQwQoyPjz/9CYDwUUQknXnVUIhItYLqOrhPyu1V1yFa
      KVMZae076KfjbQ7pTHEVlYXBUV6d/Irl/iEQguHMCouDI7iqSitvo8gEkFpPCDa7eylGY6Sz
      OyMP3rt0HdMItjwUmQBS25hGkIWh0bbGIBOgTUpuiM9KE+SdGEmtyBux+0TVWrvD6jjylk0b
      lNwQv9t6myuhOX7Z9SeuhBb47dbblN1Qu0PrODIB2uDT4k3ejn/BoJEloDgMGpv8IP4ln5Zu
      tDu0jiMToA3ybowefXvXsl59m7zTeAga6fjIBGiDhFoi5yR3LcvZSRJaqU0RdS6ZAG3w3dg9
      /lR4nXWrC8dXyFhdfFB8jTdi99sdWsc59F2gWmmLmYVVwvEugrpA2HUS6RFZDboPMa3KX6T+
      gY9LNyk4URJamV+k/oGYWm13aB3n0AkQjKYY7jfJVjxW5qcJpoZIy2rQl/p6rDGtys9SHzdc
      78xXg+7DiagGfZnyVoZsDS6ODTHtVOVM8fsLYp+rne1q0P048dWgCBWztMnKeoCBgUEMDTlT
      vHTqHDoBYl193Ojq273sW4cjSa0l7wJJHU0mgNTRZAJIHU0mgNTRZAJIHU0mgNTRZAJIHU0m
      gNTRZAJIHe3QCeBYNT69/SUA6xsbbK4tUbXcIwtMklrhW9UCBZ9MnLE09xgjnmYiLatBX0bx
      /DM4NqjfmdWgmh5AVXZ2ezzVQ71Ww+NJdaCioKotei9A2V99oVDEscR0oDb3Ofy3EMez/w7U
      5j4rLJvt12Z9YL/VoAeJVeyzDygNYj10AlQKOSzTYmFlnXR6EEP1qdafV4OKlo31vs9OhTjy
      8ecFHKzNfa4qxAHb3devPvq/f6ddmrb7bfrAQbYVB5jE5ZvtHjoBIoluXn119ywmjceRlqST
      S94FkjqaTACpo8kEkDqaTACpo8kEkDqaTACpo8kEkDpa2+YHqNQt5tcKCAFj6SThoBxORWq9
      lh8BfN9nPpPn/348i+f7OK7Pbz+eYWmjiO/vt1JEko7GoY8Adr3Mo8czpEcuIdwaimdjJHr3
      HBvUdjw+e7jGr966TEDfWffyuS5+8+EU//SHV9DUVpVQSNK3SIDM0grj12+yPDONWSsiAjEm
      evrxPA/XdbEs69k3uhACIQR6bYlc3qI3WEWvLcCTGYEMIKWVKaxP0RUNYBmDz36Poij4vv9C
      W8+XhRDBYQTgfe0I8rTm4/lRJYhi23u09XyZZwyBZz9f9o32FSHw1SC++XxW271jDSOMYYR4
      MdZd7fuhA8XqG4P4ntU0ViEEKMYBYw3tL1bCL8QKOxWajfpAVFOwXXYt+3o1p1AEqlAwDxCr
      4rnENPXJMo+nYeyst1MFCqB6HvY396t/yPOO5elHJEYusDI7i+tUcfwANyeuge9TKBSIxWK7
      AgbQ7C1yJYvb0zl+9lr6WQmT78NvP1vlrRt9xMM6jpbatcN31tndVqNl/jf/6Xsse1lbx93+
      WY4VoFKpEI1GT/y+OPQRIH3uHI+nJhkYuYTv1AgqHuW6QzykNx8cV+sjZfhUH1fZqEXpS+1M
      rb2WK+OqUeJdgztHisMGJZ0YQhxwMN42OfQR4GUKhQKJRKLp59W6zd99sYDjePj4GLrGO6+N
      EDJk1z8r9uoDJ0VbEgB2DkF1y0UARkBt4fsDUiuclgRo2zFKCEHIOPmHSOlsk0+CpY4mE0Dq
      aDIBpI4mE0DqaM+uQqvV6r7HV9lLvV5v3bAo0ol0WvrAswQwjKMb08G2bUKh0L7W9X1/X7dA
      Xdfd9w7db5vH1a7ruiiKsq91z2qsx9UHjjrWZwlwlNl6HANjPa3/OOrnBUKIfU+zeZA2Oz3W
      09IHju0aIJfL4jtVcvkSD766w9Ts4pP6C5/52Rkc78Xnb9VKCdt9stxzqZvW80AVBSF8crkt
      sCpkCyUe3L3L1Owinu9T2trg3v37rKznXmjXdx1KlcazsCuKsjvWO89jLW+tc+feA7L5EuVi
      kWYniJ7rYNnOrjZ9u85WsUolv02pUuTunTssrKzjA5tri9y/f5/tUm2/u/NZu6WtHJYH2VyO
      bGaZe/fvs1WsAj5zMzO4nk92ZY5sydyzvadt1krbPHjwgHz5xXgcs0LVbDTmq0sutw1WmWyh
      xP27d5meW9pVd1Mv5Vhe335hS9/3KZZKz9er1xsH53sv9AHPMXn8cJLN7VLjbZ60Xzeb//2+
      7z37/NieRK0sLaL7XWyUVIQWR1gVLN9Hdy0K2XXUWB9ecQ1bCREUJhVXoyemY5kmC8sZ0t1R
      bj9c5Edv/4DIswdmHitLyxgDMdarOiIQR/Nq1G2P4naJ9LkhVuZXwDVJRgzKNZO1jS3Oj41S
      MW2WZh9hq2FeuX5ld6zLiwToZj2vINQ4ilXF9HzKWzmGL11lbWqSRFcK17VYW8+RSsbZ3Mwx
      MjLE/MIyQc1jJWfy1lvfJfDkK8WzKixnysSsMnpPkljPIPXtDbyhfoqVGiOjo+jCZi1T3OnY
      21mEEXuyL3SiQZVkWMMMdJMKP/835TfX0BWDtZVVoprG5WtXmH48S1f8EsXNVTa70hQzi1hO
      jOzyNOFEL04pS6nmcuHSGAuz8/QMjdHf9XxS25WlZVL954gYgseTD9AiSajnKdccRod7sTXB
      3ONpwsleAn4NiyDjI70sLy5jDIRYr4cQRhLfrmC5Poa28w29srZJ3VNIBV1mFtcZGU6zsLTK
      yPh5auUymaU5Qql+Ht/9gis3X8epbGOKIFHdZTtfJJVKcufRHD98+4dEgzv7YHF2loGxS4Q1
      jwf37qJHkgT8GsVyjcHBQZbX1unvSfHl3Qe8/soE69kiqXiM3r4EhUKVzcwakWiEh9OzvPWj
      d47vCFCtlNjaygOwtjhFpmASEIKt1QXKIsjqwhyaruHYFoqqYVkWlWIeFxVNE6h6mJGx81/r
      /DtqlTK57Ty+D5mlaZazVUK6Cr7L9lYeVdfIFwqYtTKmDbomqFUrFMsVjEiCaIM3z6qVErmt
      PD6QWZxitVDDeDLepBAKmqqyXShQq5boHRhlZXEe33dZmllg9PoE54YGGD9//lnnf6pczJMv
      7HxTzdy7TUUEUQHPtsjlcriqwezkPVTFY3Vzm3q9TrHucPn8CIVCHrtWpGp947jje2xv5ajU
      TDy7xgfv/5Hu9DAAsZ4BcouPCEaTWPUqlu2xuroMWpCRnjAb+RKe77CyurGryYvXbuCWskze
      +YKV7drON7JmMNoXYTtfZC2zTvfQBcxygVKlzui5wSf/ixK57QIAqwuP2MibBNSnO8Ejs7rG
      +vIypq+gqQLLdtA1lXrNpFAsous6pmmRPjfKYF+KcrXKyuoqpuMzcXGIOkFGxs4/6/wAjuej
      6xpOcYNg7xhuvYSDxoWxfkoVB10VCD3M6NgYhl8nNTBCvVjAcS2yS1OEBy8zMnKO0fFxYkEd
      9d133313Px36IEzTJBqLMzSYxvM1evvS9CZ0fD1C3Xa5duUymuLjOxaWKzACgrrt0Z1KoKoa
      pVKBRHc/la0MuhHA9QW1Wp2goaPpIYYH+3AVnd7eNP3JAJ4WQhMOW/ki4XCcaAAy2QLJZIJq
      tUIs2YURCBA0AjsX+46Nh0/NdDECGppu7MTKTqz9yQCeHkbzHeaXlujqTRMJBohEooRDYUIB
      hUrdYWR8hMXpacKJLnKZVYxQEHCp1R0CukoolqI/FUcPhegfHCVInWA0jmtWKZaq6JpC39A5
      LMtBwyEYTRA3BGu5EpEAZLJFurtS2Laz8/cHDXzPo3dgmJCuEI7EuHrjGtsbWRLJOJ7ro+LR
      OzAAQsGq14hE46QScUJBA08o1Gt14skUwnOp1+sEg0Gy6yvkChUGRi8gzDLheJJYJEQoZKDo
      BvFUN5vLM4STPSTjUSKRCMDO/2KgD1fo9PUN0BtTsT2B44O1vUrXyFWuX0izsVXFMutEo1Gq
      lTLRRJJgQMWum6AFSQZVtqsWjlkjEIrS250iHArhqgb17QyaEcT1BLVajd6eJFOPHqNEu6hs
      LqFHUsRjEcLBII7rU62Wiad6qBY2CUZTRGIxAsJiYWmd7uHzVNbnIRChVsihGaH2FcNJZ9tp
      6QPyQZjU0WQCSB1NJoDU0f4/i53lPu1z6TkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Industry Salary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Industry with Wage Increase' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NS graduates' width='192'>
      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
      i97GDWCA/w9ill3qPrAo+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='No. of Graduates from Courses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Average salary of Poly Graduates' width='192'>
      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
      PR08AXh0Nf8/S2KX/xbPPKYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Average salary of Uni Graduates' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Poly Salary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Uni Salary' width='192'>
      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
      i3HVxfEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Part time Job' width='192'>
      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
      zAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Poly Enrolment' width='192'>
      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
      /j8aDFoETM3vIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Poly Salary (Line)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZhklEQVR4nO3d+VOcd57Y8fdz9N0c3RwCBDQgECAkIcmWLI3tsUfyMTPr8exUJlvJ1FSy
      VanKVn7I/7E/b2qTqiSVZHfLmY3n8CTlnVnP5RnflnUhCQHivu9uoO9+rvyAZMuyaWSDmob+
      vH6RoB94Pi19P/09nu+hOI7jIEQJUhRFUfc6CCH2kiSAKGmSAKKkSQKIkiYJIEqaJIAoaZIA
      oqRJAoiSJgkgSpokgChpkgB7wLZMDNPCcWxyhvGVf940cqSzOXAcsukUqXQGmdHy9eh7HUAp
      Sq2O8/M/jvHCyUpurgZ46akuLMfBpeuYhgGKiq6p2I6D44Cua1iWiWU76JrGz/7uv9P29Ldp
      DyZ5891hIk21nH7yPAG3ioINyr2ftW1UVUPBAUXFMg2Ue1+rmoZtWaiajqLs9b/I3pEE2APB
      2g4ivqu88f4Kf/mvXuHnP/spmm3Q+fSLrI32c7t/hO+8cIJ/+KdbfOO557h4JsJP/u4nBAMu
      ajvPMjw+R/uzKqrmIr6+RsMzT2PF+nnjWpZ6exB3Uxe/fetDThxrYsOuosmZwtfaxd2RJXLp
      DRp8Fi3PvMLV37zJD3/8Y9wlnADSBNojJ3u7qGk4AskV7o7NUlHbiD+7zMDkIlZyjbjh0Nb7
      NBfPdkNygUywlRe+cZLJhSSRSAvHO1uoqO/kP/z7H3Pr7Z8zMB//3O9v6nyCV175PiRnmUlr
      uJaGWEubNLW08Y1nz/HBmz+lsvUU7hIvASX+9veO21dBY12YQFUTZ4+3YjmgewNUBLzUNbdQ
      Vham+VDl5sVlrXSGkvzuygTfunCcxkgzGrC+MM6v/vn3qJUROluPQmqKlaxOZUUlkcM1KKrK
      8dZaalqPcezCS1TpGRwHvFXtmIkop3s79vTfoBgosh6g9ETnx/hkaIkXnzuPWsLNH0VRFEkA
      UbJkQYwoeZIAoqRJAoiSJgkgSpokgChpkgCipBV0KoRt29i2LRO3RNHYk+cApmmi6zINSewt
      RVGUHZXCxOoCd8amsVQPTx1r4I+X71IZDnHiaDM3rt9C8ZZzqqeNm9dvYOoBzpw6jl7Kjx5F
      0dlRDeA4DpaR5crVPjoa/Hw8luR4dwd6chm1OoKxPE7SAH9VI97MPDl/E43VfqkBRFHYhSfB
      DiODt0F1U9Z8nO8+/xTRybtEMxYeXUN3uTBMC7euo7vdOJa1O5ELsUt29DG8tjhDytJJJzaI
      Ls0xO7tIPGtzur2KmzeuoqDQe7yDvlvXAYXTT0V2KWwhdscOm0A2pmmhqhqqqmBZJsq9v9uW
      BYqKpipYlgWoaNpmhSNNIFEM9mw2qCSAKAYyG1SUPEkAUdIkAURJkwQQJU0SQJQ0SQBR0iQB
      REmTBBAlTRJAlDRJAFHSJAFESZMEECVNEkCUNEkAUdIkAURJkwQQJU0SQJS0HSzLcpgaHmAx
      FsddXku1K8PU0hqh+hZCSoLRuRUqapqo8+cYnFikrKqek50tuxa4ELthR0sizVyaudlZYhkF
      sglO9p7kZt9NFKCn9yT9fTdBge6TJxnsu0l370lUx8GyLFRVKh+xt3Rd3+GSSMfGRsHM5T7/
      fdn7SuwTX78GcGyGB26xlsyheso55DeZXl6n4lALYTXO2PwqZdWN1PsMhqYWCYTqONXdBsii
      eFEcZFcIUdIeaVeIvv4homvrhYhHiILbMgEs2yaRTPHOh1f42//xj8TWNgoZlxAFsWU7ZGl5
      lb/5b6+RSKb4wXcvkX24oyvEAbBlArjdLk50dzC/uMLFZ58qZExCFMyWneC19Q3Ky4JkcwY+
      r2dXbyqdYFEMZBRIlLRtR4Ecxya6vMD07DymZRcqLiEKZssaIDY/xltvf0igIoxLg+hqlPbe
      85w7fmTHN5UaQBSDvE2g5MYatu4l6NEYGR6htqkF28gRqqzY8Y0lAUQxyHtI3vr8Xd4bTlCv
      rXB9Yh1f4BZ/8S9eLWR8Qjx2W/YBXB4fSxMDXB9P8up3nsOnq2gyg1McMFs2geYn7rIYzxFp
      OUKFT2NlZZn51QS9PZ07vqk0gUQxyNsHMDIJPnjnj4xMzWFaEKqp55nnn6chXLbjG0sCiGIg
      zwFESdv2OYCRSTA5PYdhyvm+4mDK+zGsqhoLEwNc/uAdNH+Ib33rOUJBb6FiE+Kxy1sD2JbB
      5OQkOUenNdLAu+++X6i4hCiIvDWAlYnjq+vmL164AMDpkwWJSYiCyd8EcvkY+fhX/KeRW7R1
      nebPnj9bqLiEKIi8o0CO45CKr7ORTOP2BaiqLN+Vm8ookCgGeadCAJjxBV77+59g6H5C9R38
      6PuXChWbEAWRNwEc26Lz1DmmJyfRMB9+laXZCabmVqg+3IrXXGNqMUa4ron6oMKd4UnqWzup
      8pj0D45S09xOpC78GN+KEF/d1ovicylGZ1YJ+v20NDbQ3d31hWuCoUOcOdPL0twMcwsLhKtq
      aayrYXxilhOnz7A0Pcb42BTdp86wOjeJrCgQxWbLGsC2TFZWVsjdewZmGMZDVyhoTo6rV/vp
      PN6L28mSTCa4du0mQZ8Lt0vHo+kYCnjdOl5Nx7RtVNvGsiz24AG0EF+wZQK4fOU888wFfvXG
      L5iJJjnk+Hmip/2zCxyb69duUBdpx8hm2FhfwlE0VE3Dr5mMjIyQQqPWY3J3eIS4BS5VRbk3
      o1Q6waIY5C2Fmdg8emUtR5vC2On0Q68qdHYfI50zURSFuroGVtY2OHMqgkuxWF6J0dJSjUu1
      WVmJ0tbSKluGiqKTfxjUSDG1EGX09lV89d1cOHV0V24qw6CiGOSdDGdnYlwfmqcmAKMT06Sy
      D48CCbH/bZkAmfVlNjI5Ln/wAS/8y7/E3pgpZFxCFMSWCeCvacGa72fd00hTmUO4trmQcQlR
      ELIgRpSsbadCWJl1Xv/H19nIWFioPP3CK/S2NxQqPiEeu7zrAXLxVQ73fpO/+qt/x7GjHcyN
      3CxUXEIURN4E8IYPEx+7xmuv/W8IVnO4sbVQcQlREPn3BrUtVE3DdlRyhsHJ4zvfEkWIYpK3
      D2AkV/EfPsYPulvQdHehYhKiYPImgKJ5GfjopwxeC1Df0curF88XKi4hCmLLBMjFV/jw+h2q
      qsIkc+B2uQoZlxAFsWUC6P5KTna2sdAQoa6qnLn5pULGJURBbJkAqqZz6+Pf8dFYmkh9CFdF
      Iz3HvrgoRoj9LO+T4I3lKSZWTdqa6vD7fajK7kxolifBohhsuzWi3x/k9o1rpHMG6Uy2UHEJ
      UTD5d4ZDweMk+X9v/IJ3r/QXKiYhCiZvO0RTIRnfIJmF2HqiUDEJUTDbPAhbo7HzBGHDwclK
      E0jsrfvdVQdwnM0/LdvBsByypk3ugT9rgy4qfdv3M/Ne4Qk3cuZUFfNjA7hrd346pBBfxrId
      cpZDzrLJGpsFOGPaGPe/Z24W7KxpY9iffc+wHEz7szGc+0M0uqZwqiGw8wTYmB9hYFXnTHcP
      b//pI44cfmFHb1SIh21kTN4aipEyPr9rlKaAS1NxaQpeXcWjK3h0lXJdxa0reLTN77l1FY+m
      4tYUXNrmNZr66KOVeRPg+pWPuTKRZOx2FWe+8fwXXjfSGwwOT9Dc3k2Zy2BgaIIjnV24lRxD
      d8doPnIUn2YzMjxCXUs75T6ZTyQ+4zgO12YTuDSFF1sr7xX0zcKsf0khVnZpGP5BWyaAYySp
      67nIf7wU4I1f/F/iyYf7AA7Lq2u0H+2g7+ZN/KpF5GgHN2/1U6ZkqWk9wu3b/VS5LcoPtzJw
      u59zZ0/L1ijiU3MbOabXslxsr6Sh3LMnMWyZAKnVGVZSLpKX3+f4899jdvA69EQeuEKhvqGB
      wdt91De1sr48S3l5CL82Q07xUFUZYlGfIeGotIVDxKZnMGRnOHGPaTtcnYnTUO6ixqd+yc6D
      hbFlAvirm1j6/f9hQ6/lR097iM1UP3SFw93bNznU1kM46KVvdpRMNk3atPGrBol0mpRpUa7b
      rCfTJAxDdoYTn7q7kCSRtflmWyVu996VhUdaFH//ks+1wRybof4+NtImFdWHidT46L87wZGu
      HnykuTM0RnN7F2Uui4HBYepbjlJTGQBkKkSpi2ct/mlglc4aP6caAo+lbf8otj0m1bGyTM3H
      SMwPYZS3caqzaVduLAlQ2t4bX2cxbvC9njBuLe9khMdq27lAmegsQ6ND3JlJMT8+UKi4xAG2
      GM8xHs3wRGNwTwv/fXk/hr2heozoNY4dO0EqU6iQxEFl2w5XZuIcCrqJhPZm1Odh+Q/KTkQp
      b2rn9kfvMTktWyOKr89xHIZX0sRSJk82Bfes3f+wvAmgutwMXf4TtcfOUVXmK1RM4gDKmg43
      5pIcrfEReoQpCoWSNwF0fzUvXvoW2dgSx0+fKlRM4oBxHIe+uQSKAr0NxfPpD9skQHZ9lmuj
      y5zoivD+ux8UKiZxwERTJndX0pxuCOLR977j+6C8dZHuCZBcmuLjyyu4wrIrnPjq7nd8q/wu
      2qq8ex3OF+RNANs0qG09xrPnTuH1FUevXewfjuMwEcuwlDB4uTP0lWZpFkr+c4IVjdvvvsnQ
      nRu0dZ/mz54/V6i4xAFgWA5XZxIcqfJRGyzOmcB5ngQ7WJaNbZkYpoXucuN27U7vXZ4EH3yO
      s1n4R1czfO9YGL9b2+uQviDvk+DU4gifDM0w3v8hk4tr/P4PbxcyNrHPTcayDCyl+GZbeVEW
      /vu2TABPWZjxW1fxVHegbEyTdfyFjEvsY1nT5tpsgtawl7qy4mz63LdlAmj+Kl5+7gz9fdeY
      WXN46eJThYxL7FOO49C/kCRn2ZwqsjH/L5N3Nqhl5kjnbIL+3R2+kj7AwRVLm/x6MEpvfYCe
      usBeh5PXtmeE2bk07/zmN2Tw0tbRRXfnkaJ7kCGKh33viW+5R+Nozf6YOpO3NGtuL1XhShJr
      K4zevcNbf3i/UHGJfWh2PcfMepbTh4O4imCq86PIf0qkkaOiro1//fQlXJpKMim7w4kvlzNt
      rs8maCz30FBe3B3fB22ZANn1Rf7+tZ+QzG1+3dj1JD/89jOFikvsI47jMLScJpmz+GZbRdF3
      fB+Uf0mkbTJ4u4+1ZI6y6gaOd0S2uvQrkU7wwbKe2ez4dtX4OXU4uNfhPLJtl0TmYjP0T64Q
      CATwefZPtSY+4zjOY92CxnEcbs0n8eoqx+r237OirZtAG8u8/ss3mZhPsDo3QX1HL0ea6z93
      jeM42LaNpmnYtoVpWqiqhqapmKaJpuso8Onfd+uADZGf42zumTkRyzIezeDWFCIhL40VbnRV
      2dUmyvxGjolohm+2VRTFGt+vKm8TKLM2z0xC48jhagbu3OFYz/HPvb4wOcxH/RP8+XdfpP/G
      x2QdD+FDh1Hj8yxsZNF8lTT4DSZXkqieIGd7uz9NCGkC7T7HcUjlbO6upBldTZM2bJorPeQs
      h/mNHLqqcLjCTUvYS2OFB1XZ2XaDpu3wz4NRPLrKpY7KffcBt+1zgHd/+0s+GEnSXFdFffsp
      jj30el2kg+bVNQBcmkYylcU0bdJZhSfPnuVO3y2WEnD23FkG+27JznCP0XrWZngly+hqGl2F
      tpCbjhofwXvzcHKWw0Q0w8Ralj+OZtFVheZKDy0hD7UBja8zU/nuapb1jMmL7eVYpom1y++p
      EPImwMXv/1taxqewUfCXh/P+ovaeMyiKwpVPruB26diOg2mb6MrmJ4Vpm2iKgqpt/odoWvFO
      kNovLBvm41n6F1IsJgxCPp2zzWW0hb1f2FxW1+FYvYtj9WXEsxaTsSyTsQxvj2bw6AqtYS+R
      kJeaoOuR9m9NGTa3FlJ01vipKSu+hS6PKm8CmPFlPrx2k6a6Giotnab6mgdedZgcHmB5eZXb
      d8cJkGQ5lqDiUAuHvDk++egjapraOeQ1uPbxR4TrW9AeqCL301BZsTFth4WNHFdn4sSzFofK
      3FzqqKSh3P1IzZByr86Jep2eOj8bGYvJWIapWJbBpTQBt0Yk5CES8lId0Lf8f7oxm8ClKpyo
      37ud3XZD3j5ALr7Af/2fr1NVU0NtSzeXLuzOwnjpA3w9OctmbDXDwGKKpGHRFvbRfchPhVfb
      cfvbth3WMyYTsSxTa1nW0yZBz4PJ8NlB6csJg7eGolxoKedI1f6Y8vBltt8a0baYnRhhcnGd
      rp7jVJXvzjCXJMBXs5ExGVxKMxnLYNkOTSEP3bV+Qr6tP6F3wrqXDOPRDBPRDMmcTZlHoyXs
      pbnSw8dTcXRN4VJ7ZVEuc3xU2yaAkVjiF79+j9bGaubjCt9/6dlduXGhEsBxHFKGTTxjsZIy
      iKVMNBVCfhc1ARdBt4bXVZxDd7bjsBg3GFxKMbeRw6MrdNb4OVLlxedSC9LsuD+cupwwmIhl
      mdvIkjZsFODlzjA1Qde2v6OYbTsKhGPjoKDpOo69N/u3PyrbcUgbNhsZk5WkSSxtEk0ZpAwb
      y3bwuzTKvRqm7TC7niNt2rg1hTKPRtjnoiqgU+V3UebV9mw823E2z8qajGUYXkkTTZlUB1xc
      iJTRWOHBXeCZuIqyeexQQ4WHhgoPOdNmOWmgANWBg1GDb1kDWLk0Y+MTrCzNs7CSoPv0k3S1
      NOzKTXdaA1j25iFq6xmTaNIkeq+wp+8XdrdGuUcj7HdRHdCp9On4XCouTcVxNg9XS+YsommT
      5YRBLG0Sz1pkTRuvrlLm1agNuAj5XVT5P/vZnbLv3TtnOWQMi2TOJpGzSGQtkjmLeNYiZzkY
      lk1zpZeOGh+1ARfqPm5mFLO8NUAuscov33iDupYOIk1Ne7YO4H5h38hYrKYMoqkHCrvj4NM3
      P9kjIS9hv07Ip+N3aejalxcaRVFw3ztcLeR3caTK9+knbyJrsZQwiKYMptayDC2nMW0Hn0ul
      0qsT9uvUBN2E/Trehw5jcxwH29kcoTEsh5SxWbATOZtkziKZtUjkNgt4zrRxAJem4FJV/G6V
      gFujOeSizLOZfBVFtH3gQbZtJ3h6bIgrn1wm4W3i3/zg0q7c9FFqAOvehkrzGzlSho3tOPh0
      lQqvTnXAReh+YXdrX3qg2k4595tUWYtoymA5YRBNm6RzNg4OQbdGhU+nwquTylmkjM2CnjMd
      stbmiYcuTcGtqfhdmwW8zKsRcGkEPSo+l/bpyYf77QnqQZG3E5xLrPDTn/0SPGU0NEboOd5D
      bahsV278qAlwaz4J8NgL+6Oy7001iKVNVpLGp30Mt6YS9KgE3dpmQfdoeHQVr2vzxEMp4MVp
      m06wgj8YJGfB0twkuHzUnu8tWHCaqhTd1FpVUQh6NIIejaZK2SnvIHikM8J2mzwHEMVg22FQ
      x7GZGr3LWjJLMFT7henQQux3+bdHj07x3o1BUqkUmWyuUDEJUTD5T4hxe1kcG+LOnTtMzC4V
      KiYhCiZvArgCVTx97pQsiRQHVt4+QGZ1mvn1FIcirSiWHBMpDp68NYAnGKatvZOVsQES0gUQ
      B9DWi+LjK3x47TaL0+Mkcw6BfbjgWYjtbJkAuidIS3MTDXV12A74y6sKGZcQBbFlAthGhv4r
      7zAahUhdBUk7yI9+8FIhYxPisduyXeMKVPLSt79LuDxIc2MDW0yuFGJf23YqxPLsONPLCVrb
      OwgFd2f1v0yFEMVg260Rrcwav3vr1yRxM9R/u1BxCVEw+bdFySRwBUNE50bIZDXOP/T6xsoc
      l/sneeG5CyxNjTA6u0xt81FCSpyhyXmqGto45DO4MzpN5aFmutsOP8a3IsRXt3Un2DJJ2T6O
      tjYxPB3lqQsXvnCN5i0nVLb5K+ZWEzx1/jw3b/SRVODs+fP03+hjSoEnnjrPQF8fltPwaadD
      doYTxWDLBMjEpvnrv/4bjhx/kpbDh4jFYrTUf353uEAw+OkuYqqqogCaqmKz2bvWVBUL0BTQ
      VRXbceDehrpCFIP8SyItk5Gh2wwODhLXa/nRqxcffJXJ4QEu37hFd+85AtY6C2sp/OHDVKlx
      Jpc38FUeosFnMDIXxVNWxdmTnYB0gkVxyLsk0kit8bvfv03WUgiGDnHu3BOU+3ZnQpwkgCgG
      eRfEWEaGubk5THQWFxdJWQqvXny4GyzE/iZLIkXJ2vY5wH1WLs3w2MRjDkeIwnv0KZ4yaikO
      oPwPwhLL/K9/eB1LUYgnszz53Hd4/smuQsUmxGOXPwFyKeq6nuTiuaP84U+XMWPTgCSAODjy
      JoC7op5qdYhfv/U23afO4pNFMeKAyT8ZLptiYXEJW9Fx6W5aIzKXRxwseRNA8wTo6jqKGV/m
      ct+dQsUkRMHk7wNk02QcLy+/+kMscz8egilEflvWALaZo//WDa5d/pD/8rf/mZG51ULGJURB
      bL0rxMYiv/3Th/SefYZQXZSnjrcXMi4hCiL/bFDHZm7iLh9/co1AfScvP/vErtxUpkKIYrDt
      KZGPiySAKAaPPBdIiINKEkCUNEkAUdIkAURJkwQQJU0SQJQ0SQBR0nZtMH5lboLx2WVCdU00
      hjzcGRqj6UgXFW6LO4PD1EWOUle1OwdtC7Fbdq0GmF1YItJ6hEhDLSPDY3T29DA5OszY8Ait
      3T3MjA8j22GJYrNrNUCkuZnV2DKjEzME3G58Xi8+XSOjaJT5vPhdLkzbRrVtLMuSrRFFUdi1
      BEhlclTXVLMYncTtOCwuLZK0oMpjMbuwSNywcKkqirpZ6chUCFEMdm0uUCaxxuTsEk2tR/Cq
      JuMT0zQ0t+DVHCYmJqk5HCHodQEyF0gUB5kMJ0qaTIYTJU8SQJQ0SQBR0iQBREmTBBAlTRJA
      lLT/D7Oy157a62HtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Poly c employ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Poly vs Uni' width='192'>
      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
      AROMfNVHPjZDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PolyVsUniEmploymentRate' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      PZy22bYpgb+yiv63kpirarBtG8uyqFQq8/4cnwYPbW7loc2tNzzn5PXC21wLQHzlemJn3uLA
      oSvkSgqKYnLm+CHUujV0tze/d5xmWRi2jc80sRQV9bf9+6qqomk3LuktxJ3kWgAUo4RaVUeL
      lmYm1oQy3cuVXBXbmk0mk2nqYgEKJYU1K2McO95L3JiiYfX2667XVYeDXUJ8WO7NBtUDVPlV
      CnoD21ubsYspOldMUSwWsbQgWD4MUyHetolN+iBFtZHWxqhr5QgxlyW9OrSTRrAQH5bsFC88
      TwIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0C
      IDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8
      TQIgPE0CIDxNAiA8TQIgPM3VACRH+zl05ASp/LXN6sxynsuXhzA/cIxt5Tlx4AAHDhzg8tWU
      m+UIcQPXAlBKDnDySp6tG1Zw/NBRSmaOE0eOcvbM5esCYMwMUkqsY+fOnaysr3arHCHm5Noe
      YZViiXA8RjhaR8R3mmI5yM7duzi87+R1xxVyJSYHz3Jwys/G7fdSHw1g2za2bWMYhlvlCQG4
      GIBIYwfVE2/x+oEBstky3GS39uqV2/jMSptSdoSeN/r4+MOb3tspUnZ4F25zb5tULOKNHdTW
      Z7g4HCfiM0ml0uQLedKZLDWRIBXDZnb8CnlfDC07gb8q/t7WqIqiyD7BwnXuNYJVH0ZumrGU
      xT33bEKr5Ll0aZh4UzVDAyNUjCIz6Sx1rW2UkqPMmHE+1t3uWjlCzEW2SRWeJdukCs+TAAhP
      kwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT3Ntdei7jm1j
      Y4NlAjYoKiiaLOG+zEkAHLCNEuaVg1QuvII9exXbLKP4q1Dru/Bt+gxqzWoJwjIlAZiHlZ+m
      dOA7KKof/7Yvo8RXougB7EIKc+wkpde/jb7ucXybnkFRZT+D5UYCcAu2UaS075voq/egdz2F
      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
      2aEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      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
      x50MWB+1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Expenditure on Education' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZtklEQVR4nO2deWyj6X3fP7wPUaQkkqLuc0YjzbHX2LOnj+3C29hJa+RwmtS9nCIIWqRt
      +kdRF0WArQukcd0CRYCiaIECKZzYAYrETpqtd71re73HzHpmdufWQR0USVG8RVG8yZfv0z+0
      O+vOkjOUlkOR4vP5Z0dL8qvf8+j58nnf9/k9v0cjhBBIJF2K9qgDkEiOkodigGq12tT3dbpW
      MyfZdm5nu2rdr/+PdAZo5sDoBq1m60kteQkk6XKkASRdjTSApKuRBpB0NdIAkq5GGkDS1egP
      +oGff6ykqiparRYhBFqNBlUINBrpKUnncODR6rtzhZVgkt1EhNWV2/jWNnj1zcsIofDKyz+g
      KhMrJB3EgWeAiclpfHtgd/QTjiYYHOxjJ5PBt7GJc3QSVVXRCLWhxYx2Xj1sFqqqNk0L2red
      7ar1oP4/oAFUfD4fobyeQrQKRiuVioLTM8R2IMiI24FWq0UjBDqdriFFvf7AHuwoLUVR0Ol0
      aDSapuhBe7azXbUe1P+ah5ENWq1WGzKAoihNbWi7ajXTAO3cznbVul//yztWSVcjDSDpaqQB
      JF2NNICkq5EGkHQ10gCSrkYaQNLVSANIuhppAElXc2ADZHcT7GaLqEqF7UgUqmWC4RhCCIKB
      AKpMhpN0EAdeb86komQMoLfriESjjPSZ8K5tMuS0sLS8wfDYOBoa39nfqdUEjlJPajVP78AG
      cLsGye6Bzd6PxRQBwOOyc/3mOiNjnv09AWpj2aDNzJTsBq1m60mtQ2SDbga32avoiOkqZPYy
      JDJOhoZHSSXi9PVa0Wm1QGPZoO2cQCWT4Y6PlswGPWItaYCj1ZLZoBJJHaQBJF2NNICkq5EG
      kHQ10gCSrkYaQNLVSANIuhppAElXIw0g6WoObIDA6i0CsTQ70S1u3LjB3t4uV28uIYTK5Xff
      laURJR3FgdebB90ugrkKpVyBR86dYH0pQDGXY3cnSl7RUa3K0og/jyyNeLRaTU6G2x/UVaWK
      rlohldxBazbjtli5uRhgdNAuSyPegyyNeLRaD+r/AxsgupNDL3RMzJ4gEkswPTVMsSoYdg1g
      0OvQaZCbYiQdwwENoGVy5sTdnybGRgCw6MBiNDQzLomkJcinQJKuRhpA0tVIA0i6GmkASVcj
      DSDpaqQBJF2NNICkq5EGkHQ1hzaAUFVK5TJCCCqKAkJQqVRofpEVieThcWgDrK8u41u5zVYo
      xI/evooQCq+/+prMBpV0FIfOODLo9ShCSzq+i9thYX3Nh3N0Qh6UfQ8yG/RotZqcDfoRdoed
      dCjH+OQQ6WKVcDDIsKtPZoPeg8wGPVqtJmeDfkS/a4h+19D+v4GpEc/d15poYInkoSKfAkm6
      GmkASVcjDSDpaureA9y4/BYboQRnzj/N3MRQK2OSSFpGXQNkSwoXLlzA3t/XyngkkpZS9xKo
      32bmytX3yeSKrYxHImkpdQ0QS6YYHRogHIm3Mh6JpKXUNYDNaiWR3KWvv7+V8UgkLaWmAbyL
      N0hncqT3MpQr5VbHJJG0jJoGOLnwCNMn5/jKr/0KRlHbAPlMiuVlL6ViAX8oghACv88nawJJ
      OoqaT4HS8SA/ev3HDA2P8NiTn635wUAghMvZQ3ArQiAcZ9hlxbsWYGRyCo0Q8qDsh6TVbL1u
      0LqfXk0D9A1OcHLSgz8UYju6w/ig42PvMRj0pHNlDOjwuD88KHtw/xcJ0VAWpKqqTUsSa2ct
      oG1j63atuusAg2Mz5ItlDNraA9lhtxFN7jIy6sGm0bFrTOKwWQ50ULY4QNZop2s16w/a7u1s
      Ry2tVnvwbNCqCr/wi7/EojdU83XX0BiuobG7PzsdvR999rDRSiQtpu5j0EouxQ9e+RG2AXcr
      45FIWkpdAyiVMuVSntRuppXxSCQtpe4lkM3eh7Oqo1SQBpAcX2rOAJEtH/FUhnJFZWx0pNUx
      SSQto6YBLFYbu+k0s7OjBDYDrY5JImkZNQ3gGHCzMDvB8rKPqdmZVsckkbSMmga4du0q/RYN
      j37mS0QDy62OSSJpGTVvgrOJEH99OYBq9XJqfqHVMUkkLUMjmp10wX5ho0ZW8hRFaWr9l3bV
      auZKcDu3s1217tf/ddcBLr3xCt/73vfwBiI1X4+Fg9y+doXNQIjL1+8ghMq7Fy/K0oiSjqKu
      zTL5IkNDQ9gsppqvDw6Pkc0WGHFaCW2H2UlEKAmjPCj7HmRpxKPVOnRpxFMnZrm2EmT+rLm2
      sFJE0Rgx6jS4PW5uLwcYGXTI0oj3IEsjHq3WoUsjbgS3eer8PMvLazz96XMfe10IDVNTk6Ct
      MjHaw4jbiV4nD8qWdBZ1DTDkGuDa9WUef/rzNV/XGczoPpAwGwF5ULakA6l/CXT2cWYXBLom
      TmsSSbtRd3S//eP/i9E5htVg5ZFz862MSSJpGXUfg1osVhavXcFgk2VRJMeXujNAKp3lC1/8
      Ms4BaQDJ8aXuDOB2DXDr+jUiyXQr45FIWkpdA2gALSUi0VQLw5FIWkv9LZGKQrmiYXR0sJXx
      SCQtpaYBirk9ors5FhZOEA3VrgohkRwHahugkEOr1ZJM5Tl1arbmB6tKiTWvl2KxSCgSQwjB
      VjAoV4ElHUXt0ojpPfrtvaR2EiR3Mzh6Pp4PtL6yTEVrgkqe5dVNBgesLC6tMTQ6hobGS9u1
      azk9Wc7w+GjdT6+mAUr5DNdu3mZ4yE04nGBm9OO1gQplldOnR1n3buBx9XLj5hojY0Ooqmg4
      G7SZmZLdoNVsPalVxwBz5z5FLBYjU6rSY+up+cHZqTGWvZuMj01Q0ehIxeP09VrR6bSgNpYN
      2s6bKNo1G7Sd29muWofKBu3psRLdTWK1Gmu+but3c67/o5nB3We/+29ZGlHSKdQ/JK+ocP78
      efoH7PXeIpF0PHXXAcyaMreXloklZWU4yfGlrgGyZYHLaSMZ2W5lPBJJS6lrgOmJcfy+MCfP
      nG5lPBJJS6lrgNW1NZwDvfj9ciVYcnypawC1qpDJZrl26Q1iaXlYtuR4Un9P8OgUFosJYfUw
      6KhdGUIi6XTqzgD53ShvX76JyVR7HUAiOQ7UnAG2t0OcffRxzj43Riq6CQy0NiqJpEXUnAE2
      15fx3n6fO6ubbIVrl0aMbG2yuLREZm+X924tI4TK1cs/k6URJR1FzRlgcnyCYCQJ2QhTs6dq
      frBcqaAqFaqVMoVshnQqRraklaUR70GWRjxarUOXRnzQAHb0u3A5iwSCKdweNzfu+BkZtMvS
      iPcgSyMerdahkuFs9j4GFcjlC+jrDGSLyUAwkmFufoaSAkPOAYwGWRpR0lnUNIBjwM3P3vkJ
      0Z002aqZwRoJcUaLjdlpGwAW3b4hJJJOo+5j0Jn5Rxn1DNJbYzeYRHJcqGmAbCrKOxcvYuzp
      JZOR2aCS40vNSyBzj4Pzjz1CSZh57FGZDCc5vtScAfRGM/FYFJO2wPs3vK2OSSJpGTUNIISg
      z95LcCuK2yMLY0mOLzUvgZaX7/D4k59pdSwSSUtRqmqdXKDNFTY3gwCcOneemTE5C0iOF/lS
      hf/8Z5dqG+DTz34Bu11uhpccT/LFCt/87jvEd3O17wEaHfzVahUhxH7uxgf/bf6x2xJJ88gX
      K3zzO/uD/6V/9Pn6C2EPQqgVfvLqa+SyO7z21hWEUHj1B6/IbFBJ25LOFfmDP3mLVKbAv/+t
      5xns76mfDPcgVm7fpKevj2yugNtuZmN9E9foJKoqs0F/HpkNerRaH/b/TqbAN79zEZ1Oy7/7
      2ufotRr3K9AdVnhiZg58Pgx6AwOeYcLBAMOuPpkNeg8yG/RotRRFYS9f4T/8yUVMRh3/9u9/
      hl6r6e7rGtHsMrzsO1jWBv1IS9YGPRotIQTJdJ5v/K836bWa+PpXn/3/Bj/cZz+ARNLJZPIl
      Xr28zl++vcLcuJN/+etPYbN8fH+7NIDk2CCEILKT5eVLq/zk2ib9vWb+3otnef6JGYz62lck
      0gCSjkcIQSie4S/fWeatmwEmBh38ky9/igsLo2g1Yr9kfx2kASQdixCCJX+C77+9zHsrYU5P
      ufk3X32Oc7MetB/ccymKcl8NaQBJx6CqglS2wFY8QzCa5vJSiEV/nKfPjPOHv/MCJ8ecB9aU
      BpC0HUII9nIl4ukc/kiaYCzNxnYKfyRNvlTBZNDj7rdyetLN73z5PCPO3kM/ZZMGkLQNqhBc
      X43wnddvEYpnUKoqToeFSU8fp8ZdfOHTs0wMOnD3WTEb9U15tCwNIGkLIsksf/zKdd5bCfPF
      p2b57V96As+AjT7bw92TLg0gOVKKZYW/eHOJv3pnhTNTbr71T7/AmMvW1FXl+3Ho35LdTbIV
      STA1NUF8Z4+x4UGCgQBjE5PNjE9yTKmqKu/eCfHtH95AVQX//Fef5MnTo+i02gc+uWkmhzaA
      0dKD27FHaCvMZjiBx2ll2etjeHwCLfKg7Iep1+laoUSG//nyNRY34/ztZ+f45c/M360r9aHG
      kR6U3Qg6jWAnW8SoNeBx2blxc52RUQ9CiIYzIFVVbVqOTDtrAW0bWyu1MvkS339rmZffXePR
      E0P8l999kcH+nruff1hxQf3+P7QBdpIJKuUqA0MeevQGdhMJHDYrOq0WaCwbVBwga7TTtZr1
      B211O6uqilajeWD89bQ+XKV95fIab1zfpL/Xwr/+6nOcnxuuq9nK/pfZoC3Q6tRs0Ey+zLe+
      +w7pXIlPz4/w5OlRpob6MNTIq7lXq1pVueWL8dqVda6uhJkZ7uMXn5njwvwoRsP9x0ZbnBQv
      6W6KZYX/9GcX2cuX+OyjE1xZ3uYv3lzC09/DoyeGuLAwytmZQQw67d3BJYSgrFT56XU/r15e
      JxhL88zZcV762uc4NeG6m57QTsgZoAVanTYDKFWV//jdd9iK7fGNf/w8LocVgHS2yOXlbX62
      uMWtjRh6nZZPnRrhwsIIwwM9vHMnxGtX1tHptLzwxDS/8OSJu59tRlyH4UH9Lw3QAq1OMoBS
      Vflv37/K+6th/uC3/wbDzt6PfU4IQaGkcNsX49KdINdWI6RzJU6M9PPihVmeOzfxiaqFy0sg
      yZGgCsG3f3iTqyvb/P4//GzNwQ/7T1SsZgMXFka5sDBKoVQhnsoy4nagv0/qcTvSWdFKHhpC
      CP78jUVevbzG17/6LCdGGz8Y0WIyMOLq7bjBD9IAEvYH/+vv+fjfbyzyr37jGRYm3UcdUsuQ
      BuhyhBC8eSPA//g/7/G7v3KBJ+aGjzqkliIN0OVcW43w3//qKl/74mN85pGJppZv6QTkTXAX
      sxJM8q3vXuRvPTvHl546edThHAmHngFS8TB3bt8kGo1y5cYiQqhcvnRJlkbsAIplhTdv+PnD
      P73Iixdm+Y0Xzh51SEfGoWeAPpeHXG4PFIVSIU8qGSFfNciDsu+hXUojCgHxdJ43rvv58fs+
      imWFFz81za8/fxq1WuWTRtmp/X9oA4Q219Da3Lh6NKTLbm4tBRgddMjSiPdw1KURlarKzfUo
      r1xe4/pqhHGPg698/gzPnhvHbNC2ZZ81U+uhLYTZeh0k0yly5iEmRkcYdg1g0B/fg7KVqkqh
      VCFfrFAoK+QKZbRaDdPD/ZiN7XcrtZst8tPrm7x+1UdsN8dTZ8b4xm89z6kJ593B0MqNJ+3K
      J7oE6nN57v5sNnb2Qdm5YplQPMNyIMFKIMFutkihpJDJl8mXKhTLyt3LOr1Oi9Ggo6oKKkqV
      2ZEBzs4MsjDhYmakn/5ec8ufplSUKuFklpVAgjubcd69s8WA3cLfvDDL5x6bwtFj6ronPI3Q
      lblASlVlN1tkdSuJN5hkOZAkEE2jqgLPQA9zYwN4BnqxmvTYrCasJj0WkwGbxUiPxYBep8Wg
      06EKQTCWZnEzzu2NGGvbKcqVKiOuXhYmXZydHuTkWD82iwlVCBD76QawX+MGoPrB/6+qKka9
      DoNeh16nRa/X1syeVBQFrU5HvlBhK77HrY0oK8Eka6Ed8sUKToeV+Qknz5wd59HZofumHrdz
      /pRMhjsg99MSQlAoK1zzhvnZUoi1rR1iqRxmk565MSfzky7mxp1MD/fj6DEdOq5iWSEY2+OO
      L8YtXwxvIEmhXMFqMqB8cDOmVgWC/QEP+2bUsP/H0ek0mI16TAY9ZqOeHrOBXqsJm8WAvcdM
      j9lAJl/Eu5ViK7aHoqpMD/WxMOliftLN7Eg/Toflg01Jn6zPDko7a3WtAZSqypI/zmtXNriy
      so3ZoOPxuWFOT7qZG3cyNmiv+y3bjLiqqspmOEWhXEWr0aDXadFo9i+hPvpZczeHplRR2MuV
      yBUrZPJlsoUS6VyJXKFMtlBhL1/CbNQxP+FmftLF7Mgnu/9o50Hb9jfB7YqqCjbCKX563c+l
      O0HyxQqPzHr4va88xWMnPJgMrWuyTqtl0uNo23RoyTExgBCC6E6OS0sh3rkVJBTf48ToAL/5
      wjnOnxp+6MWVJJ1Lxxsgky/x5z9d4q8veRlx9vL5x6d4+swYQwM2+dRD8kA61gDVqsob1zf5
      9g9vYu8x8fW/+wznT43KQS85EB1nACEE3q0d/vgH1wnF9/jlz87zpadOotM0r/aOpHs4tAE+
      PCBbr9NRVqoY9TrKlQoGw8fPYWoWu9kif/raLd68sclz5yb5vV97Es+ADZCrmpLDcehs0Mxu
      gnffuw6lND++eBUhFH70w9cfSjZoVVV5+ZKXf/FHr7Ae2uH3/8Hn+Ge/euHu4JdIDsuhZwB7
      vxunIwHAoN3C2toGrrHmH5TtC+/yX79/lWS6wG++cIYXnphCp/t4AdVOzUY8KO3aznbVemjZ
      oDuxMOFwGHe/HadnmPBWkCFn87NB/dE9Tk+6+TsvnMHRc//HmZ2YjXgY2rGd7arV1SvB7aLV
      rgth3aJ1v/6Xe4IlXY00gKSrkQaQdDXSAJKuRhpA0tVIA0i6mkMboFLMsbrmo1opsxWOIYRg
      Kxg4lhviJceXQxvA5wsw6unB5wuysraJUsmxuLQuDSDpKA5tAI1Oj8ViQSgVPK5ebtxcY2Rs
      qJmxSSQPnUMvt3mcdm4u+jl5YopcWWU3HqevtweNBpCzgKRDaHoqxIdp0o2kQjT6vkZoZy2t
      Vtu0VIh2bmcnajV9Q4wQAo1G01AW5EEO1e5UrQ/1mvU9067t7FStphtA22BNGtjfwXWQ93ei
      1oennjdrBmjXdraz1v36/6Fkg0oknYLupZdeeqklv0moLN2+TU+/k+iWD/92gl6ThhXvOlWd
      kWTYT3w3z0Cfgwd/WQoSkQCJdBUqGVbXN7DY7PhWV0jliohShg2fH6vDiVH/gG8SIQj7vWRU
      C6V0nHWfn157Lysry+RKKn32Hm7fvI17yEMj3+HZ3QS+UBy7WcvSihdVaya+vcl2NIXDZmTF
      u4bJam+ooFW1XOD24hpuVx+rKyvs5sso+V02/FtYzCZWvasUFOizP3hnnBAqS7duYRtwEQlu
      EAgnsBnBu7aOzmQjtuUjni401P9CqHhv3sLichEP+vBvx7GZdHi9a2iNVmIhP9uxHZzOgQfP
      fEKwvblCFivFdJQNXwBbbw+rKyuUVT29VhO3by3i9gw21P+ZVAL/B21b9q4idGbioU2iOxns
      Fh3L3jVMPY67/d+6lWChYjGbKCsKe9kKbmMRXyyN0GjYSyVRtCbMFCk1uBnI1tdLfi9PJJZg
      fn6OTe8i2aJCNpNhYHCEAZuBfKnSkFa/3UI6VyaeTDM3M8zqkpeSoiGbyRDyr1Opaht+sKU3
      21DLBZKRMCMzp4htB8hmspTyGZZWVtFoNVSUxhpZFRqMeg2lXBqdzUk+nWAvkwG1wm4qQamq
      JZvJNBaYqGI2mahUFTI5BZcuz21fjJmTJwmur1DVWzCqBcoNXXqrWAxGyqpKOldk2FLh2uoW
      M3NzbG/5mZiZQa0UG14TGrBb2M1VSCT3ODk1yPV3r+GaPEEyGiLk36BS1TTc/waLjWopTyIS
      YWx2jmhog0JZi7GS5triKhotKD/X/60zgFaPyagHtHhcdnyhHdRSnuGxcUrFPEqlQrmioG3o
      UlmD2WwCYHJiHO/yMmjA4nCjEVXCgQ30jhHcdksDUhrMpn2t8TEPKyvrIAR9g8OolTy76Sw7
      8RDpbLGhZprN+7vWBscniftXUdCgak30WfWoGJiYniUe3W5Iy2gyowFMvQMYlAy72RLFUpVR
      j5NkPMHA0BhKudCQlkZruNv/g65efOEUJ2Yn8K960RjMVA7Q/xqNHpNJD2jwuPpZ30pwcnYa
      /7oXoTXgXVpm5tQC+sbEMJv2CymMjXpY8W4wfHKOTHiTYqVKai9LMhYikys11M4P+98zPkl0
      cxVFY2HAYSSczGI1m5icniUWCd19f8vKoqjlAslMDqMapd+sYezkaYacNnz+IJPTJ6hkdyhr
      zRgbefolBH7fFpWqSrFsxWCxMz8zSci/iX5oFFFKk4yGsFgs9FruX7ZdCJWNrThV1UjF2o+1
      f5iZiRE2fRsMj00z6HQwMZXG1mB1uWjIj6JUSGeLaHQGFmZnyCS2ySk6Hj3pZmPDx+TUbENa
      md0EZaVCJLaDKgRnzpzGIEqE47ucPvcYW4FNRsenGtKqlvOksnnykQgOE4zPnaVXL0iarCxM
      T5OOh1F0/Rga+EpUKwXi+QLGrW36rVqGZ08zYNawq7cwPzWBf2OVgD/AydlpdA8wgVBVNkJJ
      qiKLYnFgc44yNdLH+nqKM2fOYLMYmZxK09tjaqidkQ/6fy9XRKMzcXp2mp1IkNmFM7gdVjZ8
      fqamZ+6+X94ES7oamQ0q6WqkASRdjTSApKuRBpB0NdIAkq5GGkDS1UgDSLoaaQBJV/P/AGhU
      HGdKeylDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Labour Cost' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dSYwcWZrg97+tboub+e4eOyO4JHOtqm51VfXM9GikGWAOEtQDSDeNMIKg
      wwCCDrrrUreGIN100EHQtS8zKgHTAwhz6e7pKXV1dy1ZlcwkGcEgY/Xw8H21fdMhmFnFIhm5
      kJHOzLDfJZNu5vbMzeyLt9l7T8iyLCOXu6bEZZ9ALrdMeQDkrrU8AHLXWh4AuWstD4DctZYH
      QO5aywMgd63lAZC71vIAyF1reQDkrrU8AHLXWh4AuWstD4DctZYHQO5aywMgd63lAZC71vIA
      yF1reQDkrrU8AHLXWh4AuWstD4DctZYHQO5aywMgd63lAZC71mSALMtYLBbLPpfcNZSmKaJ4
      tX+HsyxDEIQXbhPymeFyyzQaT5BU/XP3s3QVUXzxQ/x54jhGluUXbnvxp7nc1+RXj7r86V/s
      f+5+f/Iv/1MaZeO1p5/XAXLX2nMBcLj3ADf+8qUifz7ECS/+P4lDHNfHcZwX7ht5c+599BGT
      hQ9pyL1ff8R5f/TCfeeTIWEC3fYxD/f2iZP0hfu9LK1XkWUZ9+/f/0L7Rs6Y4SKk3+uSZhnd
      bu+Z7Ukc4vlPL1AaMRzPAJ7br9c54dHjA17yM7+wOHBxgxiA8/YxfpTw8MF90i9S4g2mdKc+
      /V6PNA15tH9Ir9e79CvTYY+HDx8y98KX7tP9nGMswzNFoCxLiLOU83aH1Jug2WXG/T6NRpXu
      cEbJthkPz4niDNOqUBBCnFCgUtIY9zo0d97n3qOPqVar9MYeq60qutxjNFlgmQUmTkR9ZZ26
      njJbuERxBJnMdO7QSCPu3buHqptkgUOMSlEXGQyHvPu9Gq7rIKtFxt1THh2cUG82iTIZQxWR
      BIizDOm8TaYWmQ/ahKKJmrrU1nZYa9W+0sWJFn2iMGbkhBzv/pqCVYNgRpCplIsGlgKxYXPw
      8D6bm+vEeoG6nNA+7xOFEXv3P8JDR4nn2NUaomSx19nHLDcYD0d07RKykDEddhguUn74g+8x
      nrncvXuXoyd7TBcBlq4xnk+RJJlKtcZgNMG2TPzFAlEzESOHIJYoWTKn5xPWGhUWrouuwiDQ
      +eF37zJzfOrRjCiMGcx8zp98jKSXkVMfL4Zy0aKsi/gFi+OHH7O1tclUqrKpBOztn+BnIuJ8
      Tha67J0OuLNeZzDsotprjLqnbN15F9F3yQQJ0R/Sdi2iWZ/JdIyqlxDjBX4io+kqabDg4OSc
      93/v+9i68loe4lfxTA4w77cZezAeD4hTKOoykmIixgFmqULge9Saq1TKFYq6QpSAKmQ4QUS5
      VGTY76MqMgkK1XKJOA7x/ZCSZeD7IdvbO0RRxGQ4wiwWOD7pANBc3aRRMpBUnST2STMJMUvw
      ogS7aAJQrjaI5yNOzwcUS2VEUWJ7ewsx9fEiiKOQMEoo2SYLx6VkFylXygwGg698cY7bPVRN
      5vz0hGpjBV2VMKwyFdsg9D36vT7dXp+CIjCdeQAY5SYnex9Tb9SYOT7z6RSzVKVWMnAXY8JE
      ZDIeU7RsyBIAZvMF1bINQBqHDIYjvCDB1BSCSGB9rcXa2hpRFGIUbdLQJ5M1siRCN0vUS0XG
      0xmVShlRVNjZXEUr2lTKJT6tNp6dnSOqCr2zNqVqA1NX0UyLesUiCHx6vR7dXg9NlxlPLloE
      jdoanXabVUMkRGQ4HuM6Dl4QUTILjMYTtKKNpsiYVomyIXFy1mc87DNfeKiaiZAliLKKKomk
      wHQyxS5XENKYOI5fmqN/XZ5pBQrDEEVVicIQ0pggERDSEKVg4jkzinaZLEvJ0hRBEEiTiDAB
      XZFYuB6mabBwXIpmEddZoBkGiiQwnbvYRQNEiTTNkISM6dzB0DUKqkIYp6iKzGI+RS4YEAck
      yChShutH2LZN6Dl4UULJMhmPp1i2hSzLZHFEggRZgihkOF6EKkGciQhZhKjoGJr6lS5OGIao
      qkIYRs81o2VJhOtHGIaG6/oYho4gySiSiOu6GLrObDZFVnUUWUSSRJIkY7GYYxgGnuugmRYi
      GaQxbphQsi3SKGS6cLFMHccPKeoaCAKCAJE75ajvcnNrnchfIMgasiQ8fchTZgsPq2giiQIp
      Aov5nFKpzPnpEcVai6KhEYXhM79FALI0YeH6FIsGjuNi6AZIMqos4nkemioTxJAlAUEMBDM+
      frDH+9//I1L34oEmiZjMHarVMtPxBMPQODg6ZXvnJu2jx7TWt1BlCVkSGE8W2JZBJgj8+c/2
      +df/4eBz78WrVIIvawXKm0FzS/Xnf7d75a1AeTNo7o1VKxn8vffWP3c/TZWuJP08B8gt1Xw+
      x7KsK03jshwg7wfIXWt5ESi3XOc/gb/+P640CSnL4CXvAuUBkFuu2AO3c6VJXPYGUV4EusR0
      1Gdvb4+56z+7IctwHPezf86mU9I0ptvrM5vNuKxSlUQBjx89Yjx7Wc91RhRGBL5LFL+kjTxL
      OXqy/9kxxoMujw+OSNKEMIpZzBcvPYeTg8ccHJ9yWdVvNp09f97+nE8e7DKafrm3hrM0IYqT
      L/Wdr1OeA1xiNJliFw3Ouz0GiYdqVliMezTWtggCn+7ZCcXaCmow5nQ+pzdyqZgike/Qnbi0
      SjqdXp/W6ibDQZfVjR1GnSNWt25y9OQRgVtDICNNQmZeQrEAYRxz8KTL++/fBEHk/LyPKItU
      Kw3cxQTdrrLeKDGZLkjlCRVbo9Mbs71aYnf3IZ2+y0bdIEoF1tZX6J2fUynVGLoL3r55Ez9M
      USWP4WjAoNun0WrS63cpWWVE1YbYYT6b487HLCIBTYwR9RI1aU6xeYNe55DFSCZTDAqKhAA4
      0xFzL0RUNDaaZc77Yyy7yGI2RSvInJ77bG/YJKLGjY3VZd/WZ+Q5wGUEAUVVScMF46nHafsM
      RZGZz2ZMpxMSUaFWKmLVmxwdnrJaVoiRGY9HnJ+cMpx7rFQMDg+P8KKEIIoQBEizjCwTcBcT
      Zo7P0eEhcRjihgnb2zfYWF8nizxcL2BlpYFdbeIMzuj0x4RBiL+YkgrQ6w9JMyDLyLIMo2iz
      sbaOYRTZqFc4PHpMEKcsplOaq+uIosBs1ON0MGHQPiHOEk47fbZ31pmPp0znLuPxBIDReMzp
      SRs/zlhrXrxKcnzwmJW1dcbjKaftM9z5DNcLkAo6hmZgmRrHh4ekacTUjbl5cx2BAuvrayiy
      8kaOOclzgEvUyiXO+yNWN7YZnncolqv48xFWpUKFMoEzZTL3qJVM3rpzk1pJRwtEMl9F0koY
      csxHD57wnR/8Aya9MyxDp27tcHh4zPrWNhohnlCgUdaZeim1ioUgKJiGSMGqYMoKsiRiZgIU
      76ANexi2RaGoU7Zn6KYNgsT6ap3uzGd7a53T42Psah1dkXi7ZHPW7tBstCg87Q1/673voEgZ
      QZzR6w9o1kr84mcfsrr5HmI8w2y20FWZxWyEVV2lUi4CIBfr/P4HmxiqSKVSplUsE4w72M1t
      1CwgTTIESaRVK9PujWk2GsiyQqOl0e91kVUNu/TVeuSvUt4PcIXiMMALE4pF49KK2DKlSczc
      cbEsC/ElLSUvluF7AZquvVL68wc/xnr4J690jFeR5wBXSFYLWG/eH71niJJMyba/wjeFV374
      AZBNKN549eNcIh8SmXtj5T3BudwS5UWg3FLFB09wfvnzl26Xb92m8A//0ZWlnwdAbqnSyZjo
      V798+Q6yfKUBkBeBLhF4DmdnZ3hPx9Y+tz0IvtBxQt9lMJown4zoD8dEgcfZ2Rl+FJOlCf1e
      73NHRvm+Txi+fLxt7qvJc4BLnHW71GtNhGjBw6M+siRRKldxpv2LXuHpmGbVZrgIqZUtjIKE
      E6QMBgNWm3VGc5eN1QZ7+wdsbm3RPjnDLirstR3K67eRRZHDx3tY1RaBt+DJWZe1tVXOO2cU
      7TJ7D+/z3vsf4HohmqYwGZwjKCaNWgVNUxh0TjkYhry302I482mUDbr9MWtrq5ydnbN98yaq
      nP+Nu0x+dS6RxRFnZ2c40wFWY5U0FXGmY1KpgDu76DHtjafYgktvNGHv8Jyz00NC36FzcoJq
      VRDSBEUzKNkWge8w81JsU6Hb6RAlKVECtWqFwXmXza0VDvYPMStNfM9ldW2V1Buj2VUmoxGK
      ZlLWJQ4PT/DdOSEya+vrDIYTSkrG6fmA1XqR7mhGkkQE0Zv7Ds6bIg+AS3zaPCcWili6SrVS
      wrYtht0zCqZFuVymZOoMA5mbmyukSczW+hqiolFtNimbGoKsUlTh8eEpa5vbvP32XcrVBu/c
      vYOuyqyvNnj4cBerUuHgyQlrm+sUDQ3btpEFyFQL2yhQLpfRFJHBPGRro8npWQ+rXCeYDbGL
      BgMnZLXZoKAXsUzt4sa+qb1vb5C8H+DLyjJc72IQ/G+bT4ZIegmjkJcqv4zhX/0l0o//1Uu3
      K3/wA8z/5r99pTTyMcGvkyA89/ADWOWvNvdQbrnyHCC3VLPJGKtQePkOkoygvtr7JHkOkHtj
      CZKMoL/+SW+/qDwAcks1cn12py+f11WVJL6z2riy9PMAyC1V33H59+2XT5prFdQrDYC8GTR3
      reUBcIlHjx8DEPoOvcEY3/eJQ5+F65OEPlGStx980+VFoEuk6cX7Ofc/vsfczWiu1pE/HVgh
      iNy4ubPEs8u9DnkOcAlNFtjbe4xVqbKytsqN1QpOJHJjo8nECX8TDLlvrDwHuMSNndvPffad
      d+pMBufcuZX/9f82yAPgKyjXV5Z9CrnXJO8Jzi3V+XCEL7586nNJFNksvdqY4bwnOPfGMlWF
      lSseFH+ZvBKcW6pZ4LI/utrJcS+TB0BuqT7uH/O//PT/Xlr6eQDkrrU8AC5xdvKETm/M+ekT
      jk6ffV/lvNt94eLcJ+02kHH05BGPnhw9t304ulgQPI0DPvr1hxyfXRz3YH+XTz7+mNl8wXjm
      cN7tvvS82iftV/hVud+WV4IvEaYS6WJClgYkgcO/+cXfsLZzEyWOSJUCs9kUogC93GB4us8k
      0Vmt25DG+InM3Ts32L3/EZ4fI0pAoYQ7OiO4/S4r1SLT8YRyY50sC4lSlXdur/KrTx4wCwWa
      JY3zs1MMTefB7h43775Fkkh88O5dXNdl9/5HOH6EUVBYJCpFXaKqq4xdj5gCajzlUXvGznqF
      hRdSL5cIMgl/1Oag5/Bf/Gf/FFnMO/LyHOBzSFmAqJpkWUZr/Qabqw2SNEP47YcnTQgzGV15
      2pwnyCT+lEdPjj9bqKLeXGE86NNo1AHw3RkF3WT/ySGgEPkTPtl9zPrmDQxVRtWL3NhaI00F
      bt19m7JV5ObODtLTO6aZNltrTaxqE286IA4CDo7bICnsbN9g4YVUDA3VtNlYbcHT+TFV3eK9
      d+6SP/sX8n6AS3zVSyMIwpf67pfZ/8se+/OOtWz/7sHP+NdP/pb/8z//H68sjbwf4Ct6lQfk
      y373y+z/Jjy43xZ5ESi3VJt2nT9+64dLSz8vAuWWKp8ePXetZVlGll0+L+pVygMgt1SD3l9y
      3v6zpaWfB0DuWssD4BLD3injuc9gMPjss097f+eTIR9++CHn/dEz34l8l/DTBa6zFMf1Xnjs
      ybDL7qN9fnf+2tB387HGX6O8GfQScy8hmp2SZSmL6ZBZAM6ww813vkurXqNojGhWLD785c9Z
      X9+kc9am1aojygVOzwc0alWyLOHxoyEF00bNAgaLkO//3nfoDsbcvfs25+0jBuM5tmkyDxOk
      YExkrPLB7Y1l//xrIc8BPkezZNCfOLTbHWRJotpoUav8ZlXFLMuot1ZZTEd48yHDyZwoTljb
      2iEJfbwgwK420WSBOJNQlYtLnsYxjuswnXu0ajZhJhJ5M7RimWY9n2f065LnAJdYXVlBVVXe
      V00UMWPup5SLKtOZQ61is7m1iSjLNBsNsoqNUapi2xayJIMokelrpFmGKIhAxsnjB/THF6vK
      vPXWbTrdETdvbtMfzrixbtHTNFZbVXqDCfD8BLy51y/vB8gt1ZP9f4OuZaxu/LMrSyN/FSL3
      xlILNQray8cEX7U8B8gtVd4TnMstUV4Eyi3V8NEx93/y8TOfqabO7/33f/y1pJ8HQG6pYjdg
      3u4/81nBNr+29PMi0CXSJOLg8T6OH5EkCWkSvHTRbGex4Ldf6XJd9wscP+bw4Mlzx8yy9LOJ
      eXNXK88BLnGwv8/a9i2e7O8x6Hd55+2bPD6esb29TrAYoZhlovmEUmudSafDxlt3mPbP6Y5d
      ZCEkTjJWV1Zon3VorawgiCpJ5OBMp5RaG0y6JzTWt8nCBfcfn9Fsteh3+9iGxEHPYWe1QiIW
      2FrPp2K8KnkOcIkUAUWWECWJlbVNqqUim9s7+LM+Jyc9PM8lSkUq1m/WuJrOZgxO28Sqzo21
      Ovc/3mf71g7nZ6fM5g6j0ZAolahYBmmaoSgyo26frVvb9Lt9RCFFVDQ2NtaRRAHPe/G7RLnX
      I88BLrGzvcWT/X1aa5uk3pSJC6VigUxbQ5Jk1KKFoSoAVKo2B48eY5kGzfU1qkWdk+6M3/+D
      9zg6PGH75h067ROsUo2icREwN7Zv8OTJPq3WCmeHp6xvrtM7P8eq1PHOOwiGhqYpy7wE33p5
      P0BuqfZ/8ksO/+yvn/msYJv8w//5v3ttaeQ9wbk3liBLKIb2zGeyccm6wa87/TwHyC3TsnuC
      Zbh4pXexWFzpSeRyL/JFmotfVZIkSNKL3zfKc4DcUn386JRfHUxeuM3QFP7L//juK6eR1wFy
      b6ze2OEvP3x+EmGAiqW9lgC4zHP9AGEQfDafZZI8O2A1SxPi5NMeyowoenGv6LNevl8SR0Tx
      7wyKzTKSJL0ols3nz2//QjKcxcu/myYxcfpFMr6MIAi+WIppQpJmxPHFb/30v7+9/bNrl2Wf
      Xdvf3S9NYhYLh9eZLweeQxCnBL91by/19FzjOCbLMsIwfO48f1eWJsxnc9JLruvnHWMZpB/9
      6Ec/+uxfWcb9X/0NiVYn8yZ8+MkuJbPA6VmX2WRMQZVZhAn99imppOI7DpNRjzCO+eUvfold
      shiN54T+nNHMYX/3EzK5QOz7JAiEgc9iOmLuxRQNndODR3SnPgUp5axzjmkaHB08ZOSAGIw5
      7c/QVIkwgTDwGA97TJ2QJHDo9scYmszh0Sl6oUB/NGTv43tkqonsT9jvTNAKKtNhlwgZbzZi
      NHMpmgUm/S6xpNE5PqSgaRyfnGJoKofHZ5Qrpc+mHszSiL/6q5+yuX2DzskhXgT+fMxgskAE
      sigkiGOOj04p4NH1FILhCYJucXJ8TOjO8WOB2J8zWyxIEoHu2TGiIvPg/i5yQafTbqOIGYOp
      g1002H14HyQF0ohOb4QipJy0z5hPJ8iKSrt9iiAXmA7PPzuf/miOKqW0u0NkUk7OOgTTLrsn
      Y1aaNY4Oj6jXyvz0J39Na2OLQeeYhZcQeTO6wymSIEASEsQJx4dHFJWIJxOIR22Q4cNPjomD
      BRIJ3eEMQxF4cniIZpicHh9j2iVOnuzhxSmyCHEmEbgOvfMzglTEnQ4YzTx6vS62oXHUPqdU
      shEEgYP2kHuHoxc+nHpB5p9+/+YrP+RpmiKKL+7zfSYAknDO7kGXMPRI4hTbNvEcFzkMMZs2
      w+4YN8sQM43AHeMsPHzfQ9FNVFmhKAU4UolwPuTgpEO1VmNna4X2aZ/FfIzrOZwct/GjmJVm
      jYcPd1k4LqIoULZ0jg/PWN3eJAhSWq06i/GAwFswDUUWkyFxmpH4Hk4YYcpw0O6xvVll7+ER
      il1GEwQ2bmygagbubITrTDg8HZGmCdPplFZZY/+wjSREdHpzmlubdA4eEQQuUzchiQJK9d8s
      ht0/3GMexYSZRhz5xHGA5/lAymw6RwjmTKIMZ3SGG4nIRomVmsn+7i6l+jrz8YBOb4jvOTSr
      NqOJh+NMGY2m2JU67nwECJy1j3HdkOZqi/Fows72DY6OjrE0gXZnjFVUkOQC48kY2agw7x7g
      YeAtJgRBjJKlHJ+d4DkeQRBRs3W8JMGurVMyFPqjEXIwY+T4BKlKHLkkaYzr+chCymQ8R4ld
      Bl5COD9n5gKaxXbL4GcfPmF1pYwAxKHP/mEbkYyVksyv9s4QiEkFhbVWjd55hyRwcNCZ9s/J
      pAL+fEqUpGS+TyDApNfB81w0q46uSksPgGfqALOpyw//6B8w6XcJ3TkTN2KtWUOKEgqaSWpB
      WihQQCWJBeIowfcviiwiEZFQol626M/OsG2bqqXT7o2xbIssnlMotSBJkI0SSeSzc/cDCgRM
      Q9ANjXoDTo9OKdXXCDyHKIWSXcYd9JE1k/mkh1lukXgTxqHO1lqdw6MuqxurFKs2bubS7Y2o
      WypRnGKWqjTDlFKlgiyWsWo1xPMJ9WqFQknj/OiAWrXOaDqnUbXpd89JUz4rGCZamT/8wduc
      n5+jmGWyLEN4WogIXYfz4Yhyy0TVixSLFoWChKzqiKJMq2oyGwjYtkWjaqOoGrqW4roKlqkT
      OBN0u0pBFtAUgUgoICJQMjX29g8omjqDmUerVUctiIiijEjCUfuYzY113MkAUbOwDQ0JkAoi
      cy+hYlkYpoqg6XTOO6TVW0hAIBn84R/+PXrdLrJcIUNAIEMUQJE92v0BpZZOopqYZhFRUxBU
      nVpFZ61k0PUh8yeUSjZFo8DjwwNaK28ROhNKdhFnMUGQZIxyjbPOMcWixaB3Rmtti9ngFLVY
      p1rUUW2D/tRFzgJcL8YNold+wF/FN6oVaL5YYBWLLBZzisXlrSy4LGnk4yUipqZ+qe/5zhyh
      YFCQX8/Qw8V0RKc/5eatHaSXTVSdpcxdH8s0Lr1ff/53u/zpX+y/cFvF0vhf/4d/8srn+61p
      BbKKRYBr+fADiIqG+RVeDdLM13u9iqUqd0rVy3cSRCzz4p2nN/l+faNygNy3T384JhNfnKNJ
      okCtZLxw25fxrckBct8+mipjWV/fCLDflQdAbrmcMxg9utIkhDSFL9IKlMt97cafwMM/udIk
      Lqv65yPCctdangNc4vhwHy+IUXSbuq1TMC1Cd4Gqm7ieiyZLIKlMemdYjTq7e8fUSwatVpMw
      zigaKpPpglLJZj6fY5dKzPodTvpTVE3n5tY6AFkaE8ZQUGV8b87Z2ZjVtRqKahD4LpIoUtBN
      Qm+BahRRxYRf/OIjSvUWt3c22L3/MVGc0FpbYzT2MAsipm1Tsi1msxlWsYgfhui6zr1f/pxM
      KvDu++/iLBzKJYvJeIJZLCIIEmQp7dM2zVaNTFBQFYkoipGCIb84mNIoF1mpl5ALxmfrDCdR
      QJhkZBlYhsbM9TF1DddxkMSY7iBgY61CEINdfPVK7euUB8Al4jghjS86avb3HpAqNqk/ZfvO
      O4zHQ5IwZHN7h2rV5P6DA4ySRZwk9Don3H/S4c72GkLic9qWGY16bL/1HcL5gvffe4dHe7sc
      Hh4hCDDpnzEPZZp1k2ZrBWfhsphkBImIHwREmUghiWj3+1Qaa3z37g08d05ZXCPNYgTJ5L1b
      VR486eCFElKSELguZ2fHDHp9apUVBKvIuzubxFGIIBY4fvSA9nmXUnODRk2nv9eBYgshGAPQ
      PnrC6dCjWdZY276DkcYkKYiiyMH+Hk6i0KhYCIJI6C9w3JCCYSInLuf9CZXVDeqWjOel+JHC
      4eN9BKOSB8A3SbFoEqciRV0mtOtYtk0W6sRJSskuEfsOcZJRLFbRixM2qybjUAR/ws0bW5jF
      Av2zEXbrFqaps9ooERkChwcH2OU6BSEioICpKySijq6K1GoVZsMZilZElRRqikyUiaTuAkXX
      qTZXSZKE5uoaSRSCIGMXZQ7bI7Zu3KB9coZdqVIsKMyjAK1QpFEuI9sWgiCwsX0LIUtIRZmN
      gkW1XGQ06YJSJHaH2KUSiiTgLFJubFSxbYOKZRItPN59Z4OqIfDIW1C2SyiRA3aDcmYTRwmS
      IiOmEZrdpGgZVGyd2SxgMBjRbK7RGcyWfUufk/cDXKH5ZEh/7LC9vfXGrswe+Q6HJx22dna+
      ZE9xRve8S3NlhVf5afMHP8a64krwZfIc4ApZ5RpW+c1e7ELRTO7cuf0VvinQWvnmz1eU5wC5
      pZpP+lhXPAb+siGReQ6QWy5JA/1q3xXK4hjyVyFyb6Jk0Cf46Fefu5/YbKHceeu1p58HQG6p
      kpNjvB//q8/dT/n+D68kAPKe4Ny1lucAlzg6eIQfZqyurREGPrIso2oGkTdHKph0O2dsbqyw
      8GJMvYAii8RJxnS2oFIq4vohVtFg9/4nKGYFf9IjFUV0VWYeq7x1e4f5oM14EXBjext3Pqdc
      KTOfTVE1jcMnT9i+eZs0SYjikPl0TNGuYRd1REliMe7TnoTc3mgy90JsU2M6m1OplBkOx9Tq
      daQ3tf31DZEHwCWSJAUEolmHQWzgjbvYRZ0gChEYIEkiBweHqELKORq6KuI4c6aTKdVSGbmy
      iqXLCLrNre0Nfv2LDrKsIJCSISCKAjMn4J2379I+eIyoa+w+3EMxTMR0QpIkzPrHuFKN1B0h
      CBnzUZez05itjRq98YxULF6cgyTS7cTYpsqT6YLJdEqxXMVQl7cA3TdBXgS6hKI8HX4lKtRr
      Neq1KrpWwJlPENUChYJKQZGYBxk7N1YZjB0alTLVxgrVSpm1lQaCVEAMFjw+PKVca/Le+x9Q
      KdvcuXMHXZWpWAb3H+wiKArDwZiiZVOv1zENHVnMSCWN1VYdtVBAFmHuRZRtnaPjU/Riicid
      UVBl5n6EZdnUqlV0s4ghJUsfb/tNkPcDfFlZynAyo1YpP/PxbNwnFg2qpeUN7vgmGv7VXyJ9
      wUqw+c//xVdKIx8R9joJ4nMPP4BdaSzhZHKvKs8Bcks1PTlBHw8/dz+xUkXe3PpKaeQ5QO6N
      JZbLqJubS0s/D4DcUvlxjLdwnvtcFETqpn7l6ecBkFuqo/GMf9/uPfd5UVX4lz/83pWnnzeD
      5q61PAAu0T47W/Yp5K5YXgS6xMK5KJve//XPOGjPuH13G1OCWQRlVaC6sYP20kbj+40AABBP
      SURBVMkxc98EeQ5wmSTk8PCERJS5fXuHll2gPY3YaVi0J0H+8H8L5DnAJe7ceZsoTtjaWiNO
      UhRZ5g+qGbNRl62N9WWfXu41yAPgEqIkUXg6lE4VL/4rSQKVxuoyTyv3GuUBkFuqqqHx/Y3n
      B9e/rrUMPk/+KkRuqZa9UHZeCc5da3kA5Jbqb9q7/Nf/z//G//6zf7uU9PMAyC1VmmXEWUqS
      pZ+/8xXIA+ASo/4Z47nPdNilN3x2XsvJdIrjPP8S13B0seTnoHvGo4Pj57Z7ngdcLCz9aPcB
      /fEcgF7nlId7j4iiCC8ImUynLz+v4YuXFc19eXkr0CVmbki66JAlHlmqMOq1MUsVnMkALxFp
      VG1GvQ4ULITIwc8UksinVrYZTFzuvnWL44N9Zm6EVSyQoNJrH7B1+11WaxbT2Rzd9iHTGE19
      bm7U+OTje0z8lGZJ4/TkhGazyXDQxyrZTGc+b9+9w3AwZDYdMHdDKraF93Rqdasgs/B9Fn5G
      1ZQYLUJ0OWXqhKzWK4ydAFsTGc193nn7LUQh78jLc4BLCZBGiJJK5FysXJ9EDopWxdQUXNfF
      DWJWaiX6gyEnJ6dPvyYQRyFhFOEGEWVdAEljNp1SrjVp1at48zEFzeTJ0QkZInEU4nkupUqV
      tbU1DNNifbXGyZMD/DjBD0I2Nm8gPb1jgqSyWi8hyAXcxZTp3GE2GeMGMTdubNLv92kfnZBI
      Ks1aieFoxtbmBkeHhyTpxVz+uTwHuFSr1ULKYhKpAK0NyqMuZqWJNx2imCtoioSQRgymDqsr
      K2yZJXRVBkHi9s4G570hWxurTJyYii4hywqNkk5/OKZVb1CeBWxsbSEIErd21ulPXbZvrNM5
      a2NXmhQUkQ9+v0q7fUZrdRVVubhd65vriKKAKAhEYUCaNanZGoOJy2a9QkEWWV1dpbG6jW0b
      iAI0Gk3anS7f/d736E3cN3a26q9b3g+QW6p/9+Bn/F8P/oK/v/E2/9MP/vhK0sj7AXJvrFLB
      4N36JhtWfSnp5zlAbqnynuBcbonyAMhda3kA5K61PAAu4czG+FGK4/6mx/fTKtN8MmR3d5fz
      /rO9spHvEsZPu/WzFMf1XnjsOPA4ODwm/Z0aWJZl5NWyr0/eD3CJ/mhMnExI04hyUWcRCnSP
      97n5zndp1WuI3RHNaonHj3axShVGowlrK1UyIWSvfU5rpYWQpbRPDlHNMhohw0XIe2/f4dH+
      E27ducNs1KfTH7PSqNIbT8ncEZGxyge3N5b986+FPAAuI0gUlYT2LGYyOMYoN6i31mjWfjM3
      aJYmZJJKGnp403NOs5hSqUx9bQtn3CVIUwpGGSEOcJOMT8d5CJKIoij0R2NurJQ56U5ISSja
      ZYrNb/7qi98UeRHoEpVymdbmDaqmydbWBqZpUqvY9EYXL6rVGjUEUaLZqKMWVMxSg2ajgW1Z
      WJpCpVKhUa1SKVmUKxWELODsvA/AWqvOo/0nNGo1jnszVlpVJFGiWm8xHnSX+bOvlbwf4Gs0
      GfaIRY16xV72qbwxlt0PkBeBvkblWnPZp5D7HXkRKHet5QGQu9byIlBuqeZnAzr7H71wW+uD
      25S2Wleafh4AuaVy+2OO/+rDF24zG5UrD4C8CHSJLMsIfJ/0aUNZlqWkv9t1+1SapPz2ljT9
      /EHeWZYRBMFLj5m7enkOcImz4yd4iUAQxizGfXZ21jnthdy6uUkwH6IWqwiRS6YYjDttNt66
      QzAZMnIi4mCOKBbY2Fjh5KTN6toaaQppEpKEAagm3viceZix0mox6PdYW1/n7PQUsyBy2Jtz
      Z2sFLxZYay3nXfnrIM8BLuH4Mbd2dpBFKNebVEtF7HKVwdkhjx4dcXJ6zNFxB7v4m6V8JtMp
      x4/2CZGolQr8/O8+otas8/jRHv3hlE7nlKPjDpapMfNCbt/cYd7rUGnW2N99xGLhIsoqrZVV
      ppMxvu8v8Qp8++UBcInVZpUHDx5iFMvossB4EVEumVilKtWaTa1WY3VtFVEQ0DSFx48eEyYp
      lmVhFGROOgNu397i5PCYemuV+bhLJhY++856s8b9Bw+RDZP24QnVZoOCIpJJBRaTAQXdIAzD
      ZV+Gb7W8Jzi3VPs/+SWHf/bXL9z2zn/1j1n/wbuvnEY+IiyXe4k8B8gt1ag3QElevE0rFVEM
      7ZXTuCwHELILLBaLV04ol/uyXNfFMIwrTSNJEiTpxesN5DlAbqmO2j3685dkAa9JmqaI4otL
      +3k/QG6pHrfH/Olf7C8t/bwSfA2kSUKS9za/kPSjH/3oR5/+Iwkd7n2yiyAVkEhAlIjDgCiK
      ieIEQcjwvIA4ChElERBIkoTA98gQWSxmdM87FDQdSZJIkgRRFPHmQx7sHSDIBWQhJUUgTSKi
      OMZ1PNI0JkPk5OSEcrnM8PyI4+6cSsnE8zxkRcFzHc57PUw55u8+2mXhuNhFnTgFsoQoivF9
      H1mRcRwHWZbwPB8EkfDp+Z2eHFMul196MX5XlqX89Kd/w8bGBoHvkWSQJTFBGCMIQJaSPh34
      nnljep7MvN+mYNmcHp+gqTIpIll2cY2CMCUKfUQh5ej0HNM0ODk5oWgaBFGCIkscPt6lP55j
      WUWCMEIULqZUj+MIUZTwPe+z+5JmF9cxCGMkEbwg/Gz/yJ3Qn4VYhs7J4RNMu8zP//Zvaa1v
      EAc+cZKRpTFBECEIwtPfkuE4Lmoy42iS4Q47FAyFX917TBS6mLpOEMbIksBi4VzcF8dBUVS6
      7UNOz84p6EVkWST9reciiUPCOKHdblOyLVzXR1EVBOCgPeTe4fKme3+mCDQ+a7N5933KzLj3
      6BRFEUg8Dyf0MYwihiKwmCwwakViL6Jx4y6jzhF+4KPpRcQsYjKeUjQKdP0EBJntzVVkVUPI
      EqJgwaPzKYIoICQJKxurDLszvEWPeVKgUTYB6A3nRCmcH3u4UUIqqIiSDFkCaYEoToCUv/3J
      fyA1KlQKArVahaPzMeutMgkS+DNGsYGti3jjLotUo/n0+F/UoneMYRq0hw6Dk10Khk0aOiSC
      gq6olNSM0Cix+9Ev2bl5G6lksVItcnxwiKJb7D34mFmsYqkxKysr+JFK5+QBmt1AyMBxFqiy
      xK9+/lPGrsg//id/RJgIvPXWDo8e3ifNMpJYICFAklQKmoYTpKiEhLGAIIlISUiKTJosOOvN
      2F5fQxQzBDHFE8usNSr4cUY866IZBu3ejGnnEbJuIcQ+CRIFuUDdFFmoFgf3fsHWzm1CQ2W9
      ovHre4eYZZM4ijk/PeRXj9p85/YmSThnFGpMB2fcfPt7VA2D/niOPzlj6NQJx+d4QYAkK4hZ
      SBKLSEaB/Yf3ODzt8ft//z+hVlRf24P8VT1TBCqvrHD04GN6Y4c08pFkhUqtQaPRpFq20UyL
      Vr1Ba61FQdM5OdgnRaLZWsXUVWRFwbYMhILNuNum0agymzukSYKiqjiOSxpHCKKMJGYEUYws
      pESo6KqCLMtkSUCKhK6I+JnC2uoKkizhey4IIggiW9u3ePvOTcrVGjtbm1QbLeqNBqYUEyQC
      rrNALei0VtfQCwJxqmBo8kubwl6mPw9ZaTbxJj0arRWKpk6pUqNathGJOOn0mc1mrKy0SOIM
      SRQomBUGnTateolYkDEKCrXGCiXLII09VKOCIkIah0jyxW8u2hVu3tpGREAiZm//AEESCcIE
      3TBZWWldzFQtCniug6IZkEYIooRdrlIv2+imzc7Nm1hFi/XVJsVylST0yQAB6E9cGs0W4WJI
      rdHCLpoX362WkMWUw9Nz5rMZrbUVkihFFkUUq0noT1nRJUJBxfF8yraFLIk4joOiarTWNqhX
      LLI0Q5ZF3DCld3pAlGQEvousFEiigFQUUWUZTTfZ3N5BzQJcz8UNotf4OH95V9IKlMYBx+0+
      GyvVi4e7kNe1X4ckWDANJaqW/vk7/5bxoIdeqqEpr2fp0dm4z+lZj52776LLL5lnPY3pT+Y0
      qhUGgz71euOFu/353+0utRKcN4PmluqNCoDQnbF/dEZzZe2FMxdEgUsqaRTkvPEo93o8Oely
      OgquNI0v3A8QBx5BnFJQ4G/+v7+m1FzBmw0wzTIrrTK9bh+j1GQ4HmJrMmedc2r1JkEM7733
      Fl/P2t65b5NG2eDm5tWO+vrC06KIBZO1Zsrh/h5BJmGZBnphlY1miZ/87D7fuVlh6HhY5QpO
      v41dqVEq2ZweHeLHYOZF/dyXFfvgPr/a5uskJAl8kVchsjRhNJ5QKlfwnBlywUCWRBRJwgsC
      VFkEUWExm2AWi8xmC6yiwcINKJdt8mWncl/W/MGPsR7+ydLSf+ZvtiBK1Go1ACz72Q4jXfvN
      W3mlcgWAavXivxW1cKUnmctdlbw2e4le55Td3YecD8bPbnjaY/qpQbdLGAc8enxIr9vlsmY1
      fzHh/v0HnHb6L9kjYTZdEPguUfySgfVpzIOP79E+HwBweviY+/cf4Ic+s7nHaDDkZUPy9+5/
      zP2He5e+GtE9f35u0mgx4Jf3HnBy1rvk173g18QBC+dqK7mvIi+1X2LhXHTiuZ7PR7/4W6Ri
      A2d0xq23P2A6HeM/mVJf38ZUYg4en+BlIuJiQRI67B4PuL1RYzAcYFdWaZ8eceud7+CMutx9
      520e7+1yGLhAhjcfMVykNCsacqHA4ZMud99aI0Wi1xuAJFEuluj1zrDra7x7e4PpdIZZaZJl
      MU4Ad3dafPJwl/4kZKNucHJ8QqVR5vjwiFZjnUWW8t27dwjDGKUg0zk94PDwmJWtHUJvRkHS
      EI0aQji7WK1+PuR8FlMxBKzaGjVpgaSXcBczHnx0SiAZlE0dQQBnNmLmhMgFnVapwMFJl8ba
      GkQOkqjQG0U0ygKSUeX29ps17XueA1xCEGVqtQr+vI8bijjzGdVKmX5/SBRFIMroqoJeatDp
      dlk3wcsURuMJWeDjhglmQWE2n1MsV9ELCkVN5qTdIUwExNglSCVcL6BRr6LoRW7ubFOvliFL
      SFLY3FynsbJOFjpkokrJLuLPJxRMg8dPjsiQiIIFp+0ujdVVaiWbgl7kxlqL6WyKValTkES2
      d7YRRQHIcH2PxWxBqdYki0LsUpEoSpgM+0zmFxXS8XRO4DoUDJu1Zu3p9RDZ2dlk4Qa4jgOJ
      TyaqmHaFWuWiV3m+cGg0G4iiwq1bN9AKRcqlIuVKleFwsLR7+TJ5R9glosBn7njYpRKeM0fV
      DCLfRTWKCFlGEgcgqmgFGd8PUBWZKAXikCiFYDFi7/ExH/xHPyTx5hRtG1EQmM+m6EUbMUtI
      ESGJ8KMEXSsgyzLuYo6sFhBFEUEQLopU2cWrBZKqoykys/mcQkFDLajEYYAXxFhFA2exQNU0
      ZFEkE2Axm2OYRSRZulhYO4qQREhScByXgpxx7/59Nrbfx9IyVO1iYe0o9EFUUBX56SsqMQkS
      kgjOYo6sanQO92ndehuVlCzLEAQBUciYLTxM86IBJU0yXNdFVS+uTdF4thd72ZXgPAByS7Xs
      AMjrALnlMtfhxj+70iTSLEMUXtxIn+cAuaVa9gIZeSU4d63lRaDcUkUff8T0//23S0nb+Of/
      Ig+A3HJlUUQ2my0n8Sjm/wehF7UgmYcwDwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Labour Costs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Wage Change by Industry(%)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uni Courses' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dV5McZ77n92+68r7aW3Q30N3wjt4MORN7pF2F9uxGrEyEbnShN8IXoDvd
      7YWkWMVqtbsTZ3fOOSvFzIkZcjgkhwRI2Aba26rq8t5kZqXTBUAMh8AcmsEAIPP53ACVlZX1
      1NP1q3qq6nn+KXme5yEIPiU/7wYIwvMkAiD4mgiA4GsiAIKviQAIviYCIPiaCIDgayIAgq+J
      AAi+JgIg+JoIgOBrIgCCr4kACL4mAiD4mgiA4GsiAIKvqV/+R9d1DMN4nm0RfMDzPCRJet7N
      eEQSK8KEZ2kwGKAoCsFg8Hk3BRBDIMHnRAAEXxMBEHxNBEDwNREAwddEAARfEwEQfE0EQPA1
      EQDB10QABF8TAfAlD9M0+fZzYB7s/2P0xAB0Sjv8/D//Pb/79CbuE67f+uL3FNqDR5dzd37P
      zf0qrtnmb37+N/zm179l4Hx5rc5vfvPp02/502KbfPLxR3xx/VNy1fYTdrA42M8/tnVnZxPb
      +eanUG53nfXdHJ7rcOfGNW58cYuOYT2+o2vRaHX/cHnYZ+Ph/e6s3+HmjRsUa39oX7PZxP2e
      07i69SL5aoetjU0ANjY3vvE2rdIhxebgG/f7to6213j//fe5cW/niddX8nmGX9vmmD0OC5Vv
      PLZrm3z20e9o9k16jSK//eAD1rYPn7iv+qSNerdJx4SfnV1l/doHHNT6hFJTKO1D3NgYcbMP
      vRYf3PiMXLXNG/MxBkEbd+hQrnd5+e2fYlV3+Y8fr3Hh6iUarSrXfvsP1Ht9RicXuHN3DdWy
      eOevXuP317e4cH6VvY37DGyJ5fEYhwOJyxcvMzee/sYH++fzcIGAquJ6sLN+m2rTYnV1mq2d
      AnOL8+R2tzjOH7J6YZWD3SOkQAQNA71dYm07jxaMMhK2qQxkLl84QzW3w3GtQyyZ4Whri5nV
      K4CHYZqMzswRcvp89tkWrhxgdS7LVq7CwvwUtaaD3ipRrNSYX1rGMB88BUzDIBjLMpqOcvfm
      daRwGpkhAWw2DvIowRghq4PuOkTTJzDr+0jRERJBh1qjxdjMPIfr20wsLrE0N0nhuMbCmfPc
      /GiNDTwK1QbZ6C4HpSaRxAhur4RlQ3Z6nuPDA7KTs5ycnWNt85DJ9MpT6fVKS+ftt9/kl7/6
      Dc2sxs37OyyevopZ3aY6UIkMG9ze22ZmZpWwXWOv0OTy+VPkSk2GzRyH5Q4vv/YGe/euExk7
      ycr8CNc+/ghDSTATN7i1VWD5Mty/e4e51VeZTIXJba+xeVTl4kuvUd65RYf4k98Bxpau8j/+
      09f5T//u/+bWdoF3/+qfcbx9l3zD4KdvvY7s6DRrx+QrbYrl0qPbKbFx/pf/+b/ni//v3/Ph
      9bucvPoTlufHGQwGXPviC0LhBLGQTDg5zlwqwt3b1zjz5j9lOumwsVsmk84ycWIRadCkWu88
      lY7+NlLZceZmxum1atRbBnqrTO64xvKFq0xkk4zPLLAym6VYOKKlO2iqigfU8hVWrr5EXHIY
      Sirnzp9FU2RqHZ2rV69g6X1mZ+c5uTALksJLr7yOqle5fXebmeWzjAUUDistLly5wmgyzNBy
      aDQaOJZOvdF71L4zF19iOhPm1u07SJERzq4s4doW1aMD+jaoqooajHPh8kW8QQsplOTsyiKH
      B/tIsoYsBxgdS9LvPzim43jIMoRiSebn50nFQtQbfS5cuYqjdwlGU1w4u4ztwlg2yaDfR5IV
      XPdJ44Hvx9GbfPjhR6ihON1eD8+zuHv3NqXmkDdeuUggGOXVN39Cp5rj2rVr2GabfKkJ6BRq
      Nj99c4Uvrq9T7Vqcmh+nX9yC0dPMhzro8XkuXblCOhrkpTffpbF3mw8+/ZzdQpOfvn2J+7d+
      T92I89rlMyjvvffee19vXKOwx7U7G2Qm53j1/ALXrl1n5fKbzCQk1vYKZFIZkiMZ2o02mZER
      Ts5OosYyxKUBv/34GlI0yzvvvMHmF5/iBeMEFZVLy3NUBw7jY+NowSAjiSinrr7KxrXfEUrN
      Epb7qOEEsZBCb6CTHp1mNB17ah3+J3ke+dw+jfaAyZkZjE4bLRjixPIpDtbvIQUjBDWNSDhA
      bGQSvVEjFEuQiEWYmp1i885dtOQII4ko4VgcRYKw4rK2vs3Y9AlCmkwskUTGZX3tFh1TYuXM
      CoXdTexQnNX5ce6traNF4mhqABwdT9LIjIwRDAZIxqPsb9+jVGszPX8SSa9zXO+SiEeZmp2h
      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
      y0kUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Uni Enrolment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uni Salary (Line)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uni c employment' width='133'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='polyvsuni' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQ/klEQVR4nO3d/XMbx33H8ffu3QEgCT4AJPhsUaKsJ1uOnbptmjp1JjOZdqYPf2R/a2b6
      Q91HN02axHFTV0kc2R5FlqwniqJIiRIf8Azc3W5/OICSTMBVReJ45H1fMxrgDnu3Kwmf23ta
      nLLWWoRIKX3UDRDiKEkARKpJAESqSQBEqkkARKpJAESqud031WoVY8xRtqUvay3GGBzHOeqm
      iBNGHYfrAMYYarUao6OjR90UccLILpBINQmASDX3/y5y/DXbAVeur2EtaA2u4+BohaMVoMh4
      GqUUnhNtD1wnmna0QmuFVgqtNVqB0ynjORoUuLpT1umWUzhativHRSoCYK1lp9okNJYwNIQm
      OqgOjcUCfhBircUPopMAQWiwFkJjMNZijI3KWksQPivzTWWVAq0UQCdooDvB6E4rpdAqelVK
      oQCtX1wm4zmdad0JpN4Lm9sJY8Z1UAo8NyrrOhqtFJ4bhVPrqKwimtdd1nGisO5Na4XjPJve
      W677d+lsFLrt1EqhtELRma+i+YrnNxxqgP+zBycHwQNiO2EACDuvxtoX5kfTnbKd/wbTCWW3
      TDsIo3XsBdcSGBO9dkLoByEWaPudsp3P/cBEoe1MdzcAphPkF6ctoTGEoX3u82jaYp+1KzR7
      7TOddlvbafcL0wZjo7+j6vSU0KN37QSl2xt3A+dojdbs9byu0wm58yzs3YACZFwNKDKd0Htu
      d2MTBb3r+Z4eUtIDHIXubhFA2s/eGhsFDfb3mN2NQ/BC7xvN735urSUIDJYo1GZvOgo/RBsK
      a59NN9oBdALY3VAAL/T0IAEQMdBKoTu7Z93dtKSQozWRahIAkWoSAJFqEgCRahIAkWqJOgvU
      KD/lyzsPyI6MkQnrVFohb15+CzfZ11LEMZaoACig7fs4fhsvM8SpCY9Krcn4sEcYhgRBcNRN
      FCdMogJQq9cYmyjSatTxwxbrdVi+OB/dX+M4uG6imitOgER9o4ozr5EdqZDJDaMJaQeW4YyT
      2IE64vhLVACUUuRHxzpTLq53pM0RKSBngUSqSQBEqkkARKpJAESqSQBEqkkARKrFGgATBqxv
      PKLRaMRZrRB9xRqAr679lv/+9CpffP5ZnNUK0VesASiVZjD1MuW27HmJZIj1m/izn37I0GiB
      erUcZ7VC9BXrrRDv//Cv2ak0GB6diLNaIfqKtQd4unGfj//nCr+7ejXOaoXoK9YeYHp+me/o
      IR7utnt+bsMWX355i/HSLEH1KbuNkEuXLsq5WjEwsQUgrD/hxz/9iNGJPIHN9SyzvbFGuRXg
      1WpY4zJXzFGuthgbdmVAjBiI2AJQ2biLW5jn3le/5t0/+4ueZbJDQxSKOdr1HayFslWUCm7n
      9zBlQIw4fLH9NmjYbrK28RgALzvM3MxUz3KbG2tkRyfxbIvdhmG2VDiWvw0qjofYNqlOJsfo
      SI7RwjQ7W5t9y5VmFzrvcgzl42mbSK9Y9yk+/ODv8AqnGSuW+PPvl+KsWoieYj3B8t3vvgcm
      RCk5ryOSIdZvYrvVws3mGMpl46xWiL5i3QU6feFbNJwV5mZn4qxWiL5iDcCdm9dY2ahQK+8w
      Xep9FkiIOO3bBfrNlV9x9epnNIPO2dFWmbvrW4dS2dKZ19HtGplR+fKLZNjXA4QGhhy4deP3
      2KBFsTBFtRlwq1nH+g1eP3+OV/2pzvt3bhDgUq/XDthsIQ7Hvh4gNzzC2fOXyDqKyeIYfjvA
      zeYJ65tk84VX/vIDOI6z9zA4IZJgXwAuXbxELpvh7LlzZEYmWVpe4uzcBG1fMzd7sF0XE4a0
      Wy1abf9A6xHisOzbBcpkMgBox2OqWOjMc3jrnbcPXNlYsURpyufy5UsHXpcQhyHW6wD50TGC
      RoWffviv/Oq3X8RZtRA9xXoa1BhDdmiE7337T5ibGo+zaiF6irUHWFu9x9L5N7n5+8/xvN4/
      /dxuVHi6U6W2u8WD9U3kmFkMUrxXgs+8zkeffEppYbl3AWu4e+sm/tAUul0nn3WoNAvks3Lv
      kBiM2ALQ3N3gg3/7efTYe3cELp/bV2ZrY4WtWpva7iOWZiYZGnIJggDjyYgwMRixBSA3Pst7
      717i19dW+l5LKM6d4buleda2qtj6Do93W1ycy6KslRFhYiBi/UbVKhVavs/69d/x61KJP/rW
      hR4tyrIwnQUmWezMkotnYlBiDUBpdpHiZp1Tp9/v/eUXImaxHl2Wd7cZGZtgfEzGOopkiHdA
      jO8zPlFgLD8SZ7VC9BVrAAqFIqv3bnHvwXqc1QrRV2wB2L5zhcrIWWZnphhxe/8ynBBxi+0g
      2M3m+dk//wi/9pTR0mu8+25cNQvRX2w/jHUQ8sNYYlDkHgORahIAkWoSAJFqEgCRahIAkWoS
      AJFqibq/2G/VuXX7LoHKkLVNqi3Dm2+9hScxFQOSqAB4mSGK43kaxsNvOSwVPar1FuPDngyI
      EQORqADUtje4eX+T18+epr6zyWrFcuHyAlojA2LEQCTqSrAxIe22j9YOrqMIDXieK1eCxcAk
      apOqtUMu5zybdr6hsBCHQA4vRapJAESqSQBEqkkARKpJAESqSQBEqkkARKpJAESqSQBEqiU2
      AFuPH3L73gN5PoAYqGQGwBoeb1UZ0i3KDXmgnhicZAYA0FrjaE2C7tUTJ1AyA6A0E/kMO03F
      2HDmqFsjTrBE3Q7dj9wOLQYlmT2AEDGRAIhUkwCIVEvUiLBBaQch1+9tYgGtFK6jcbTC0RoU
      ZFwHpcBzoyFoWimU6r6++F7r6BF/WivU3qvaW+b5MiL50hEAP+TzO48xxhCEFmMMobGExoCF
      dmCwWPzAANFBtwWMsVgL1lqMjd53H9gXmm7ZZ/Ptc2W0UjidILhOFDRXa1QngChwdBScblml
      FI6jUd1lAM+LQulqjdZROcfRe0EGyLjRersBdp0ohJ7zLNiOjsp7rrO3Ach40XutovdeZ0Og
      eBZmBXsbgV7Tx52cBRoQ0w0YEIRRoMLQYC34oQEsxnT+WEtoogB1X4MwWrbtR69hJ7Rm79V2
      1gN+EEbrDcK9+oyNAm2txQ9CQhOtsx2E0efG7nvf9qPlu6G3nQkD8Ny8btCjcEXXa1wn+pNx
      nU74OmFzn33mOlGIM50Qfr3s3medZRyt8VyN211/d106et/9zHFefU8+FT3AUdBaoTuj+rtb
      5uPgm7aH9msT3V4zDA1BaPBDgx+Ee+H0OwELQkMQRK+htfj+c/ONodkO9kLqB4YgjD4PQ4sf
      hgRhFN7ngxwEpvNZtEF4cbf15XsnCYB4wTd9cdS+CYWTScZ5FNPpOS2d3VFjeZldGwmAOBGi
      Ew///2OSZMRXiCMiARCpJgEQqSYBEKmWqIPgVnWHL2/fZ2h0Ai+sU26GvPHmGxyfk4jiuElU
      AGwY0A4CdKuB8jIsTHmUqy3Gh115PoAYiEQFoFavUizNUdl+gh/6bPmK+eJ8dAuAPB9ADECi
      boWw1vDk8WOGx4u4tk2tZShOjB3LWyHE8ZCoAPQjARCDImeBRKpJAESqSQBEqkkARKpJAESq
      SQBEqsUbAGvZ3S3T9tuxVitEP7EG4Na13/Dhz3/J51evxlmtEH3FGoBCcQpT32WrbuKsVoi+
      Yg3Axx/9J1MzC9Sru3FWK0Rfsd5d9od/+gN86zI2XoizWiH6irUHqO085t9/8hN+8fF/xVmt
      EH3F2gNMTC3wnXc0jyq97+u3xuerm1+RL85gG7vsNEIuXnj9Fcb6C/FyYguAae3wi19+wuTM
      NK1G7wDsbDxgq9bGG2nity3TYxl2qy3GhmRAjBiM2AKwu3aT/OIF7nzxEX/8g7/q3ZhMhunZ
      RZq7j7EoGs2QiYITPS5JBsSIAYjtGzU6/wav1e+y+N73yXq9R/nmJ+eprK4wsbBExjbYrhtG
      cx7WymlTMRixDoip7G4zPFqgWt5hfGLipZeTATFiUGLdp/inv/9bvOIyI6MT/OUP34+zaiF6
      ivU06Hvf+z7KhHiZbJzVCtFXrD1Aq9WiWJpmclIuhIlkiLUHOLV8icJYnsJ4Ps5qhegr1gDc
      v/Mld9Y22Fi7H2e1QvS1LwCrD1ZpVLZ4sl3bm1epVA6lsvnFJWjs0lZDh7I+IQ5q3zFAtVql
      MOxSrVW4ff0G+eI4WW0P5RTkxtoKbjaPMeGB1yXEYdjXAwS+T7lcxct4LJw6w3BGE4SHcwuC
      QhHKRS2RIPt6gOWl19ipB8yVCvg+WDuENYdzrcwPfGznqYhCJMG+AIyMFRgZi95nsz2LvLLx
      whTFquLyxfOHtk4hDiLWs0DF0iyt7XX+8YN/4Mpn1+OsWoieYr0QVq9VGJ6Y4W/ef4fRnDz2
      Qhy9WHuAR+urlBZO8emVT8jlep8KDdoNytUGzVqZx0934myeSKFYe4CFxSV+eeUzijOnehew
      lrs3r9PITuK2qmQ9zfBInuGEPIxZnDyxBaC5u8G//MdH0dO8M72vKWxt3OPRTp0mAUuzU4yP
      uLTbATlXRoSJwYgtALnxWd7/zlt8cvUWGc/rWaY4d4bvlea4v1nG1rd5+LTFGzNZNFZGhImB
      iPUbVd7ZwcvmWLn5OV/MTPPWhTM9WpTj1FwOmN6bZQ7pOoQQXxfrzvX07ALK+Cxf+BbnTi/E
      WbUQPcXaA+xsbzN/6gwT4xPkspk4qxaip1h7AD9oY0JDaOR+IJEMsQZgbHSMlbtfcW/1YZzV
      CtFXfL8LtPIprcK3OX+uKQe1IjHiOwbQLj/+4Ec0dx8xVlrk7bf/ILaqhehHHpQtUk3uMRCp
      JgEQqSYBEKkmARCpJgEQqSYBEKmWqPuL/VadW7fvYt0hsrZJpRXy5puXceQZSWJAEhUALzvM
      zFSB7XqACXK8Nu1RrjUZH/ZkQIwYiEQFoLG7ye21Lc6dXeLh/Xs8asLS+Xm0VjIgRgxEoq4E
      h36LrZ0yXnaIkaxDw7eM5YflSrAYmEQFoB8JgBgUOQskUk0CIFJNAiBSTQIgUk0CIFJNAiBS
      TQIgUk0CIFJNAiBSLbEBKG9tsvJgg+RfpxbHWTIDYA1rG0/RfoVK0z/q1ogTLLG3VzqeRy7r
      EobSBYjBSWYPoBT5rGaz4jM+0vtZAkIchr27QcMwJKk3hlprqdVq5PP5o26KOGH2AtBoNDAJ
      /tVmay1KqVeaZ4xB6/2d3UHWeZB5h7FO4JX/7kfd9jjW+bL/RsdiPMBBGWNQSvX8hz/p+oX/
      pOsXgK9LRQCE6CexZ4EOolbe4t7qQ6ZmF6k+XUdlx5gtDrOyvsPF109x7YtrnLt8maxzwraM
      xufmja8gm6c4rFl/WuXi+WVuXrvBubcv8+jeLcpNw4UL53H1yeoNtzc3ePjoCfNLZ9hYuc3o
      5ByjXshmzbBQHObO/TUKpTnmp4svLHfCvgGRofwEr82V2N1cR48UMe0ayhuCsAXWkPUyhCex
      41MOZ84u02rU2KrUOT+XZ3WrQc5xCIGFpWUc0yIIj7qhh298cppSIc/W/RuMLl6iUd0mO5LH
      b9YZGsmTdTXNRmPfcicyAJWtRzypWZZPL9JutQmCgGw2B4ByPDKec8QtHBAb8OWNO1y8eIEw
      CKg32+SyWVw3+m++feM6C8sXyXkna+sPsLl+H98bY3F+mlajThCE5Dr/534QsrC4SKVc3rfc
      iQxAaKFZ2WarbpjIWgrT8zx99IAg8Nnc3KTSbLK+tnHUzTx0JghQ2rKy+pClxTm22h5Fr00l
      8NlY20BpxdrqCv4JvLhoUZSfPqLhTZJpPmF2cYmHD+4TtBuUqzVWVtdYOr20bzk5CBapdiJ7
      ACFelgRApJoEQKSaBECkmgRApJoEQKSaBECkmgRApNr/Amwj1WZFVyRaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='polyvsuniemployment' width='192'>
      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
      GcNA8q5mt6oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
