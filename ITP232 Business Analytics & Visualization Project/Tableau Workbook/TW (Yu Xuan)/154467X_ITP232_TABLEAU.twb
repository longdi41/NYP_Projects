<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Select a Year (Uni)' datatype='string' name='[Parameter 10]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2015&quot;' />
        </members>
      </column>
      <column caption='Select a Faculty (Uni)' datatype='string' name='[Parameter 11]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;College of Engineering&quot;' />
          <member value='&quot;College of Humanities, Arts, &amp; Social Sciences&quot;' />
          <member value='&quot;College of Science&quot;' />
          <member value='&quot;Faculty of Arts &amp; Social Sciences&quot;' />
          <member value='&quot;Faculty of Dentistry&quot;' />
          <member value='&quot;Faculty of Engineering&quot;' />
          <member value='&quot;Faculty of Food &amp; Beverages&quot;' />
          <member value='&quot;Faculty of Law&quot;' />
          <member value='&quot;Faculty of Science&quot;' />
          <member value='&quot;LANGUAGES&quot;' />
          <member value='&quot;Nanyang Business School&quot;' />
          <member value='&quot;National Institute of Education (NIE)&quot;' />
          <member value='&quot;NUS Business School&quot;' />
          <member value='&quot;School of Accountancy&quot;' />
          <member value='&quot;School of Business&quot;' />
          <member value='&quot;School of Computing&quot;' />
          <member value='&quot;School of Design &amp; Environment&quot;' />
          <member value='&quot;School of Economics&quot;' />
          <member value='&quot;School of Information Systems&quot;' />
          <member value='&quot;School of Law&quot;' />
          <member value='&quot;School of Social Sciences&quot;' />
          <member value='&quot;Yong Loo Lin School of Medicine&quot;' />
          <member value='&quot;Yong Siew Toh Conservatory of Music&quot;' />
        </members>
      </column>
      <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;2008&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2015&quot;' />
        </members>
      </column>
      <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Adventure&quot;' />
          <member value='&quot;Arts&quot;' />
          <member value='&quot;Built Environment, Engineering &amp; Maritime&quot;' />
          <member value='&quot;Business&quot;' />
          <member value='&quot;Communication&quot;' />
          <member value='&quot;Design&quot;' />
          <member value='&quot;Digital Media &amp; Design&quot;' />
          <member value='&quot;Engineering&quot;' />
          <member value='&quot;Food &amp; Beverages&quot;' />
          <member value='&quot;Humanities&quot;' />
          <member value='&quot;Information Technology&quot;' />
          <member value='&quot;Law&quot;' />
          <member value='&quot;Science&quot;' />
          <member value='&quot;Sciences&quot;' />
          <member value='&quot;Sports&quot;' />
        </members>
      </column>
      <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Institute of Technical Education&quot;' />
          <member value='&quot;Junior Colleges / Centralised Institute&quot;' />
          <member value='&quot;Others&quot;' />
          <member value='&quot;Polytechnics&quot;' />
          <member value='&quot;Primary Schools&quot;' />
          <member value='&quot;Secondary Schools&quot;' />
          <member value='&quot;Universities&quot;' />
        </members>
      </column>
      <column caption='Sort By' datatype='string' name='[Parameter 15]' param-domain-type='list' role='measure' type='nominal' value='&quot;\% Change&quot;'>
        <calculation class='tableau' formula='&quot;% Change&quot;' />
        <members>
          <member value='&quot;Last Year Volume&quot;' />
          <member value='&quot;Prior Year Volume&quot;' />
          <member value='&quot;\% Change&quot;' />
        </members>
      </column>
      <column caption='Select a Uni Course 2015' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;ARTS&quot;' />
          <member value='&quot;BUSINESS&quot;' />
          <member value='&quot;COMPUTING&quot;' />
          <member value='&quot;ENGINEERING&quot;' />
          <member value='&quot;FOOD AND BEVERAGES&quot;' />
          <member value='&quot;LANGUAGES&quot;' />
          <member value='&quot;SCIENCE&quot;' />
        </members>
      </column>
      <column caption='Select a Category Uni 2015' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;ENGINEERING&quot;'>
        <calculation class='tableau' formula='&quot;ENGINEERING&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;ARTS&quot;' />
          <member value='&quot;BUSINESS&quot;' />
          <member value='&quot;COMPUTING&quot;' />
          <member value='&quot;ENGINEERING&quot;' />
          <member value='&quot;FOOD AND BEVERAGES&quot;' />
          <member value='&quot;LANGUAGES&quot;' />
          <member value='&quot;SCIENCE&quot;' />
        </members>
      </column>
      <column caption='Select a Category Uni 2014' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;ARTS&quot;' />
          <member value='&quot;BUSINESS&quot;' />
          <member value='&quot;COMPUTING&quot;' />
          <member value='&quot;ENGINEERING&quot;' />
          <member value='&quot;LANGUAGES&quot;' />
          <member value='&quot;LAW&quot;' />
          <member value='&quot;SCIENCE&quot;' />
        </members>
      </column>
      <column caption='Select a Category Poly 2014' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Applied Sciences&quot;' />
          <member value='&quot;Architecture &amp; Design&quot;' />
          <member value='&quot;Built Environment, Engineering &amp; Maritime&quot;' />
          <member value='&quot;Business Management&quot;' />
          <member value='&quot;Digital Media &amp; Design&quot;' />
          <member value='&quot;Health Sciences&quot;' />
          <member value='&quot;Humanities &amp; Social Sciences&quot;' />
          <member value='&quot;Hybrid Courses&quot;' />
          <member value='&quot;Information &amp; Digital Technologies&quot;' />
          <member value='&quot;Mass Communication&quot;' />
        </members>
      </column>
      <column caption='Select a Course Poly 2015' datatype='string' name='[Parameter 5]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Applied Sciences&quot;' />
          <member value='&quot;Architecture &amp; Design&quot;' />
          <member value='&quot;Built Environment, Engineering &amp; Maritime&quot;' />
          <member value='&quot;Business Management&quot;' />
          <member value='&quot;Digital Media &amp; Design&quot;' />
          <member value='&quot;Health Sciences&quot;' />
          <member value='&quot;Humanities &amp; Social Sciences&quot;' />
          <member value='&quot;Hybrid Courses&quot;' />
          <member value='&quot;Information &amp; Digital Technologies&quot;' />
          <member value='&quot;Mass Communication&quot;' />
        </members>
      </column>
      <column caption='Pick a Course 2014' datatype='string' name='[Parameter 6 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Law&quot;'>
        <calculation class='tableau' formula='&quot;Law&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Accountancy Cum Laude and above&quot;' />
          <member value='&quot;Arts (with Education)&quot;' />
          <member value='&quot;Bachelor if Arts (Architecture)&quot;' />
          <member value='&quot;Bachelor if Science (Pharmacy) (Hons)&quot;' />
          <member value='&quot;Bachelor of Accountancy&quot;' />
          <member value='&quot;Bachelor of Accountancy &amp; Bachelor of Business&quot;' />
          <member value='&quot;Bachelor of Arts (Chinese) (Honours)&quot;' />
          <member value='&quot;Bachelor of Arts (Economics) (Honours)&quot;' />
          <member value='&quot;Bachelor of Arts (Education) / Bachelor of Arts with Diploma in Education&quot;' />
          <member value='&quot;Bachelor of Arts (English) (Honours)&quot;' />
          <member value='&quot;Bachelor of Arts (Honours)&quot;' />
          <member value='&quot;Bachelor of Arts (Psychology) (Honours)&quot;' />
          <member value='&quot;Bachelor of Arts (Sociology) (Honours)&quot;' />
          <member value='&quot;Bachelor of Business Administration (Accountancy)&quot;' />
          <member value='&quot;Bachelor of Business Administration (Accountancy) (Honours)&quot;' />
          <member value='&quot;Bachelor of Business Administration (Honours); Bachelor of Business Management&quot;' />
          <member value='&quot;Bachelor of Business Administration; Bachelor of Business&quot;' />
          <member value='&quot;Bachelor of Communication Studies (Honours)&quot;' />
          <member value='&quot;Bachelor of Computing (Honours)&quot;' />
          <member value='&quot;Bachelor of Dental Surgery&quot;' />
          <member value='&quot;Bachelor of Engineering (Aerospace Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Biomedical Engineering); Bachelor of Engineering (Bioengineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Chemical &amp; Biomolecular Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Chemical Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Civil Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Computer Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Computer Science)&quot;' />
          <member value='&quot;Bachelor of Engineering (Electrical Engineering); Bachelor of Engineering (Electrical &amp; Electronic Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Environmental Engineering)&quot;' />
          <member value='&quot;Bachelor of  Engineering (Industrial and Systems Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Industrial And Systems Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Information Engineering and Media)&quot;' />
          <member value='&quot;Bachelor of Engineering (Materials Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Materials Science &amp; Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Mechanical Engineering)&quot;' />
          <member value='&quot;Bachelor of Fine Arts (Arts, Design &amp; Media)&quot;' />
          <member value='&quot;Bachelor of Medicine and Bachelor of Surgery&quot;' />
          <member value='&quot;Bachelor of Music&quot;' />
          <member value='&quot;Bachelor of Science&quot;' />
          <member value='&quot;Bachelor of Science (Biological Sciences) (Honours)&quot;' />
          <member value='&quot;Bachelor of Science (Chemistry &amp; Biological Chemistry) (Honours)&quot;' />
          <member value='&quot;Bachelor of Science (Education) / Bachelor of Science with Diploma in Education&quot;' />
          <member value='&quot;Bachelor of Science (Honours)&quot;' />
          <member value='&quot;Bachelor of Science (Maritime Studies)&quot;' />
          <member value='&quot;Bachelor of Science (Mathematical Sciences)&quot;' />
          <member value='&quot;Bachelor of Science (Mathematics &amp; Economics)&quot;' />
          <member value='&quot;Bachelor of Science (Nursing)&quot;' />
          <member value='&quot;Bachelor of Science (Physics / Applied Physics)&quot;' />
          <member value='&quot;Bachelor of Science (Project &amp; Facilities Management)&quot;' />
          <member value='&quot;Bachelor of Science (Real Estate)&quot;' />
          <member value='&quot;Bachelor of Social Sciences (Honours); Bachelor of Social Sciences&quot;' />
          <member value='&quot;Bachelor of Sports Science and Management&quot;' />
          <member value='&quot;Biomedical Science (Traditional Chinese Medicine)&quot;' />
          <member value='&quot;Business and Computing&quot;' />
          <member value='&quot;Communication Studies&quot;' />
          <member value='&quot;Culinary Insitute of Amercia Bachelor of Professional Studies in Culinary Arts of Management&quot;' />
          <member value='&quot;DigiPen Bachelor of Arts in Game Design&quot;' />
          <member value='&quot;DigiPen Bachelor of Science in Computer Science &amp; Game Design&quot;' />
          <member value='&quot;DigiPen Bachelor of Science in Computer Science in Real Time Interactive Simulation&quot;' />
          <member value='&quot;Economics of Cum Laude and above&quot;' />
          <member value='&quot;Glassgow School of Art Bachelor of Arts with Honours in Communication Design&quot;' />
          <member value='&quot;Glassgow School of Art Bachelor of Arts with Honours in Interior Design&quot;' />
          <member value='&quot;Information System Management Cum Laude and above&quot;' />
          <member value='&quot;Law&quot;' />
          <member value='&quot;Law Cum Laude and above&quot;' />
          <member value='&quot;Linguisistics and Multilingual Studies&quot;' />
          <member value='&quot;Manchester Bachelor of Science with Honours in Nursing Practise&quot;' />
          <member value='&quot;Nevada Bachelor of Science (Major in Hospitality Management)&quot;' />
          <member value='&quot;Newscastle Bachelor of Engineering with Honours in Chemical Engineering&quot;' />
          <member value='&quot;Newscastle Bachelor of Engineering with Honours in Naval Architecture&quot;' />
          <member value='&quot;Newscastle Bachelor of Engineering with Honours in Offshore Engineering&quot;' />
          <member value='&quot;Newscastle Bachelor of Science with Honours in Food &amp; Human Nutrition&quot;' />
          <member value='&quot;Science (with Education)&quot;' />
          <member value='&quot;Trinity College Dublin Bachelor in Science (Occupational Therapy)&quot;' />
          <member value='&quot;University of Glasgow Bachelor of Engineering with Honours in Aeronautical Design&quot;' />
          <member value='&quot;University of Glasgow Bachelor of Engineering with Honours in Aerospace Systems&quot;' />
          <member value='&quot;University of Glasgow Bachelor of Engineering with Honours in Mechanical Design&quot;' />
          <member value='&quot;University of Glasgow Bachelor of Engineering with Honours in Mechatronics&quot;' />
          <member value='&quot;Wheelock Bachelor of Science in Early Childhood Education&quot;' />
          <member value='&quot;Bachelor of Applied Science (Hons)&quot;' />
          <member value='&quot;Bachelor of Arts&quot;' />
          <member value='&quot;Bachelor of Biomedical Science (Tradtional Chinese Medicine)&quot;' />
          <member value='&quot;Bachelor of Computing (Communications and Media)&quot;' />
          <member value='&quot;Bachelor of Engineering (Chemical)&quot;' />
          <member value='&quot;Bachelor of Engineering (Civil)&quot;' />
          <member value='&quot;Bachelor of Engineering (Computer); Bachelor of Engineering (Computer Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Electrical); Bachelor of Engineering (Electrical &amp; Electronic Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Environmental)&quot;' />
          <member value='&quot;Bachelor of Engineering (Industrial &amp; Systems Engineering)&quot;' />
          <member value='&quot;Bachelor of Engineering (Mechanical)&quot;' />
          <member value='&quot;Bachelor of Linguistics and Multilingual Studies&quot;' />
          <member value='&quot;Bachelor of Physics / Applied Physics&quot;' />
          <member value='&quot;Bachelor of Science (Economics)&quot;' />
          <member value='&quot;Bachelor of Science (Information Systems Management)&quot;' />
          <member value='&quot;Chinese&quot;' />
          <member value='&quot;English&quot;' />
        </members>
      </column>
      <column caption='Free Text Search' datatype='string' name='[Parameter 6]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
        <calculation class='tableau' formula='&quot;Yes&quot;' />
        <members>
          <member value='&quot;Yes&quot;' />
          <member value='&quot;No&quot;' />
        </members>
      </column>
      <column caption='Select a Poly Category' datatype='string' name='[Parameter 8]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;Applied Sciences&quot;' />
          <member value='&quot;Built Environment&quot;' />
          <member value='&quot;Built Environment, Engineering &amp; Maritime&quot;' />
          <member value='&quot;Business, Management, Design &amp; Others&quot;' />
          <member value='&quot;Engineering&quot;' />
          <member value='&quot;Health Sciences&quot;' />
          <member value='&quot;Hybrid Courses&quot;' />
          <member value='&quot;Information &amp; Digital Technologies&quot;' />
          <member value='&quot;Maritime&quot;' />
        </members>
      </column>
      <column caption='Select a Year (Poly)' datatype='string' name='[Parameter 9]' param-domain-type='list' role='measure' type='nominal' value='&quot;2009&quot;'>
        <calculation class='tableau' formula='&quot;2009&quot;' />
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;2008&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2015&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 6 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bachelor of Dental Surgery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newscastle Bachelor of Engineering with Honours in Chemical Engineering&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bachelor if Arts (Architecture)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='localhost' inline='true' name='federated.0wg68ks0l3tf56178a15818qjvzo' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ta1ns41yil7m011sjulg15s0ypc'>
            <connection class='mysql' dbname='yuxuan_database' odbc-native-protocol='yes' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ta1ns41yil7m011sjulg15s0ypc' name='uni_salaries_2015_csv' table='[uni_salaries_2015_csv]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>sNumber of Years</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sNumber of Years]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>sNumber of Years</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Courses</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Courses]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Courses</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Universities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Universities]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Universities</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salaries</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Salaries]</local-name>
            <parent-name>[uni_salaries_2015_csv]</parent-name>
            <remote-alias>Salaries</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Uni Courses' datatype='string' name='[uniCourses]' role='dimension' type='nominal' />
      <column caption='Uni Starting Salaries' datatype='integer' datatype-customized='true' name='[uniStartingSalaries]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Uni Courses'>
          <field>[uniCourses]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.356863' measure-ordering='alphabetic' measure-percentage='0.203922' parameter-percentage='0.439216' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' inline='true' name='federated.1i5nz8t0ykkxjd13yybds0mas423' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0e4zbtv1a0aybw14ryhmn0vdpzib'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0e4zbtv1a0aybw14ryhmn0vdpzib' name='yx_govt_edu_institutions_expenditure' table='[yx_govt_edu_institutions_expenditure]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Educational Institutions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Educational Institutions]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Educational Institutions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expenditure</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Expenditure]</local-name>
            <parent-name>[yx_govt_edu_institutions_expenditure]</parent-name>
            <remote-alias>Expenditure</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Prior Year' datatype='boolean' name='[Calculation_1141381071504027650]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&lt;2' />
      </column>
      <column caption='Last Year Volume' datatype='integer' name='[Calculation_1141381071504158723]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_947726287379984388],[Expenditure],NULL))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Prior Year Volume' datatype='integer' name='[Calculation_1141381071505260549]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_1141381071504027650],[Expenditure],null))),0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Change New' datatype='integer' name='[Calculation_1141381071505543174]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='([Calculation_1141381071504158723]-[Calculation_1141381071505260549])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Change' datatype='real' default-format='p0.0%' name='[Calculation_1141381071512084488]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Calculation_1141381071505543174]/[Calculation_1141381071505260549]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Header' datatype='string' name='[Calculation_1141381071514488842]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Last Year as of: &quot; +str([Calculation_947726287379755010])' />
      </column>
      <column caption='Institutions Filter' datatype='boolean' name='[Calculation_776026551146143744]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 14]=[Educational Institutions] OR [Parameters].[Parameter 14]=&apos;(All)&apos;' />
      </column>
      <column aggregation='Count' caption='Max Year' datatype='datetime' datatype-customized='true' name='[Calculation_947726287379755010]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETIME({MAX([Year])})' />
      </column>
      <column caption='Last Year' datatype='boolean' name='[Calculation_947726287379984388]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year], [Calculation_947726287379755010])&lt;1' />
      </column>
      <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
      <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
      <column-instance column='[Expenditure]' derivation='None' name='[none:Expenditure:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Expenditure)' hidden='true' name='[Action (Expenditure)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Expenditure:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Expenditure1)' hidden='true' name='[Action (Expenditure1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Expenditure:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Educational Institutions:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Primary Schools&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Institute of Technical Education&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Polytechnics&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Universities&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Secondary Schools&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Junior Colleges / Centralised Institute&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' inline='true' name='federated.1apdhlk1d6ie281a9br7h0175d2q' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1pi7cc70jhd94f15019wt18siwlq'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1pi7cc70jhd94f15019wt18siwlq' name='yx_average_monthly_earnings_per_employee_rate_of_change' table='[yx_average_monthly_earnings_per_employee_rate_of_change]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Change (%) Over Corresponding Period of Previous Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Annual Change (%) Over Corresponding Period of Previous Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>Annual Change (%) Over Corresponding Period of Previous Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[1st Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>1st Quarter Change (%)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2nd Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>2nd Quarter Change (%)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[3rd Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>3rd Quarter Change (%)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th Quarter Change (%)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[4th Quarter Change (%)]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee_rate_of_change]</parent-name>
            <remote-alias>4th Quarter Change (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[1st Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[2nd Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[3rd Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[4th Quarter Change (%)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[Annual Change (%) Over Corresponding Period of Previous Year]' role='measure' type='quantitative' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737257639945]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Annual Change (%) Over Corresponding Period of Previous Year]' derivation='None' name='[none:Annual Change (%) Over Corresponding Period of Previous Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Annual Change (%) Over Corresponding Period of Previous Year)' hidden='true' name='[Action (Annual Change (%) Over Corresponding Period of Previous Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Annual Change (%) Over Corresponding Period of Previous Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.208' measure-ordering='alphabetic' measure-percentage='0.364' parameter-percentage='0.428' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' inline='true' name='federated.0rru1jo1cr3lie16hemn61sks6od' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.14ctt0l1q7qvpy18p1cc01ci3gui'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.14ctt0l1q7qvpy18p1cc01ci3gui' name='yx_overall_poly_graduates' table='[yx_overall_poly_graduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NYP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NYP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>NYP</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>SP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>RP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>NP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TP]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>TP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Monthly Gross Starting Salary ($)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Median Monthly Gross Starting Salary ($)]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Median Monthly Gross Starting Salary ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Survey</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year of Survey]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Year of Survey</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course Category]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Course Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fresh Graduate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Fresh Graduate]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>Fresh Graduate</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>After National Service</remote-name>
            <remote-type>130</remote-type>
            <local-name>[After National Service]</local-name>
            <parent-name>[yx_overall_poly_graduates]</parent-name>
            <remote-alias>After National Service</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Avg Salary per Course' datatype='real' name='[Calculation_741686603187695620]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({INCLUDE [Course] : sum([Median Monthly Gross Starting Salary ($)])})' />
      </column>
      <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
      <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='None' name='[none:Median Monthly Gross Starting Salary ($):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_741686603187695620]' derivation='User' name='[usr:Calculation_741686603187695620:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category (Poly))' hidden='true' name='[Action (Category (Poly))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category (Poly)]' />
        </groupfilter>
      </group>
      <group caption='Action (Course Category)' hidden='true' name='[Action (Course Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Course Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Course)' hidden='true' name='[Action (Course)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Course]' />
        </groupfilter>
      </group>
      <group caption='Action (Median Monthly Gross Starting Salary ($))' hidden='true' name='[Action (Median Monthly Gross Starting Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Median Monthly Gross Starting Salary ($):ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Course'>
          <field>[Course Category]</field>
          <field>[Course]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.366667' measure-ordering='alphabetic' measure-percentage='0.219608' parameter-percentage='0.413725' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603184336899:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Course Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Food &amp; Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Communication&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Humanities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Digital Media &amp; Design&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Built Environment, Engineering &amp; Maritime&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' inline='true' name='federated.1a2otfp1j4hke7112gdjq18gfoas' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1p3a34w005cuic1gjrw8u0a5kwyc'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1p3a34w005cuic1gjrw8u0a5kwyc' name='yx_no_of_graduates_from_courses' table='[yx_no_of_graduates_from_courses]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Course</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Course]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>Course</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No. of Graduates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[No. of Graduates]</local-name>
            <parent-name>[yx_no_of_graduates_from_courses]</parent-name>
            <remote-alias>No. of Graduates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737254830086]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Course]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.254902' measure-ordering='alphabetic' measure-percentage='0.152941' parameter-percentage='0.592157' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Course:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Services&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Business &amp; Administration&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Natural, Physical &amp; Mathematical Sciences&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Humanities &amp; Social Sciences&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Engineering Sciences&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Architecture &amp; Building&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Applied Arts&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Mass Communication&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' inline='true' name='federated.04gzwsu0pff89w1bv9tri1sd8904' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ylf5i000tnxg813nz1gj0298kpz'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ylf5i000tnxg813nz1gj0298kpz' name='yx_overall_uni_graduates' table='[yx_overall_uni_graduates]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Qualification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Qualification]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Qualification</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Faculty</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Faculty]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Faculty</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Salary ($)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Average Salary ($)]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Average Salary ($)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Institution</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Institution]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Institution</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Survey</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year of Survey]</local-name>
            <parent-name>[yx_overall_uni_graduates]</parent-name>
            <remote-alias>Year of Survey</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
      <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Faculty (Uni) Filter' datatype='boolean' name='[Calculation_741686603182530562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Faculty] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Avg Salary per Faculty (Uni)' datatype='real' name='[Calculation_741686603192209415]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG({ INCLUDE [Qualification] : SUM([Average Salary ($)]) })' />
      </column>
      <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
      <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Average Salary ($)]' derivation='None' name='[none:Average Salary ($):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
      <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_741686603192209415]' derivation='User' name='[usr:Calculation_741686603192209415:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Average Salary ($))' hidden='true' name='[Action (Average Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Salary ($):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty (Uni))' hidden='true' name='[Action (Faculty (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty (Uni)]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty (Uni),Year (Uni))' hidden='true' name='[Action (Faculty (Uni),Year (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty]' />
          <groupfilter function='level-members' level='[Year of Survey]' />
        </groupfilter>
      </group>
      <group caption='Action (Faculty)' hidden='true' name='[Action (Faculty)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Faculty]' />
        </groupfilter>
      </group>
      <group caption='Action (Uni Average Salary ($))' hidden='true' name='[Action (Uni Average Salary ($))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Average Salary ($):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year (Uni))' hidden='true' name='[Action (Year (Uni))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year of Survey]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Faculty,Qualification)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Faculty:nk]' />
          <groupfilter function='level-members' level='[none:Qualification:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Course'>
          <field>[Faculty]</field>
          <field>[Qualification]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Faculty:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Social Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Computing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Languages&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food &amp; Beverages&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Social Sciences&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accountancy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;National Institute of Education (NIE)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Humanities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_poly_enrolment (itp232_teamevians)' inline='true' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1ti1oxd0lasw3w15g5w9912wjclv'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1ti1oxd0lasw3w15g5w9912wjclv' name='yx_poly_enrolment' table='[yx_poly_enrolment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Polytechnic</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Polytechnic]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Polytechnic</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poly Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Poly Enrolment]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Poly Enrolment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_poly_enrolment]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253560322]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Poly Enrolment]' role='measure' type='quantitative' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Poly Enrolment]' derivation='None' name='[none:Poly Enrolment:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Poly Enrolment)' hidden='true' name='[Action (Poly Enrolment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Poly Enrolment:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_uni_enrolment (itp232_teamevians)' inline='true' name='federated.117ra73191xfaa12tkrf108iwowf' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.100l69b1u6bj9d15i924w1vq84ql'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.100l69b1u6bj9d15i924w1vq84ql' name='yx_uni_enrolment' table='[yx_uni_enrolment]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Universities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Universities]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Universities</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Enrolment</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Enrolment]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Enrolment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_uni_enrolment]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253777412]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.333333' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.333333' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' inline='true' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0q80kms1j7ykt91ekrf2219449we'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0q80kms1j7ykt91ekrf2219449we' name='yx_average_monthly_earnings_per_employee' table='[yx_average_monthly_earnings_per_employee]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Annual]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>Annual</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[1st Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>1st Quarter</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[2nd Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>2nd Quarter</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[3rd Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>3rd Quarter</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th Quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[4th Quarter]</local-name>
            <parent-name>[yx_average_monthly_earnings_per_employee]</parent-name>
            <remote-alias>4th Quarter</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[1st Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[2nd Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[3rd Quarter]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[4th Quarter]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoomed in Value' datatype='integer' name='[Calculation_992199331712028673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[1st Quarter]' derivation='Avg' name='[avg:1st Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2nd Quarter]' derivation='Avg' name='[avg:2nd Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3rd Quarter]' derivation='Avg' name='[avg:3rd Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[4th Quarter]' derivation='Avg' name='[avg:4th Quarter:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual]' derivation='Avg' name='[avg:Annual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Annual]' derivation='None' name='[none:Annual:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
      <column-instance column='[Annual]' derivation='Sum' name='[sum:Annual:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Annual)' hidden='true' name='[Action (Annual)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Annual:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender,Year)' hidden='true' name='[Action (Gender,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
          <groupfilter function='level-members' level='[none:Year:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.456026' measure-ordering='alphabetic' measure-percentage='0.252443' parameter-percentage='0.291531' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:1st Quarter:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Annual:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:1st Quarter:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:4th Quarter:qk]&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:4th Quarter:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:3rd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:3rd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:2nd Quarter:qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:2nd Quarter:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_total_expenditure_on_edu (itp232_teamevians)' inline='true' name='federated.1msqecj11mxdsj1g3d5li1ylyeuf' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.08jcqye1lgqa1u19r4tld1fmp4zf'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.08jcqye1lgqa1u19r4tld1fmp4zf' name='yx_total_expenditure_on_edu' table='[yx_total_expenditure_on_edu]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_total_expenditure_on_edu]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenditure on Education</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Expenditure on Education]</local-name>
            <parent-name>[yx_total_expenditure_on_edu]</parent-name>
            <remote-alias>Total Expenditure on Education</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.22807' measure-ordering='alphabetic' measure-percentage='0.342105' parameter-percentage='0.429825' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' inline='true' name='federated.0dapth9192cwx41e23ppn1meqf8l' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0ar3e5v0vyjpkd11fitz51tvwn87'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0ar3e5v0vyjpkd11fitz51tvwn87' name='yx_basic_wage_change_by_industry' table='[yx_basic_wage_change_by_industry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic wage change by industry (cents)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Basic wage change by industry (cents)]</local-name>
            <parent-name>[yx_basic_wage_change_by_industry]</parent-name>
            <remote-alias>Basic wage change by industry (cents)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161739481090]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <group caption='Action (Occupations)' hidden='true' name='[Action (Occupations)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupations]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.233446' measure-ordering='alphabetic' measure-percentage='0.176207' parameter-percentage='0.590348' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' inline='true' name='federated.05yhkm914172bb12yhoqp014nyph' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1bxtyg512n7o1812z4mtd0rl9sw2'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1bxtyg512n7o1812z4mtd0rl9sw2' name='yx_total_wage_change_by_industry' table='[yx_total_wage_change_by_industry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Wage Change by Industry (per Cent)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Wage Change by Industry (per Cent)]</local-name>
            <parent-name>[yx_total_wage_change_by_industry]</parent-name>
            <remote-alias>Total Wage Change by Industry (per Cent)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161744916484]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <group caption='Action (Occupations)' hidden='true' name='[Action (Occupations)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occupations]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.203922' measure-ordering='alphabetic' measure-percentage='0.152941' parameter-percentage='0.643137' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' inline='true' name='federated.0q93mpa1twersg183rr751s9dy7h' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.18pcvms0a69xoa0zsvfbf0t6ydj0'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.18pcvms0a69xoa0zsvfbf0t6ydj0' name='yx_median_gross_salary_with_cpf' table='[yx_median_gross_salary_with_cpf]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Occupations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Occupations]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Occupations</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Salary]</local-name>
            <parent-name>[yx_median_gross_salary_with_cpf]</parent-name>
            <remote-alias>Salary</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
      </column>
      <column caption='Zoom in Value' datatype='integer' name='[Calculation_922956489143459842]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
      </column>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
      <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Salary]' derivation='None' name='[none:Salary:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Salary)' hidden='true' name='[Action (Salary)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Salary:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.254902' measure-ordering='alphabetic' measure-percentage='0.203922' parameter-percentage='0.541176' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gender:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Females&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Males&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
        </column>
        <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
          <calculation class='tableau' formula='&quot;Yes&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='yx_industry_with_best_wage_increase (itp232_teamevians)' inline='true' name='federated.05b65bu1f20hlw15pm1np0bjehoj' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.00d249z1vxyk1a176ar9q1ll3xjc'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.00d249z1vxyk1a176ar9q1ll3xjc' name='yx_industry_with_best_wage_increase' table='[yx_industry_with_best_wage_increase]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_with_best_wage_increase]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Possible Wage Increase</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Possible Wage Increase]</local-name>
            <parent-name>[yx_industry_with_best_wage_increase]</parent-name>
            <remote-alias>Possible Wage Increase</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.101961' measure-ordering='alphabetic' measure-percentage='0.152941' parameter-percentage='0.745098' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Industry:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Wholesale &amp; Retail Trade&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Accomodation&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Real Estate Services&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Community, Social &amp; Personal Services&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Transport &amp; Storage&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Information &amp; Communications&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Financial &amp; Insurance Services&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;F&amp;B Services&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Wholesale Trade&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Adminstrative &amp; Support Services&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Service&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Accomodation &amp; Food Services&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Retail Trade&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_industry_salaries (itp232_teamevians)' inline='true' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0z2wxt50u0nxmx172s2qo062rsb3'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0z2wxt50u0nxmx172s2qo062rsb3' name='yx_industry_salaries' table='[yx_industry_salaries]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Qualification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Qualification]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Qualification</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience (Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience (Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Experience (Years)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min. Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Min. Salary]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Min. Salary</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max. Salary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Max. Salary]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Max. Salary</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Experience (&gt; 5 Years)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Min. Salary (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Min. Salary (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Min. Salary (&gt; 5 Years)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Max. Salary (&gt; 5 Years)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Max. Salary (&gt; 5 Years)]</local-name>
            <parent-name>[yx_industry_salaries]</parent-name>
            <remote-alias>Max. Salary (&gt; 5 Years)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Max. Salary]' derivation='Attribute' name='[attr:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary]' derivation='Avg' name='[avg:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Min. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Min. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Min. Salary]' derivation='Avg' name='[avg:Min. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='CountD' name='[ctd:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Max. Salary]' derivation='CountD' name='[ctd:Max. Salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
      <group caption='Action (Industry)' hidden='true' name='[Action (Industry)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Industry]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.305882' measure-ordering='alphabetic' measure-percentage='0.305882' parameter-percentage='0.388235' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[attr:Max. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Industry:nk]&#10;[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#55ad89'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#6388b4'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#767676'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#767676'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cc2ca'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a9b5ae'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#baa094'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bb7693'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bb7693'>
              <multibucket>
                <bucket>&quot;Marketing &amp; Communications&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c3bc3f'>
              <multibucket>
                <bucket>&quot;Information Technology&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ef6f6a'>
              <multibucket>
                <bucket>&quot;Engineering &amp; Technical&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Adminstration &amp; Office Support&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[ctd:Max. Salary (&gt; 5 Years):qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffae34'>
              <multibucket>
                <bucket>&quot;Sales &amp; Customer Service&quot;</bucket>
                <bucket>&quot;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_govt_expenditure (itp232_teamevians)' inline='true' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0ccj4e30utkv2j1gfjwjh1gtff6p'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0ccj4e30utkv2j1gfjwjh1gtff6p' name='yx_govt_expenditure' table='[yx_govt_expenditure]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sector Group]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Sector Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating Expenditure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Operating Expenditure]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Operating Expenditure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[yx_govt_expenditure]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <group caption='Action (Sector)' hidden='true' name='[Action (Sector)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sector]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.135294' measure-ordering='alphabetic' measure-percentage='0.0882353' parameter-percentage='0.776471' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Trade and Industry&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Communications and Information&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;National Development&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Manpower (excl. Financial Security)&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Environment and Water Resources&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Social and Family Development&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Manpower (Financial Security)&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Home Affairs&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Foreign Affairs&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Info-Communications and Media Development&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Prime Minister&apos;s Office&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Culture, Community and Youth&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Defence&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Organs of State&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_industry_labour_cost (itp232_teamevians)' inline='true' name='federated.0liuevi0x7uiju1dhtsjw0uv1b96' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.15ja3u41r32vmn1eiaytx1x4fom5'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.15ja3u41r32vmn1eiaytx1x4fom5' name='yx_industry_labour_cost' table='[yx_industry_labour_cost]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Labour Cost</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total Labour Cost]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Total Labour Cost</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic Wage Overtime &amp; Other Regular Payments</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Basic Wage Overtime &amp; Other Regular Payments]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Basic Wage Overtime &amp; Other Regular Payments</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Variable Component (Annual Wage Supplements)</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Annual Variable Component (Annual Wage Supplements)]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Annual Variable Component (Annual Wage Supplements)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer CPF Contributons</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Employer CPF Contributons]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Employer CPF Contributons</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Levy</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Levy]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Levy</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medical Cost &amp; Other Insurance</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Medical Cost &amp; Other Insurance]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Medical Cost &amp; Other Insurance</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Training Cost</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Net Training Cost]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Net Training Cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Labour Costs</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Other Labour Costs]</local-name>
            <parent-name>[yx_industry_labour_cost]</parent-name>
            <remote-alias>Other Labour Costs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Annual Variable Component (Annual Wage Supplements)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Basic Wage Overtime &amp; Other Regular Payments]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Employer CPF Contributons]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Levy]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Medical Cost &amp; Other Insurance]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Net Training Cost]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Other Labour Costs]' role='measure' type='quantitative' />
      <column-instance column='[Annual Variable Component (Annual Wage Supplements)]' derivation='Sum' name='[sum:Annual Variable Component (Annual Wage Supplements):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Basic Wage Overtime &amp; Other Regular Payments]' derivation='Sum' name='[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Employer CPF Contributons]' derivation='Sum' name='[sum:Employer CPF Contributons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Levy]' derivation='Sum' name='[sum:Levy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Medical Cost &amp; Other Insurance]' derivation='Sum' name='[sum:Medical Cost &amp; Other Insurance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Training Cost]' derivation='Sum' name='[sum:Net Training Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other Labour Costs]' derivation='Sum' name='[sum:Other Labour Costs:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Basic Wage Overtime &amp; Other Regular Payments)' hidden='true' name='[Action (Basic Wage Overtime &amp; Other Regular Payments)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Basic Wage Overtime &amp; Other Regular Payments:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.101961' measure-ordering='alphabetic' measure-percentage='0.509804' parameter-percentage='0.388235' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Medical Cost &amp; Other Insurance:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Annual Variable Component (Annual Wage Supplements):qk]&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Levy:qk]&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Other Labour Costs:qk]&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Net Training Cost:qk]&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Employer CPF Contributons:qk]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_graduates_prefer_part_time (itp232_teamevians)' inline='true' name='federated.1il27gc0jhlnda1fgoyg40ewddvb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.01t04oy1r3008f177wd7v1ct0fie'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.01t04oy1r3008f177wd7v1ct0fie' name='yx_graduates_prefer_part_time' table='[yx_graduates_prefer_part_time]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Age Range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Range]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Age Range</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Male]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Male</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Female]</local-name>
            <parent-name>[yx_graduates_prefer_part_time]</parent-name>
            <remote-alias>Female</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>21845</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Female]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Male]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Female]' derivation='CountD' name='[ctd:Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male]' derivation='CountD' name='[ctd:Male:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Female]' derivation='Sum' name='[sum:Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Male]' derivation='Sum' name='[sum:Male:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.116723' measure-ordering='alphabetic' measure-percentage='0.234568' parameter-percentage='0.648709' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[ctd:Male:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[ctd:Female:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='yx_median_gross_monthly_income_ft_pt (itp232_teamevians)' inline='true' name='federated.1u0wll11udgl4l1f8jc0010w1a4z' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0avmt5e0xsbym71g0pops08wx6sw'>
            <connection class='mysql' dbname='itp232_teamevians' odbc-native-protocol='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.0avmt5e0xsbym71g0pops08wx6sw' name='yx_median_gross_monthly_income_ft_pt' table='[yx_median_gross_monthly_income_ft_pt]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Full Time</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Full Time]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Full Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Part Time</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Part Time]</local-name>
            <parent-name>[yx_median_gross_monthly_income_ft_pt]</parent-name>
            <remote-alias>Part Time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Full Time]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Part Time]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Full Time]' derivation='Avg' name='[avg:Full Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Part Time]' derivation='Avg' name='[avg:Part Time:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.116723' measure-ordering='alphabetic' measure-percentage='0.234568' parameter-percentage='0.648709' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[sum:Full Time:qk]&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[sum:Part Time:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z]&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Linking Industry Salaries more than 5 years to less than 5 years' name='[Action10]'>
      <activation type='on-hover' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &gt; 5)' />
      <link caption='Linking Industry Salaries more than 5 years to less than 5 years' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &gt; 5),Industry with Wage Increase' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <action caption='Filter2' name='[Action11]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of University Graduates' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Faculty]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of University Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Filter4' name='[Action12]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Filter4' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BMedian%20Monthly%20Gross%20Starting%20Salary%20%28%24%29%5D~s0=&lt;[Median Monthly Gross Starting Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Uni Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking Poly Salary to Monthly Salary' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Poly Salary' />
      <link caption='Linking Poly Salary to Monthly Salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BAnnual%5D~s0=&lt;[Median Monthly Gross Starting Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking Uni to Monthly Salary' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Uni Salary' />
      <link caption='Linking Uni to Monthly Salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BAnnual%5D~s0=&lt;[Average Salary ($)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking avg monthly salary per Employee vs Employee (%)' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg monthly salary per Employee vs Employee (%)' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0dapth9192cwx41e23ppn1meqf8l%5D.%5BBasic%20wage%20change%20by%20industry%20%28cents%29%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking avg month annual to %' name='[Action18]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg month annual to %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking employee rate of change to %' name='[Action19]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking employee rate of change to %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking avg' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Linking avg' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Course Category]~na&gt;&amp;%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of Polytechnic Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking median to industry salaries' name='[Action20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
      <link caption='Linking median to industry salaries' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BMax.%20Salary%5D~s0=&lt;[Salary]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &lt; 5),Industry Salaries (Year &gt; 5)' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <action caption='Linking with wage to govt expenditure' name='[Action21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &lt; 5)' />
      <link caption='Linking with wage to govt expenditure' delimiter=',' escape='\' expression='tsl:Govt.%20Expenditure1?%5Bfederated.0oo26sn1vrd6z11b5izd71pxt88j%5D.%5BSector%5D~s0=&lt;[Industry]~na&gt;&amp;%5Bfederated.0oo26sn1vrd6z11b5izd71pxt88j%5D.%5BOperating%20Expenditure%5D~s0=&lt;[Max. Salary]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Govt. Expenditure,Govt. Expenditure by Institutions' />
        <param name='target' value='Govt. Expenditure1' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to comparing govt expenditure' name='[Action22]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Govt. Expenditure1' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to comparing govt expenditure' delimiter=',' escape='\' expression='tsl:Comparing%20Govt.%20Expenditure%20vs%20Poly%2FUni%20Salary?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BEducational%20Institutions%5D~s0=&lt;[Educational Institutions]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Poly Salary (Line),Uni Salary (Line)' />
        <param name='single-select' value='' />
        <param name='target' value='Comparing Govt. Expenditure vs Poly/Uni Salary' />
      </command>
    </action>
    <action caption='Linking Poly Enrolment gender to uni enrolment' name='[Action23]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Poly Enrolment' />
      <link caption='Linking Poly Enrolment gender to uni enrolment' delimiter=',' escape='\' expression='tsl:Uni%20Enrolment?%5Bfederated.117ra73191xfaa12tkrf108iwowf%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;&amp;%5Bfederated.117ra73191xfaa12tkrf108iwowf%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Uni Enrolment' />
      </command>
    </action>
    <action caption='Linking monthly salary per employee to avg salary anually' name='[Action24]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking monthly salary per employee to avg salary anually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking salary per quarter and employee rate' name='[Action25]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking salary per quarter and employee rate' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee (per Quarter)' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking salary per rate to anually' name='[Action26]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking salary per rate to anually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking basic to total wage' name='[Action27]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Basic Wage Change by Industry' />
      <link caption='Linking basic to total wage' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.05yhkm914172bb12yhoqp014nyph%5D.%5BOccupations%5D~s0=&lt;[Occupations]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking total to basic wage' name='[Action28]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee (Rate of Change in %)' type='sheet' worksheet='Total Wage Change by Industry(%)' />
      <link caption='Linking total to basic wage' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0dapth9192cwx41e23ppn1meqf8l%5D.%5BOccupations%5D~s0=&lt;[Occupations]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' type='sheet' worksheet='Average salary of Polytechnic Graduates' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.04gzwsu0pff89w1bv9tri1sd8904%5D.%5BFaculty%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of Polytechnic Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to Govt Expenditure (expand)' name='[Action30]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparing Govt. Expenditure vs Poly/Uni Salary' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to Govt Expenditure (expand)' delimiter=',' escape='\' expression='tsl:Govt.%20Expenditure%20%28Expand%29?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BExpenditure%5D~s0=&lt;[Expenditure]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Govt. Expenditure (Expand)' />
      </command>
    </action>
    <action caption='Linking Avg Salary per Quarter Gender' name='[Action32]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking Avg Salary per Quarter Gender' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee (per Quarter)' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking Avg rate of change to median salary' name='[Action33]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking Avg rate of change to median salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking avg salary to rate of change' name='[Action34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking avg salary to rate of change' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Monthly Salary Employee to &amp;' name='[Action35]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking Monthly Salary Employee to &amp;' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual Change (%) Over Corresponding Period of Previous Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking Govt Expenditure to details' name='[Action36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Govt. Expenditure1' type='sheet' worksheet='Govt. Expenditure by Institutions' />
      <link caption='Linking Govt Expenditure to details' delimiter=',' escape='\' expression='tsl:Comparing%20Govt.%20Expenditure%20vs%20Poly%2FUni%20Salary?%5Bfederated.1i5nz8t0ykkxjd13yybds0mas423%5D.%5BExpenditure%5D~s0=&lt;[Expenditure]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Poly Salary (Line),Uni Salary (Line)' />
        <param name='target' value='Comparing Govt. Expenditure vs Poly/Uni Salary' />
      </command>
    </action>
    <action caption='Linking Poly &amp; Uni Salary' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Poly Salary' />
      <link caption='Linking Poly &amp; Uni Salary' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.04gzwsu0pff89w1bv9tri1sd8904%5D.%5BFaculty%5D~s0=&lt;[Course Category]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Poly Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Linking Uni &amp; Poly Salary' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Comparison between Poly &amp; Uni Salary' type='sheet' worksheet='Overall Uni Salary' />
      <link caption='Linking Uni &amp; Poly Salary' delimiter=',' escape='\' expression='tsl:Comparison%20between%20Poly%20%26%20Uni%20Salary?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BCourse%20Category%5D~s0=&lt;[Faculty]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Overall Uni Salary' />
        <param name='target' value='Comparison between Poly &amp; Uni Salary' />
      </command>
    </action>
    <action caption='Filter3' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Comparing Poly &amp; Uni Courses' type='sheet' worksheet='No. of Graduates from Courses' />
      <link caption='Filter3' delimiter=',' escape='\' expression='tsl:Comparison%20between%20the%20average%20of%20Universities%20and%20Polytechnics%27%20Salaries%20%20%28by%20Courses%29?%5Bfederated.0rru1jo1cr3lie16hemn61sks6od%5D.%5BMedian%20Monthly%20Gross%20Starting%20Salary%20%28%24%29%5D~s0=&lt;[No. of Graduates]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average salary of University Graduates' />
        <param name='target' value='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' />
      </command>
    </action>
    <action caption='Linking avg month per employee gender to annually' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (per Quarter)' />
      <link caption='Linking avg month per employee gender to annually' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (per Quarter),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking month salary anually &amp; %' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee (Anually)' />
      <link caption='Linking month salary anually &amp; %' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee%20%28Rate%20of%20Change%20in%20%25%29?%5Bfederated.0q93mpa1twersg183rr751s9dy7h%5D.%5BSalary%5D~s0=&lt;[Annual]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Basic Wage Change by Industry,Total Wage Change by Industry(%)' />
        <param name='target' value='Average Monthly Salary per Employee (Rate of Change in %)' />
      </command>
    </action>
    <action caption='Linking monthly salary per employee rate &amp; avg monthly salary' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average Monthly Salary per Employee' type='sheet' worksheet='Average Monthly Salary per Employee Rate of Change in %' />
      <link caption='Linking monthly salary per employee rate &amp; avg monthly salary' delimiter=',' escape='\' expression='tsl:Average%20Monthly%20Salary%20per%20Employee?%5Bfederated.0stkm4k1vzirgu1055d4a1vi9yfo%5D.%5BGender%5D~s0=&lt;[Gender]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Average Monthly Salary per Employee (Anually),Average Monthly Salary per Employee Rate of Change in %' />
        <param name='target' value='Average Monthly Salary per Employee' />
      </command>
    </action>
    <action caption='Linking Industry Salary year less 5 to more than 5' name='[Action9]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Industry Salary' type='sheet' worksheet='Industry Salaries (Year &lt; 5)' />
      <link caption='Linking Industry Salary year less 5 to more than 5' delimiter=',' escape='\' expression='tsl:Industry%20Salary?%5Bfederated.1lprrlx0yxvyt81etz7v90x7g7q9%5D.%5BIndustry%5D~s0=&lt;[Industry]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Industry Salaries (Year &lt; 5),Industry with Wage Increase' />
        <param name='target' value='Industry Salary' />
      </command>
    </action>
    <datasources>
      <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
      <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' name='federated.05yhkm914172bb12yhoqp014nyph' />
      <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' name='federated.0dapth9192cwx41e23ppn1meqf8l' />
      <datasource caption='yx_poly_enrolment (itp232_teamevians)' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' />
      <datasource caption='yx_govt_expenditure (itp232_teamevians)' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' />
      <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' name='federated.0q93mpa1twersg183rr751s9dy7h' />
      <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
      <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
      <datasource caption='yx_uni_enrolment (itp232_teamevians)' name='federated.117ra73191xfaa12tkrf108iwowf' />
      <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' name='federated.1a2otfp1j4hke7112gdjq18gfoas' />
      <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' name='federated.1apdhlk1d6ie281a9br7h0175d2q' />
      <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
      <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
    </datasources>
    <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
      <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.05yhkm914172bb12yhoqp014nyph'>
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0dapth9192cwx41e23ppn1meqf8l'>
      <column datatype='real' name='[Basic wage change by industry (cents)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0g2iv9z130aagi18y0udj1x2q6yk'>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0oo26sn1vrd6z11b5izd71pxt88j'>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0q93mpa1twersg183rr751s9dy7h'>
      <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
      <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
      <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.117ra73191xfaa12tkrf108iwowf'>
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1a2otfp1j4hke7112gdjq18gfoas'>
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1apdhlk1d6ie281a9br7h0175d2q'>
      <column aggregation='CountD' datatype='real' datatype-customized='true' name='[Annual Change (%) Over Corresponding Period of Previous Year]' role='measure' type='quantitative' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
      <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
      <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_median_gross_monthly_income_ft_pt (itp232_teamevians)' name='federated.1u0wll11udgl4l1f8jc0010w1a4z' />
          </datasources>
          <datasource-dependencies datasource='federated.1u0wll11udgl4l1f8jc0010w1a4z'>
            <column datatype='integer' name='[Full Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Part Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Full Time]' derivation='Avg' name='[avg:Full Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Part Time]' derivation='Avg' name='[avg:Part Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]' field-type='quantitative' max='5000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]' field-type='quantitative' fold='true' max='5000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk] + [federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk])</rows>
        <cols>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2449.0</value>
                <value>2006</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3949.0</value>
                <value>2015</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Full Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>565.0</value>
                <value>2006</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[none:Year:qk]</field>
                  <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>943.0</value>
                <value>2015</value>
                <value>&quot;[federated.1u0wll11udgl4l1f8jc0010w1a4z].[avg:Part Time:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee (Anually)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
            <column datatype='integer' name='[Annual]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_992199331712028673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Annual]' derivation='Avg' name='[avg:Annual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737256247304]' derivation='None' name='[none:Calculation_942659737256247304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_992199331712028673]' derivation='Sum' name='[sum:Calculation_992199331712028673:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737256247304:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' field-type='quantitative' max='7000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' value='80' />
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' />
              <lod column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='false' enabled='true' exclude-color='true' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='1' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='2' />
            <reference-line axis-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[sum:Calculation_992199331712028673:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:Annual:qk]</rows>
        <cols>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee (per Quarter)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee (itp232_teamevians)' name='federated.0stkm4k1vzirgu1055d4a1vi9yfo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0stkm4k1vzirgu1055d4a1vi9yfo'>
            <column aggregation='Sum' datatype='integer' name='[1st Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[2nd Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[3rd Quarter]' role='dimension' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[4th Quarter]' role='dimension' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737256247304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[1st Quarter]' derivation='Avg' name='[avg:1st Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd Quarter]' derivation='Avg' name='[avg:2nd Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd Quarter]' derivation='Avg' name='[avg:3rd Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th Quarter]' derivation='Avg' name='[avg:4th Quarter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737256247304]' derivation='None' name='[none:Calculation_942659737256247304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:1st Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:2nd Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:3rd Quarter:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[avg:4th Quarter:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737256247304:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Calculation_942659737256247304:nk]</column>
            <column>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' field-type='quantitative' max='7000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[Multiple Values]</rows>
        <cols>([federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk] / [federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Average Monthly Salary per Employee Rate of Change in %'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_average_monthly_earnings_per_employee_rate_of_change (itp232_teamevians)' name='federated.1apdhlk1d6ie281a9br7h0175d2q' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1apdhlk1d6ie281a9br7h0175d2q'>
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[1st Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[2nd Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[3rd Quarter Change (%)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='real' datatype-customized='true' name='[4th Quarter Change (%)]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737257639945]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[1st Quarter Change (%)]' derivation='Avg' name='[avg:1st Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[2nd Quarter Change (%)]' derivation='Avg' name='[avg:2nd Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[3rd Quarter Change (%)]' derivation='Avg' name='[avg:3rd Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[4th Quarter Change (%)]' derivation='Avg' name='[avg:4th Quarter Change (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_942659737257639945]' derivation='None' name='[none:Calculation_942659737257639945:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737257639945:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk]' value='127' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk]' value='88' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' num-steps='2' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk] + ([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk] + ([federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk] + [federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk])))</rows>
        <cols>([federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Gender:nk] / [federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Average salary of Polytechnic Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489140781056]' derivation='Sum' name='[sum:Calculation_922956489140781056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]'>
            <groupfilter function='level-members' level='[Course Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' value='136' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='68' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average salary of University Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489142702081]' derivation='Sum' name='[sum:Calculation_922956489142702081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]'>
            <groupfilter function='level-members' level='[Faculty]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='line-pattern' id='refline3' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-pane' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='2' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='3' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline3' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='4' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.75762432813644409' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Basic Wage Change by Industry'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_basic_wage_change_by_industry (itp232_teamevians)' name='federated.0dapth9192cwx41e23ppn1meqf8l' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0dapth9192cwx41e23ppn1meqf8l'>
            <column datatype='real' name='[Basic wage change by industry (cents)]' role='measure' type='quantitative' />
            <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161739481090]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Basic wage change by industry (cents)]' derivation='Avg' name='[avg:Basic wage change by industry (cents):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_645422161739481090]' derivation='None' name='[none:Calculation_645422161739481090:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dapth9192cwx41e23ppn1meqf8l].[Action (Occupations)]'>
            <groupfilter function='level-members' level='[Occupations]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]'>
            <groupfilter function='member' level='[none:Calculation_645422161739481090:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]</column>
            <column>[federated.0dapth9192cwx41e23ppn1meqf8l].[Action (Occupations)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' field-type='quantitative' max='10.0' min='-6.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]' value='55' />
            <format attr='width' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]' value='123' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' max='7.0' min='-5.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' />
              <size column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]</rows>
        <cols>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_expenditure (itp232_teamevians)' name='federated.0oo26sn1vrd6z11b5izd71pxt88j' />
          </datasources>
          <datasource-dependencies datasource='federated.0oo26sn1vrd6z11b5izd71pxt88j'>
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Operating Expenditure]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operating Expenditure]' derivation='Sum' name='[sum:Operating Expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sector:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Culture, Community and Youth&quot;' />
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Info-Communications and Media Development&quot;' />
                <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Manpower (Financial Security)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' value='84' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='76' />
            <format attr='width' field='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' value='240' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.94453036785125732' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</rows>
        <cols>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[sum:Operating Expenditure:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure '>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
          </datasources>
          <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
            <column caption='Prior Year' datatype='boolean' name='[Calculation_1141381071504027650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&gt;=1 and&#13;&#10;DATEDIFF(&apos;year&apos;,[Year],[Calculation_947726287379755010])&lt;2' />
            </column>
            <column caption='Last Year Volume' datatype='integer' name='[Calculation_1141381071504158723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_947726287379984388],[Expenditure],NULL))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Prior Year Volume' datatype='integer' name='[Calculation_1141381071505260549]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='LOOKUP(WINDOW_SUM(SUM(IIF([Calculation_1141381071504027650],[Expenditure],null))),0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Change New' datatype='integer' name='[Calculation_1141381071505543174]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='([Calculation_1141381071504158723]-[Calculation_1141381071505260549])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Change' datatype='real' default-format='p0.0%' name='[Calculation_1141381071512084488]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Calculation_1141381071505543174]/[Calculation_1141381071505260549]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Header' datatype='string' name='[Calculation_1141381071514488842]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Last Year as of: &quot; +str([Calculation_947726287379755010])' />
            </column>
            <column aggregation='Count' caption='Max Year' datatype='datetime' datatype-customized='true' name='[Calculation_947726287379755010]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETIME({MAX([Year])})' />
            </column>
            <column caption='Last Year' datatype='boolean' name='[Calculation_947726287379984388]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATEDIFF(&apos;year&apos;,[Year], [Calculation_947726287379755010])&lt;1' />
            </column>
            <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1141381071514488842]' derivation='None' name='[none:Calculation_1141381071514488842:nk]' pivot='key' type='nominal' />
            <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expenditure]' derivation='Sum' name='[sum:Expenditure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1141381071504158723]' derivation='User' name='[usr:Calculation_1141381071504158723:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1141381071505260549]' derivation='User' name='[usr:Calculation_1141381071505260549:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1141381071512084488]' derivation='User' name='[usr:Calculation_1141381071512084488:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071505543174]' ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071504158723]' ordering-type='Rows' />
              <table-calc field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[Calculation_1141381071505260549]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]'>
            <groupfilter function='member' level='[none:Calculation_1141381071514488842:nk]' member='&quot;Last Year as of: Jan 1 2015 12:00AM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Educational Institutions:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Educational Institutions:nk]' member='&quot;Others&quot;' />
                <groupfilter function='member' level='[none:Educational Institutions:nk]' member='&quot;Primary Schools&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Universities&quot;</bucket>
              <bucket>&quot;Polytechnics&quot;</bucket>
              <bucket>&quot;Secondary Schools&quot;</bucket>
              <bucket>&quot;Primary Schools&quot;</bucket>
              <bucket>&quot;Others&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' included-values='in-range'>
            <min>712732</min>
            <max>11400000</max>
          </filter>
          <slices>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</column>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[:Measure Names]</column>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' field-type='quantitative' max='3098974' min='589102' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' value='176' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' value='220' />
            <format attr='height-header' value='60' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok]' value='160' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok]' value='148' />
            <format attr='height' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk]' value='56' />
            <format attr='width' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071512084488:ok:1]' value='156' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok]' value='right' />
            <format attr='text-align' field='[federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok]' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>(([federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk] / ([federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071505260549:ok] / ([federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071504158723:ok] / [federated.1i5nz8t0ykkxjd13yybds0mas423].[usr:Calculation_1141381071512084488:ok:1]))) * [federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk])</rows>
        <cols>([federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_1141381071514488842:nk] * [federated.1i5nz8t0ykkxjd13yybds0mas423].[tyr:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Govt. Expenditure by Institutions'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_govt_edu_institutions_expenditure (itp232_teamevians)' name='federated.1i5nz8t0ykkxjd13yybds0mas423' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select an Institution' datatype='string' name='[Parameter 14]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1i5nz8t0ykkxjd13yybds0mas423'>
            <column caption='Institutions Filter' datatype='boolean' name='[Calculation_776026551146143744]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 14]=[Educational Institutions] OR [Parameters].[Parameter 14]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Educational Institutions]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Expenditure]' role='measure' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_776026551146143744]' derivation='None' name='[none:Calculation_776026551146143744:nk]' pivot='key' type='nominal' />
            <column-instance column='[Educational Institutions]' derivation='None' name='[none:Educational Institutions:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Expenditure]' derivation='Sum' name='[sum:Expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_776026551146143744:nk]'>
            <groupfilter function='member' level='[none:Calculation_776026551146143744:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Calculation_776026551146143744:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' />
              <lod column='[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</rows>
        <cols>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Graduates who prefer Part Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_graduates_prefer_part_time (itp232_teamevians)' name='federated.1il27gc0jhlnda1fgoyg40ewddvb' />
          </datasources>
          <datasource-dependencies datasource='federated.1il27gc0jhlnda1fgoyg40ewddvb'>
            <column datatype='string' name='[Age Range]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Female]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Male]' role='measure' type='quantitative' />
            <column-instance column='[Age Range]' derivation='None' name='[none:Age Range:nk]' pivot='key' type='nominal' />
            <column-instance column='[Female]' derivation='Sum' name='[sum:Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Male]' derivation='Sum' name='[sum:Male:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[none:Age Range:nk]' value='101' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.59270715713500977' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.59270715713500977' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Female:qk] + [federated.1il27gc0jhlnda1fgoyg40ewddvb].[sum:Male:qk])</rows>
        <cols>[federated.1il27gc0jhlnda1fgoyg40ewddvb].[none:Age Range:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Industry Salaries (Year &lt; 5)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
          </datasources>
          <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Max. Salary]' derivation='Avg' name='[avg:Max. Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min. Salary]' derivation='Avg' name='[avg:Min. Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]'>
            <groupfilter function='member' level='[Industry]' member='&quot;Sales &amp; Customer Service&quot;' user:ui-action-filter='[Action10]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' value='189' />
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
            <format attr='height' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.97751379013061523' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.66966849565505981' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary:qk] + [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary:qk])</rows>
        <cols>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk] / [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Industry Salaries (Year &gt; 5)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_salaries (itp232_teamevians)' name='federated.1lprrlx0yxvyt81etz7v90x7g7q9' />
          </datasources>
          <datasource-dependencies datasource='federated.1lprrlx0yxvyt81etz7v90x7g7q9'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Max. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[Min. Salary (&gt; 5 Years)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Max. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Max. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min. Salary (&gt; 5 Years)]' derivation='Avg' name='[avg:Min. Salary (&gt; 5 Years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]'>
            <groupfilter function='level-members' level='[Industry]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]'>
            <groupfilter function='level-members' level='[none:Industry:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[Action (Industry)]</column>
            <column>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.93353593349456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' />
              <color column='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.55972373485565186' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Min. Salary (&gt; 5 Years):qk] + [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[avg:Max. Salary (&gt; 5 Years):qk])</rows>
        <cols>([federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk] / [federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Position:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Industry with Wage Increase'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_with_best_wage_increase (itp232_teamevians)' name='federated.05b65bu1f20hlw15pm1np0bjehoj' />
          </datasources>
          <datasource-dependencies datasource='federated.05b65bu1f20hlw15pm1np0bjehoj'>
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Possible Wage Increase]' role='measure' type='quantitative' />
            <column-instance column='[Possible Wage Increase]' derivation='Avg' name='[avg:Possible Wage Increase:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' field-type='quantitative' max='53000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' value='460' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]</rows>
        <cols>[federated.05b65bu1f20hlw15pm1np0bjehoj].[avg:Possible Wage Increase:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_median_gross_salary_with_cpf (itp232_teamevians)' name='federated.0q93mpa1twersg183rr751s9dy7h' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0q93mpa1twersg183rr751s9dy7h'>
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoom in Value' datatype='integer' name='[Calculation_922956489143459842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Salary]' derivation='Avg' name='[avg:Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489143459842]' derivation='Sum' name='[sum:Calculation_922956489143459842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Calculation_741686603181281281:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='60' />
            <format attr='height' field='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' />
              <lod column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' z-order='1' />
            <reference-line axis-column='[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]' enable-instant-analytics='false' formula='average' id='refline1' label-type='none' probability='95' scope='per-table' value-column='[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]</rows>
        <cols>([federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk] / [federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='No. of Graduates from Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_no_of_graduates_from_courses (itp232_teamevians)' name='federated.1a2otfp1j4hke7112gdjq18gfoas' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1a2otfp1j4hke7112gdjq18gfoas'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737254830086]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' datatype-customized='true' name='[No. of Graduates]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737254830086]' derivation='None' name='[none:Calculation_942659737254830086:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[No. of Graduates]' derivation='Sum' name='[sum:No. of Graduates:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Calculation_942659737254830086:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737254830086:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Calculation_942659737254830086:nk]</column>
            <column>[federated.1a2otfp1j4hke7112gdjq18gfoas].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='48' />
            <format attr='height-header' value='44' />
            <format attr='width' field='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' value='208' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</rows>
        <cols>[federated.1a2otfp1j4hke7112gdjq18gfoas].[sum:No. of Graduates:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Average salary of Poly Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Avg Salary per Course' datatype='real' name='[Calculation_741686603187695620]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({INCLUDE [Course] : sum([Median Monthly Gross Starting Salary ($)])})' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_741686603187695620]' derivation='User' name='[usr:Calculation_741686603187695620:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' field-type='quantitative' fold='true' max='10000.0' min='0.0' range-type='fixed' scope='cols' synchronized='true' type='space' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' value='117' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' value='117' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='55' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='2' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</rows>
        <cols>([federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk] + [federated.0rru1jo1cr3lie16hemn61sks6od].[usr:Calculation_741686603187695620:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Average salary of Uni Graduates'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Avg Salary per Faculty (Uni)' datatype='real' name='[Calculation_741686603192209415]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG({ INCLUDE [Qualification] : SUM([Average Salary ($)]) })' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_741686603192209415]' derivation='User' name='[usr:Calculation_741686603192209415:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Exclusions (Faculty,Qualification)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Faculty:nk]' />
                <groupfilter function='level-members' level='[none:Qualification:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Arts&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Arts (Architecture)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Computing&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computational Biology)&quot;' />
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computer Engineering)&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Design&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Building)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Engineering&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Electrical &amp; Electronic Engineering &amp; Economics&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Information Technology&quot;' />
                  <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Computing (Computational Biology)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Faculty:nk]' member='&quot;Science&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Computational Biology)&quot;' />
                    <groupfilter function='member' level='[none:Qualification:nk]' member='&quot;Bachelor of Science (Nursing) (Hons)&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Exclusions (Faculty,Qualification)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' field-type='quantitative' fold='true' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='10000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='61' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='236' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' />
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</rows>
        <cols>([federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk] + [federated.04gzwsu0pff89w1bv9tri1sd8904].[usr:Calculation_741686603192209415:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Poly Salary'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]'>
            <groupfilter function='level-members' level='[Course Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='6000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='96' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' />
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overall Uni Salary'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]'>
            <groupfilter function='level-members' level='[Faculty]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[Action (Faculty)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='6000.0' min='-293.04208563533194' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266696957952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Course Category] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Course Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Course]' role='dimension' type='nominal' />
            <column datatype='string' name='[Fresh Graduate]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_886083266696957952]' derivation='None' name='[none:Calculation_886083266696957952:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course Category]' derivation='None' name='[none:Course Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Course]' derivation='None' name='[none:Course:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fresh Graduate]' derivation='None' name='[none:Fresh Graduate:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course)]'>
            <groupfilter function='level-members' level='[Course]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266696957952:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Fresh Graduate:nk]' />
              <groupfilter function='member' level='[none:Fresh Graduate:nk]' member='&quot;Fresh Graduate&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</column>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[Action (Course)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' value='89' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk]' value='1060' />
            <format attr='width' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]' value='292' />
            <format attr='height-header' value='56' />
            <format attr='height' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]' value='44' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk] / [federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course:nk])</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Fresh Graduate:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Enrolment'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_poly_enrolment (itp232_teamevians)' name='federated.0g2iv9z130aagi18y0udj1x2q6yk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2iv9z130aagi18y0udj1x2q6yk'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253560322]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Poly Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Polytechnic]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737253560322]' derivation='None' name='[none:Calculation_942659737253560322:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Polytechnic]' derivation='None' name='[none:Polytechnic:nk]' pivot='key' type='nominal' />
            <column-instance column='[Poly Enrolment]' derivation='Sum' name='[sum:Poly Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Calculation_942659737253560322:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737253560322:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Calculation_942659737253560322:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[sum:Poly Enrolment:qk]</rows>
        <cols>([federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk] / [federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Polytechnic:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Poly Salary (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_poly_graduates (itp232_teamevians)' name='federated.0rru1jo1cr3lie16hemn61sks6od' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0rru1jo1cr3lie16hemn61sks6od'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_338895911433359363]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489140781056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='integer' name='[Median Monthly Gross Starting Salary ($)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' default-role='measure' default-type='quantitative' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Median Monthly Gross Starting Salary ($)]' derivation='Avg' name='[avg:Median Monthly Gross Starting Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_338895911433359363]' derivation='None' name='[none:Calculation_338895911433359363:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year of Survey]' derivation='None' name='[none:Year of Survey:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489140781056]' derivation='Sum' name='[sum:Calculation_922956489140781056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]'>
            <groupfilter function='member' level='[none:Calculation_338895911433359363:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_338895911433359363:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' field-type='quantitative' max='3500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='64' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='1' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-pane' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='2' />
            <reference-line axis-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]' enable-instant-analytics='false' formula='average' id='refline2' label-type='none' probability='95' scope='per-table' value-column='[federated.0rru1jo1cr3lie16hemn61sks6od].[sum:Calculation_922956489140781056:qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rru1jo1cr3lie16hemn61sks6od].[avg:Median Monthly Gross Starting Salary ($):qk]</rows>
        <cols>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Year of Survey:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Expenditure on Education'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_total_expenditure_on_edu (itp232_teamevians)' name='federated.1msqecj11mxdsj1g3d5li1ylyeuf' />
          </datasources>
          <datasource-dependencies datasource='federated.1msqecj11mxdsj1g3d5li1ylyeuf'>
            <column datatype='integer' name='[Total Expenditure on Education]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Expenditure on Education]' derivation='Sum' name='[sum:Total Expenditure on Education:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1msqecj11mxdsj1g3d5li1ylyeuf].[sum:Total Expenditure on Education:qk]</rows>
        <cols>[federated.1msqecj11mxdsj1g3d5li1ylyeuf].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Labour Costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_industry_labour_cost (itp232_teamevians)' name='federated.0liuevi0x7uiju1dhtsjw0uv1b96' />
          </datasources>
          <datasource-dependencies datasource='federated.0liuevi0x7uiju1dhtsjw0uv1b96'>
            <column datatype='integer' name='[Annual Variable Component (Annual Wage Supplements)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Basic Wage Overtime &amp; Other Regular Payments]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Employer CPF Contributons]' role='measure' type='quantitative' />
            <column datatype='string' name='[Industry]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Levy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Medical Cost &amp; Other Insurance]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net Training Cost]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other Labour Costs]' role='measure' type='quantitative' />
            <column-instance column='[Industry]' derivation='None' name='[none:Industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual Variable Component (Annual Wage Supplements)]' derivation='Sum' name='[sum:Annual Variable Component (Annual Wage Supplements):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Basic Wage Overtime &amp; Other Regular Payments]' derivation='Sum' name='[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Employer CPF Contributons]' derivation='Sum' name='[sum:Employer CPF Contributons:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Levy]' derivation='Sum' name='[sum:Levy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medical Cost &amp; Other Insurance]' derivation='Sum' name='[sum:Medical Cost &amp; Other Insurance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Training Cost]' derivation='Sum' name='[sum:Net Training Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other Labour Costs]' derivation='Sum' name='[sum:Other Labour Costs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Annual Variable Component (Annual Wage Supplements):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Basic Wage Overtime &amp; Other Regular Payments:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Employer CPF Contributons:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Levy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Medical Cost &amp; Other Insurance:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Net Training Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[sum:Other Labour Costs:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]' field-type='quantitative' max='55000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' value='41' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='52' />
            <format attr='width' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[none:Industry:nk]' value='272' />
            <format attr='width' field='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' value='364' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0liuevi0x7uiju1dhtsjw0uv1b96].[none:Industry:nk] / [federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names])</rows>
        <cols>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Wage Change by Industry(%)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_total_wage_change_by_industry (itp232_teamevians)' name='federated.05yhkm914172bb12yhoqp014nyph' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.05yhkm914172bb12yhoqp014nyph'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_645422161744916484]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Occupations]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Wage Change by Industry (per Cent)]' role='measure' type='quantitative' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Total Wage Change by Industry (per Cent)]' derivation='Avg' name='[avg:Total Wage Change by Industry (per Cent):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_645422161744916484]' derivation='None' name='[none:Calculation_645422161744916484:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occupations]' derivation='None' name='[none:Occupations:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Wage Change by Industry (per Cent)]' derivation='Sum' name='[sum:Total Wage Change by Industry (per Cent):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05yhkm914172bb12yhoqp014nyph].[Action (Occupations)]'>
            <groupfilter function='level-members' level='[Occupations]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]'>
            <groupfilter function='member' level='[none:Calculation_645422161744916484:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]</column>
            <column>[federated.05yhkm914172bb12yhoqp014nyph].[Action (Occupations)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' field-type='quantitative' max='10.0' min='-6.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' max='10.0' min='-6.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
            <encoding attr='color' center='0.0' field='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' max='10.0' min='-6.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#aed1ae</color>
                <color>#86c986</color>
                <color>#60c160</color>
                <color>#3db93d</color>
                <color>#1db11d</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#c0c0c0' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#c0c0c0' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='stroke-color' id='refline2' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' />
            </encodings>
            <reference-line axis-column='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-pane' value-column='[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (per Cent):qk]</rows>
        <cols>[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Uni Courses'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Course' datatype='string' name='[Parameter 13]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column caption='Course Filter' datatype='boolean' name='[Calculation_886083266697691138]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 13]=[Faculty] OR [Parameters].[Parameter 13]=&apos;(All)&apos;' />
            </column>
            <column datatype='string' name='[Faculty]' role='dimension' type='nominal' />
            <column datatype='string' name='[Qualification]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_886083266697691138]' derivation='None' name='[none:Calculation_886083266697691138:nk]' pivot='key' type='nominal' />
            <column-instance column='[Faculty]' derivation='None' name='[none:Faculty:nk]' pivot='key' type='nominal' />
            <column-instance column='[Qualification]' derivation='None' name='[none:Qualification:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]'>
            <groupfilter function='member' level='[none:Calculation_886083266697691138:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='85' />
            <format attr='width' value='920' />
            <format attr='height' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' value='91' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' value='300' />
            <format attr='width' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk] / [federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Qualification:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Uni Enrolment'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_uni_enrolment (itp232_teamevians)' name='federated.117ra73191xfaa12tkrf108iwowf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.117ra73191xfaa12tkrf108iwowf'>
            <column caption='Year Filter' datatype='boolean' name='[Calculation_942659737253777412]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column datatype='integer' name='[Enrolment]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Universities]' role='dimension' type='nominal' />
            <column datatype='string' datatype-customized='true' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_942659737253777412]' derivation='None' name='[none:Calculation_942659737253777412:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Universities]' derivation='None' name='[none:Universities:nk]' pivot='key' type='nominal' />
            <column-instance column='[Enrolment]' derivation='Sum' name='[sum:Enrolment:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.117ra73191xfaa12tkrf108iwowf].[Action (Gender)]'>
            <groupfilter function='level-members' level='[Gender]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.117ra73191xfaa12tkrf108iwowf].[none:Calculation_942659737253777412:nk]'>
            <groupfilter function='member' level='[none:Calculation_942659737253777412:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.117ra73191xfaa12tkrf108iwowf].[none:Calculation_942659737253777412:nk]</column>
            <column>[federated.117ra73191xfaa12tkrf108iwowf].[Action (Gender)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.117ra73191xfaa12tkrf108iwowf].[none:Universities:nk]' value='119' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.117ra73191xfaa12tkrf108iwowf].[sum:Enrolment:qk]</rows>
        <cols>([federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk] / [federated.117ra73191xfaa12tkrf108iwowf].[none:Universities:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Uni Salary (Line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='yx_overall_uni_graduates (itp232_teamevians)' name='federated.04gzwsu0pff89w1bv9tri1sd8904' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select a Year' datatype='string' name='[Parameter 12]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
            </column>
            <column caption='Zoom in' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Yes&quot;'>
              <calculation class='tableau' formula='&quot;Yes&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04gzwsu0pff89w1bv9tri1sd8904'>
            <column datatype='integer' name='[Average Salary ($)]' role='measure' type='quantitative' />
            <column caption='Year Filter (Uni)' datatype='boolean' name='[Calculation_741686603181281281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 12]=[Year of Survey] OR [Parameters].[Parameter 12]=&apos;(All)&apos;' />
            </column>
            <column caption='Zoomed in Value' datatype='integer' name='[Calculation_922956489142702081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Parameters].[Parameter 7]=&apos;No&apos;,0,NULL)' />
            </column>
            <column datatype='string' datatype-customized='true' name='[Year of Survey]' role='dimension' type='nominal' />
            <column-instance column='[Average Salary ($)]' derivation='Avg' name='[avg:Average Salary ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_741686603181281281]' derivation='None' name='[none:Calculation_741686603181281281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year of Survey]' derivation='None' name='[none:Year of Survey:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_922956489142702081]' derivation='Sum' name='[sum:Calculation_922956489142702081:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]'>
            <groupfilter function='member' level='[none:Calculation_741686603181281281:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' field-type='quantitative' max='3500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='64' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' />
            </encodings>
            <reference-line axis-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-table' value-column='[federated.04gzwsu0pff89w1bv9tri1sd8904].[sum:Calculation_922956489142702081:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</rows>
        <cols>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Year of Survey:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Average Monthly Salary per Employee'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Average Monthly Salary per Employee</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='16' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='8' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='5' param='horz' type='layout-flow' w='90413' x='0' y='5460'>
                <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                  <zone h='47275' id='1' name='Average Monthly Salary per Employee (per Quarter)' w='45207' x='0' y='5460' />
                  <zone h='47275' id='6' name='Average Monthly Salary per Employee (Anually)' w='45206' x='45207' y='5460' />
                  <zone h='47265' id='14' name='Average Monthly Salary per Employee Rate of Change in %' w='89069' x='0' y='52735' />
                  <zone h='47265' id='15' param='horz' type='layout-flow' w='1344' x='89069' y='52735' />
                </zone>
              </zone>
              <zone fixed-size='160' h='94540' id='7' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                <zone h='8363' id='9' name='Average Monthly Salary per Employee (Anually)' pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' type='color' w='9587' x='90413' y='5460' />
                <zone h='6505' id='13' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='9587' x='90413' y='13823' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Average Monthly Salary per Employee (Rate of Change in %)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Median Gross Monthly Salary by Occupation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='28' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='27' type='title' w='100000' x='0' y='0' />
            <zone h='94075' id='26' type='layout-basic' w='100000' x='0' y='5460'>
              <zone h='47038' id='5' param='horz' type='layout-flow' w='86121' x='0' y='5460'>
                <zone h='47038' id='3' type='layout-basic' w='86121' x='0' y='5460'>
                  <zone h='47038' id='10' name='Basic Wage Change by Industry' w='43557' x='0' y='5460' />
                  <zone h='47038' id='19' type='layout-basic' w='42564' x='43557' y='5460'>
                    <zone h='47038' id='20' param='vert' type='layout-flow' w='42564' x='43557' y='5460'>
                      <zone fixed-size='674' h='47038' id='18' is-fixed='true' param='horz' type='layout-flow' w='42564' x='43557' y='5460'>
                        <zone h='47038' id='21' param='horz' type='layout-flow' w='42564' x='43557' y='5460'>
                          <zone h='47038' id='22' name='Total Wage Change by Industry(%)' w='42564' x='43557' y='5460'>
                            <layout-cache cell-count-w='12' minheight='222' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='47037' id='24' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' w='86121' x='0' y='52498' />
              <zone fixed-size='160' h='94075' id='4' is-fixed='true' param='vert' type='layout-flow' w='13879' x='86121' y='5460'>
                <zone h='8363' id='25' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' pane-specification-id='1' param='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' type='color' w='13879' x='86121' y='5460' />
                <zone h='6505' id='12' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='13879' x='86121' y='13823' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparing Govt. Expenditure vs Poly/Uni Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Comparing Government Expenditure &amp; Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='15' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='14' param='vert' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
                <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                  <zone h='47274' id='1' name='Govt. Expenditure by Institutions' w='90413' x='0' y='5460' />
                  <zone h='47266' id='11' name='Poly Salary (Line)' w='45207' x='0' y='52734' />
                  <zone h='47266' id='12' name='Uni Salary (Line)' w='45206' x='45207' y='52734' />
                </zone>
                <zone fixed-size='160' h='94540' id='4' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                  <zone h='20558' id='6' name='Govt. Expenditure by Institutions' pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' w='9587' x='90413' y='5460' />
                  <zone h='6505' id='7' mode='compact' param='[Parameters].[Parameter 14]' type='paramctrl' w='9587' x='90413' y='26018' />
                  <zone h='6505' id='9' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='9587' x='90413' y='32523' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparing Poly &amp; Uni Courses'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='horz' type='layout-flow' w='91662' x='0' y='0'>
              <zone h='100000' id='4' type='layout-basic' w='91662' x='0' y='0'>
                <zone h='42397' id='1' name='Poly Courses' w='45833' x='0' y='7603' />
                <zone h='50000' id='11' name='No. of Graduates from Courses' w='45829' x='45833' y='50000' />
                <zone h='42397' id='13' name='Uni Courses' w='45829' x='45833' y='7603' />
                <zone h='50000' id='14' name='Poly Enrolment' w='22924' x='0' y='50000' />
                <zone h='50000' id='17' name='Uni Enrolment' w='22909' x='22924' y='50000' />
                <zone forceUpdate='true' h='7603' id='18' type='text' w='90545' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='15'>Comparing Courses, Enrolment Rate and No of Graduates from Courses</run>
                  </formatted-text>
                </zone>
                <zone h='7603' id='19' param='horz' type='layout-flow' w='1117' x='90545' y='0' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='7' is-fixed='true' param='vert' type='layout-flow' w='8338' x='91662' y='0'>
              <zone h='7294' id='15' name='Poly Enrolment' pane-specification-id='0' param='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' type='color' w='8338' x='91662' y='0' />
              <zone h='5375' id='9' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='8338' x='91662' y='7294' />
              <zone h='5375' id='16' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='8338' x='91662' y='12669' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison between Poly &amp; Uni Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Comparison between Polytechnic &amp; University Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='15' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='12' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='10' param='horz' type='layout-flow' w='90413' x='0' y='5460'>
                <zone h='94540' id='5' param='horz' type='layout-flow' w='90413' x='0' y='5460'>
                  <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                    <zone h='94540' id='1' name='Overall Poly Salary' w='45208' x='0' y='5460' />
                    <zone h='94540' id='8' name='Overall Uni Salary' w='45205' x='45208' y='5460' />
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='94540' id='11' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                <zone h='6505' id='13' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='9587' x='90413' y='5460' />
                <zone h='6505' id='14' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='9587' x='90413' y='11965' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='90413' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='90413' x='0' y='0'>
                  <zone h='42614' id='1' name='Average salary of Polytechnic Graduates' w='90413' x='0' y='7386' />
                  <zone h='50000' id='8' name='Average salary of University Graduates' w='90413' x='0' y='50000' />
                  <zone h='7386' id='14' type='text' w='90413' x='0' y='0'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontsize='15'>Comparing the average Salary of Polytechnic and University Graduates</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='100000' id='9' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='0'>
                <zone h='6970' id='11' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='9587' x='90413' y='0' />
                <zone h='6505' id='12' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='9587' x='90413' y='6970' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 13'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
    </dashboard>
    <dashboard name='Govt. Expenditure (Expand)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Government Expenditure (In depth)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6273' id='4' type='title' w='100000' x='0' y='0' />
            <zone h='93262' id='3' type='layout-basic' w='100000' x='0' y='6273'>
              <zone h='93262' id='1' name='Govt. Expenditure ' w='100000' x='0' y='6273' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Govt. Expenditure1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Government Expenditure</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='18' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                <zone h='47280' id='1' name='Govt. Expenditure' w='45207' x='0' y='5460' />
                <zone h='47260' id='7' name='Total Expenditure on Education' w='45206' x='45207' y='52740' />
                <zone h='47260' id='11' name='Govt. Expenditure by Institutions' w='45207' x='0' y='52740' />
                <zone h='47280' id='13' param='vert' type='layout-flow' w='45206' x='45207' y='5460'>
                  <zone forceUpdate='true' h='29618' id='14' type='text' w='45206' x='45207' y='5460'>
                    <formatted-text>
                      <run fontcolor='#b4b4b4' fontname='AR JULIAN' fontsize='14'>Æ&#10;&#10;&#10;&#10;&#10;</run>
                      <run fontalignment='1' fontcolor='#f28e2b' fontname='AR JULIAN' fontsize='14'>&#10;1ST DEFENCE 25,786</run>
                      <run fontalignment='1' fontcolor='#f17b79' fontname='AR JULIAN' fontsize='16'>&#10;2ND EDUCATION 14,049</run>
                      <run fontalignment='1' fontcolor='#ba9582' fontname='AR JULIAN' fontsize='14'>&#10;3RD HOME AFFAIRS 4427</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='160' h='94540' id='4' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                <zone h='20558' id='12' name='Govt. Expenditure by Institutions' pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' w='9587' x='90413' y='5460' />
                <zone h='6505' id='10' mode='compact' param='[Parameters].[Parameter 14]' type='paramctrl' w='9587' x='90413' y='26018' />
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='15679' id='16' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\education.png' type='bitmap' w='8868' x='64290' y='7433' />
        <zone h='16293' id='17' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\health.png' type='bitmap' w='11043' x='82114' y='5069' />
        <zone h='12744' id='20' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\defence.png' type='bitmap' w='7576' x='49462' y='8327' />
        <zone h='13686' id='21' is-centered='0' is-scaled='1' param='C:\Users\Yuxuan\Desktop\home.png' type='bitmap' w='9126' x='79811' y='7386' />
        <zone h='12660' id='22' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\defence.png' type='bitmap' w='6651' x='47274' y='8362' />
        <zone h='13473' id='23' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\educatiom.png' type='bitmap' w='7849' x='63511' y='7433' />
        <zone h='14750' id='24' is-centered='0' is-scaled='1' param='C:\Users\Jun Long\Desktop\home.jpg' type='bitmap' w='7070' x='78490' y='6736' />
      </zones>
    </dashboard>
    <dashboard name='Industry Salary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Industry Salary &amp; Increase in Salary</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='10' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='3' type='layout-basic' w='87418' x='0' y='5460'>
                <zone h='47274' id='1' name='Industry Salaries (Year &lt; 5)' w='43710' x='0' y='5460' />
                <zone h='47274' id='7' name='Industry Salaries (Year &gt; 5)' w='43708' x='43710' y='5460' />
                <zone h='47266' id='8' name='Industry with Wage Increase' w='86139' x='0' y='52734' />
                <zone h='47266' id='9' param='horz' type='layout-flow' w='1279' x='86139' y='52734' />
              </zone>
              <zone fixed-size='210' h='94540' id='4' is-fixed='true' param='vert' type='layout-flow' w='12582' x='87418' y='5460'>
                <zone h='27875' id='12' name='Industry Salaries (Year &gt; 5)' pane-specification-id='5' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]&#10;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' type='color' w='12582' x='87418' y='5460' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Average Salaries of Universities and Polytehnics</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='14' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='13' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                <zone h='47270' id='1' name='Overall Average salary of Poly Graduates' w='90413' x='0' y='5460' />
                <zone h='47270' id='12' name='Overall Average salary of Uni Graduates' w='90413' x='0' y='52730' />
              </zone>
              <zone fixed-size='160' h='94540' id='4' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                <zone h='6505' id='6' mode='compact' param='[Parameters].[Parameter 12]' type='paramctrl' w='9587' x='90413' y='5460' />
                <zone h='6505' id='11' mode='compact' param='[Parameters].[Parameter 13]' type='paramctrl' w='9587' x='90413' y='11965' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Part time Job'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Salary of Part Time Jobs</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='9' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='3' type='layout-basic' w='99760' x='0' y='5460'>
                <zone h='94540' id='1' name='Graduates who prefer Part Time' w='49881' x='0' y='5460' />
                <zone h='94540' id='7' name='Average Monthly Salary of Full Time &amp; Part Time Employees' w='49879' x='49881' y='5460' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total Labour Cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='15'>Total Labour Costs</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5460' id='9' type='title' w='100000' x='0' y='0' />
            <zone h='94540' id='5' param='horz' type='layout-flow' w='100000' x='0' y='5460'>
              <zone h='94540' id='3' type='layout-basic' w='90413' x='0' y='5460'>
                <zone h='94540' id='7' name='Total Labour Costs' show-title='false' w='90413' x='0' y='5460' />
              </zone>
              <zone fixed-size='160' h='94540' id='4' is-fixed='true' param='vert' type='layout-flow' w='9587' x='90413' y='5460'>
                <zone h='20558' id='8' name='Total Labour Costs' pane-specification-id='0' param='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' type='color' w='9587' x='90413' y='5460' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='223'>
    <window class='dashboard' name='Comparing Poly &amp; Uni Courses'>
      <viewpoints>
        <viewpoint name='No. of Graduates from Courses'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[sum:No. of Graduates:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</field>
                    <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[sum:No. of Graduates:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Accountancy&quot;</value>
                  <value>17525</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Poly Courses' />
        <viewpoint name='Poly Enrolment'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Uni Courses' />
        <viewpoint name='Uni Enrolment'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
    </window>
    <window class='dashboard' name='Comparison between Poly &amp; Uni Salary'>
      <viewpoints>
        <viewpoint name='Overall Poly Salary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Overall Uni Salary'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.04gzwsu0pff89w1bv9tri1sd8904].[avg:Average Salary ($):qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <viewpoints>
        <viewpoint name='Overall Average salary of Poly Graduates' />
        <viewpoint name='Overall Average salary of Uni Graduates' />
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)'>
      <viewpoints>
        <viewpoint name='Average salary of Polytechnic Graduates'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average salary of University Graduates'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Average Monthly Salary per Employee'>
      <viewpoints>
        <viewpoint name='Average Monthly Salary per Employee (Anually)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Average Monthly Salary per Employee (per Quarter)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Monthly Salary per Employee Rate of Change in %'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='Average Monthly Salary per Employee (Rate of Change in %)'>
      <viewpoints>
        <viewpoint name='Basic Wage Change by Industry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk]</field>
                      <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0q93mpa1twersg183rr751s9dy7h].[avg:Salary:qk]</field>
                    <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]</field>
                    <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Occupations:nk]</field>
                    <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk]</field>
                    <field>[federated.0q93mpa1twersg183rr751s9dy7h].[sum:Calculation_922956489143459842:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1685.0</value>
                  <value>&quot;Females&quot;</value>
                  <value>&quot;Service &amp; Sales Workers&quot;</value>
                  <value>&quot;2012&quot;</value>
                  <value>%null%</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Wage Change by Industry(%)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='24' />
    </window>
    <window class='dashboard' name='Industry Salary'>
      <viewpoints>
        <viewpoint name='Industry Salaries (Year &lt; 5)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Industry Salaries (Year &gt; 5)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Industry with Wage Increase'>
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Govt. Expenditure1'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure' />
        <viewpoint name='Govt. Expenditure by Institutions'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</field>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Universities&quot;</value>
                  <value>#2012-01-01#</value>
                  <value>2536971</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Expenditure on Education'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' name='Comparing Govt. Expenditure vs Poly/Uni Salary'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure by Institutions'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Year:qk]</field>
                    <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[sum:Expenditure:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Universities&quot;</value>
                  <value>#2012-01-01#</value>
                  <value>2536971</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Poly Salary (Line)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Uni Salary (Line)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Govt. Expenditure (Expand)'>
      <viewpoints>
        <viewpoint name='Govt. Expenditure '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Total Labour Cost'>
      <viewpoints>
        <viewpoint name='Total Labour Costs' />
      </viewpoints>
      <active id='7' />
    </window>
    <window class='dashboard' name='Part time Job'>
      <viewpoints>
        <viewpoint name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Graduates who prefer Part Time'>
          <zoom type='entire-view' />
          <highlight field='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Govt. Expenditure '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee Rate of Change in %'>
      <cards>
        <edge name='left'>
          <strip size='296'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:1st Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:2nd Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:3rd Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[avg:4th Quarter Change (%):qk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Calculation_942659737257639945:nk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:nk]</field>
            <field>[federated.1apdhlk1d6ie281a9br7h0175d2q].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average salary of Polytechnic Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Poly Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Uni Salary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Overall Average salary of Poly Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Calculation_886083266696957952:nk]</field>
            <field>[federated.0rru1jo1cr3lie16hemn61sks6od].[none:Course Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Overall Average salary of Uni Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_741686603181281281:nk]</field>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Calculation_886083266697691138:nk]</field>
            <field>[federated.04gzwsu0pff89w1bv9tri1sd8904].[none:Faculty:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Wage Change by Industry(%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[avg:Total Wage Change by Industry (%):qk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Calculation_645422161744916484:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Industry:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Occupations:nk]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[none:Year:ok]</field>
            <field>[federated.05yhkm914172bb12yhoqp014nyph].[sum:Total Wage Change by Industry (per Cent):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average salary of University Graduates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Gender:nk]</field>
            <field>[federated.0q93mpa1twersg183rr751s9dy7h].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Basic Wage Change by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='102'>
            <card pane-specification-id='2' param='[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[avg:Basic wage change by industry (cents):qk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Calculation_645422161739481090:nk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Occupations:nk]</field>
            <field>[federated.0dapth9192cwx41e23ppn1meqf8l].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee (per Quarter)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary per Employee (Anually)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0stkm4k1vzirgu1055d4a1vi9yfo].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Monthly Salary of Full Time &amp; Part Time Employees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1u0wll11udgl4l1f8jc0010w1a4z].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Graduates who prefer Part Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1il27gc0jhlnda1fgoyg40ewddvb].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry with Wage Increase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05b65bu1f20hlw15pm1np0bjehoj].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry Salaries (Year &lt; 5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]&#10;[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]' type='color' />
            <card pane-specification-id='6' param='[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]</field>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Industry Salaries (Year &gt; 5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[:Measure Names]</field>
            <field>[federated.1lprrlx0yxvyt81etz7v90x7g7q9].[none:Industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Labour Costs'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0liuevi0x7uiju1dhtsjw0uv1b96].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='No. of Graduates from Courses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:Course:nk]</field>
            <field>[federated.1a2otfp1j4hke7112gdjq18gfoas].[none:No. of Graduates:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Govt. Expenditure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Operating Expenditure:nk]</field>
            <field>[federated.0oo26sn1vrd6z11b5izd71pxt88j].[none:Sector:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Expenditure on Education'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Govt. Expenditure by Institutions'>
      <cards>
        <edge name='left'>
          <strip size='136'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Parameter 14]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i5nz8t0ykkxjd13yybds0mas423].[none:Educational Institutions:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Uni Courses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Poly Courses'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 13]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Poly Enrolment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2iv9z130aagi18y0udj1x2q6yk].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Uni Salary (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Uni Enrolment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.117ra73191xfaa12tkrf108iwowf].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Poly Salary (Line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 12]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 13'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Monthly Salary of Full Time &amp; Part Time Employees' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (Anually)' width='192'>
      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
      H7ZTAYjuoO+CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (Rate of Change in %)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee (per Quarter)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Monthly Salary per Employee Rate of Change in %' width='192'>
      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
      /wfzdbH1MuoeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average salary of Polytechnic Graduates' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Average salary of University Graduates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Basic Wage Change by Industry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparing Govt. Expenditure vs Poly/Uni Salary' width='192'>
      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
      bXi3+f8BDsTJEFvRp58AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparing Poly &amp; Uni Courses' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison between Poly &amp; Uni Salary' width='192'>
      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
      +OI3yLGbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure' width='192'>
      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
      EWj/D66xKhg6qcrLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure ' width='192'>
      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
      aO1/AeGtoXz9yrwqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure (Expand)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXlUlEQVR4nO3d+ZMb533n8Xc3unHPAJj74JAzw0MURVkHZcvxxopjO6VKOal1VmXvakuV
      dfmuzT/Bf8PZclV214nXa3s3cWRHtnVEpqyD1kiiDlLDGcwNDO77aHSj+9kfKI2klR3XQGOR
      UH9fPxEYfp95gOkPnn66n0ZrSimFED6l3+wOCHEzSQCEr0kAhK8ZN7sD4qPj3dNJTdNuYk/e
      7+2+vbtfSikJgDga+e1r/OCfHicSDuEEonz9v/xngsats4PRa2X46RNpHvrinxw8t/r8YxIA
      cRQUj/78ab71N39DKPDORl/Yuc6Pf/oEigAPPfwIV194mvs/+yBRU+MXv/gln//TB/jB9/+e
      esfmjz73l9x1Ispjv7pKaecqn/j8X3Hl0k9oWopmy+KRr3+LvStP8lK6TKdaZGJugXa9THhs
      gYe/+CArz/ySlaubjM+f5KEvfJ5H/+/3qTW61Bot/uLLj/D6Uz/l0m+2qdfyPPKVLxMEQJM5
      gDgKDqFwilBA58mf/pjvfPd7dByXnz1+ia9981t84ytf5mf//Cin5uI8eyVNp7xFy4vx4tO/
      4J7P/we++c1v8upzT6E8h8d+9gv+/Et/zZmFCaptl6989es89NmP8er1LI1KgT9+8CG+/e2H
      abcCfPVr38DtlHB7Va7v23zjG99gRq+xUepQqjX5j498ha89/OesvLLGn/3FF/j0Aw/y1YON
      H0B2gcSRMOjZTTyl+OwXHqL3o/+N1fcIBIOYuo4WThAM9Fk4/0me+t6PeDZr8Kk//fes/OS/
      89z6D7kU0IiOzQJw3797gPGRMChFNBZH10DX3v6c1giFQqDpRMPhG89oGm67yuXLL9Cu74Om
      s6i5BMNRgoZOX9fR+F2numQEEEdC554z8/zt3/0DL7zwPK9f30LXYHbE4CePPc4//fB/MnH8
      DtBMxiOQrvaZjge5cP99aFqIO+88TzQU/P2/5ncIJhc4cyzBbefOMzORRNffv1kHzDjbay9z
      +fLLOO96XpMzweKo1Eo5tvbynFg+RWo0Bii209dRoQQnjs2gAZ1mlboFs5Opd2oyRc6cPUvU
      VBQqbaYmUqAUhWKRqakpeu06XRVC6zUIJaYI6Q6lcovJyRSFQoGpqSlcx+LatVVS08eYnx5/
      1/Ndqk2HibFRKoUsuUqHs2dPoQOdRkUCIPxNdoGEr0kAhK9JAISvSQCEr0kAhK/d0gFQSuHJ
      QSrxB3QQAOXaPPurX/HiyotceeP6v1mk3D7X19Lve97uFPjB//pHVlZWSG9nP3DnyttXePFq
      lquvrmD1YXV19QO3KcS7HSyFuPz0Eyx//HPMjNw4I6eU4uqVl2haDuc+di97m+ucu+Mce+lV
      bC3A4088he0qzp89ddCY59rEUrNcuHABgNU3XuX4mfNsvPkG89MpXtvIEvBc7rznAgGnyWvX
      1oklJji7NMPllVcImgbjs0ucmEnw0ksv0yrvEjk+SSQSx+nWeeLxx2m1u5xamqNQdzm9OMHq
      6g4R08XzPHYqPW6bG2Urk2dm4SQn5iY/5LdTDJuDESDXtJkZMdlcu8Y//vPPKW28TNOc5v6P
      38MzT/+K0t4GtZ7LlTfXWTy+wNLS8ns2/rftba6xsrLCdjbPwvwU3/+7/0bDC9Ot7BMeP84n
      7r2dZy49z68uPcfH7rmXys41SvUmNUtx3313c+3Kq6w88zRzZ+7i/O2n0YCdjTRaJMHi4iIX
      7r0bzW6wuVcA+qTXt9m9/jovrxf4owvn+M3L17j33gu8+uLzeB/iGymG00EA5hIhMrUeS6dv
      x9Rdet0u4VgMdAPo8/GP38XzTz9FaHSaG5cU/PYLHo4tnebChQucmJvGMEN4fQfTNACNgK6j
      6QGU8qjXKqxeu0pidpGooRE0gwdNtiyHRPzGgqh307Qby5o0NDTeuchBD8b4zAOfwgx4FPf3
      uXr1KidvO3fU75X4CDrYBbrv05/lmWeeJRePk5qcZf7cebYv/ZrnswZ33nM/kVQSq/Qkf/zF
      z6AFdMZiAa6ubTIRdGgHJ1maTaEbYXqNAisrKyQnZqntb/KfvvptXnnhGZzxKGvp1+lkAnzi
      k/fjVGdZy1SIhEPoRpCxVALQmZwc57blKV64dImI3iW1uEB4YpKABqcW53hh5RXuPncK3drk
      yhWHWDJBMqYwAxoQ4uP3nafVsyHQ/x0RFeIdH9paoNzqS+ybC9yzLPvl4tYhi+GEr93S5wGE
      +EOTAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhf
      kwAIXzPgra8f8eQKWuE/B5dEWpZ1M/shxE0hV4QJX5M5gPA1CYDwNQmA8DUJgPA1CYDwNQmA
      8DUJgPA1CYDwNQmAGGqFUoV6ozlwvQRADK29bI7HnrjEd/7HD+l2B1vKIwEQQ6tUqfH6m+t8
      66+/RCQSHqgNWQskhlapXCUQ0EklEwO3IQEQQ015Hq5SN+4+pB3+lijG7/8vQty6fvPsk3ih
      EVLJGW47feLQ9TIHEEMtFh8lvfom0URqoHoZAcRQa7V7/OVffYloeLBJsIwAYqi1Klm++7ff
      4fpOYaB6GQHEUDt39/1MHy9iW92B6mUEEEOtXMqTLzaYm5kaqF4CIIZWr1XlpdeuYRqKfLE0
      UBsSADG06rUqM9PTWDZMTYwN1IYEQAwtT0EkEsMwNNwBv9fqPQFwe206tker2Tp4rtdp4/ye
      ttutNq7rgvJotzsDdWSYKM9lezNNvXVj4rWVvs6baxs0ayXSm9t4b/280+uDUlRLOXLFCkop
      crk8drfNenoDxzu6k/Bu32YznaZt2aAUucwuhXINp9elUmtid1uk05v0XQ+lPDI7W5RrdTbT
      61xf36RWKbK6lqbvvvPHrleKbGzt4in11mvexLJtdnf3cJ3ejd91E40kUlRrFeZnxsjtFwdq
      I3Dx4sWLbz+wa1mKToxafo9ep8nOXo6QaVLvtomYikKhSjazR0Dz2NjN023XaHYcPNfhjVdf
      JhCK0Xf6lAv7NLo25VwGRzOJDbhQ6VblOTZmJEo2s8/ExBjJsTGqlTKpsXHapSyZUh3LcUkk
      kgQNl5dfeoPRsXF6jTJb+xUmx1MENYtqJ8BoLHQkferbNqGwwX6+zlgiyOZekXazTiSsk8s1
      6DSrBE2NtmswEjYJmCb7mRynT5+iUinTqJUJxUZJJUcPlhQoBfVinuBIimYpQ3B0jK2rr+ES
      IFcs0Pd0kqNxDr8A4WgEQxEiusvqRoY77rqLaOjwBzXfMwLohkHfsfGUwvE0pmMRytUa4aBi
      5ZU1atUijufRqZeJjc1gBnS63Q61Wp2xyWlmJpNUyiV2Mlm6XQtd1+l2PnojgobH9k6Gk6dO
      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
      XQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure by Institutions' width='192'>
      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
      8lved1v+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Govt. Expenditure1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Graduates who prefer Part Time' width='192'>
      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
      bPv/ByE++Hs6QY+EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Industry Salaries (Year &lt; 5)' width='192'>
      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
      MupP6v8DQLcY6ZhEYGAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Industry Salaries (Year &gt; 5)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Industry Salary' width='192'>
      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
      dvtP8tzxnwGUdyEbLcaUGQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Industry with Wage Increase' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Gross Monthly Income From Work of Full-Time Employed Residents by Occupation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='No. of Graduates from Courses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Average salary of Poly Graduates' width='192'>
      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
      PR08AXh0Nf8/S2KX/xbPPKYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overall Average salary of Uni Graduates' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overall Comparison between the average of Universities and Polytechnics&apos; Salaries  (by Courses)' width='192'>
      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
      6pr/H9iiDqjtEGZlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Poly Salary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overall Uni Salary' width='192'>
      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
      i3HVxfEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Part time Job' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Poly Enrolment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Poly Salary (Line)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Expenditure on Education' width='192'>
      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
      HGdKeylDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Labour Cost' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dyY8kWX7g96/t7ubm+xrhseZeVd1dvbCJIYczHAjQSQcBPAgQ9A/MYQ4D
      SoBOAgjoIkAHATrwMiNQ0FBHHdTSXKgZgUJz765eWFW5RcYevu/utq86RNaSnZXRmVmZ5VUV
      9rlEuJvZM3Nz+/l79p6994QkSRJSqWtKXPcBpFLrlAZA6lpLAyB1raUBkPpWCZwVH3zwc/7d
      v/tzPvjFL3GC+Jnl54cHONFnr+Wv+PhSqbdKyeb50Y9+yMnJOT/64Q9I4ohfffAPeJHI977/
      Pn/9l/8PrfeWfOfeXabdozQAUt9uj3/xU/T2D3k37/OXf/MBOzt73Pvhj6ioCVqymRaBUt9u
      tu2Ry+nIapY4cBFFgSRJCD2L//BXP0tzgNS3U6NRB+C7v/v7/NXf/RUnksAPf/y7KO6QX/39
      3/L++9+hlJUQ0oaw1HWWFoFS11oaAKlrLQ2A1LWWBkDqWksDIHWtpQGQutbSAEhda2kApK61
      NABS11oaAKlrLQ2A1LWWBkDqWksDIHWtpQGQutbSAEhdazJAkiSYprnuY0ldQ0mSIAjC2tJK
      O8Sk1mqxXKLruRcuV2TppdMKwxBZfrVOjmmXyNRaHXZm/OlPfvrC5f/2v/3P3ur+03uA1LX2
      XACcHR7gRq9eKvLMGVZw+X8cBTiOh2lZX7hu6Nt8/NGHLEwX4pD7H31Ebzj5wnXt1QwvhPGg
      y8NHB/hh/IXrvWhfX9bBwQHxy5QSvRWjpcdkPCZOEsbj8TOLkyTEstynL2Jm8wXAc+vNxwMe
      PX5C8MUf86XFUYDjegDMRn1MN+D4yQFB/BKfJXQZzU1W8yluEHB8fMpiNsG/4rpwzAUPHz5k
      trJfuM50OiF6mf1/hZ4pAiVJjBe4dC/64C9QjSKL8Yh6vUp/NKdUrjAbdwlC0PNFMmKI5UG1
      lGXUO6dx430OLw7J5bJ0hyu2thpYiwnj6YJSIcd44VJvbVLLCaxMBz8IIIHZfEml0eD+xx8h
      ZwzEwMZLZAq6zGg44Pb3fo/lfI6ml7AXIx6c9yiWCqxcKOgKsghBkrAYD/AEjcRd4EQKSuJi
      VDdoN2uvdXIid465XDGzA7pPPkTWy8iRjR2KVPJ5Chp4mQKDkydsNGtMqbCXDbgYLvBXK5zV
      nFUgokQWRqVCFGTonj9BypaYj3r08mVkIcG1FoxmDt/7/nsMJjPu3r1H7/yYydykkDOYWXPi
      WKZWqzIdD9HzJRLPIhQ1NAIsN6LeKDEcjCnlCyxdG12R6M5sfu/HP2I0W3KrVMS2LUbTJYv+
      MZGko8sxluNTyJepVHRML2Hav6BSq7EMVXaLAhdn58xNlygOqUQhJxd9tlp1RsM+mVITZz6h
      0tpCjU3CRMKQPM6GIbgLzMWERMmRkUJMJ0LPZYjCgF6vx9aNd6nktTdyEX8Zz+QA9qTL1Ibp
      dIQfQSWvImklxMCh1NzEMReUa02KhQI5TcYPICsmzB2PVqPKZDQi8B3cUKTVbOB7LivTplkv
      s1yu2Nnbx/c95qMRRkHn9LwLQL21Rb2oI2kGcWARxBJKEmN6IfVq6XKdjS0EZ8bjJ6fEokQU
      Ruzs7iKEDksnxHddbNenVa/Q6/aRZZmcYTCbTl/75Fyc91B0jd75BYVSlawqoWYNKgUdx7GZ
      Tyf0B0PiyGE0uaxFU4stho8/oLyxxXgyYdDvo+h5GlUDx5wxnbsM+gOKlRpCHALQ7XZRFYUE
      iMMAy7KYmx7NisFi4bG9s0Gt1iLwPfKlKrFnEwoqxCGyptMs5un0uoiKShQm7O3toGQ0Ws0G
      0tNKkUm/i4/MsN9Hz5cwdA1JzbBRL2BZDov5jPFwgOt7DEdzADKFCoPOBduNIqYbMhmNmE8n
      TGYrmvUy48EA048RBYFcvsLORpGDJ8esVivmixWankcmBkmlkFEI4oRxv0siKpBExHFMsuYc
      4ZlaINd10TIZPNclCX3sAMTIRc2VMOcjyvUWSRyRxDGCIBAHLlYAhazMZL6iUi4xmS6oVsos
      ZlNyxRIZRWAwmtOolUBUiKIIRYL+cEqxkCenZ3C9gExGYzYZImcLCKGDn8joCsxXDvV6A9ec
      s7ADWvUy3V6fWq2GomokoYcfS4hESELCdGmTU0WcUEAhAFWnlH9xLcNVHNcl8/R8/Gb1WhL5
      zBYWlUqJ6WxOuVAgkTWyqsRyuaSQzzMeDZAyBrqmoKoSnhczn44xSmXs5ZRMvooqgRCHTJYO
      G606ceDRHUxoNcqMZib1UgFBEoliiAOHR09OuHPvHSJnSSRlyKry5a+YCIPhhHq1iqzIRHHM
      fDqhWm8x6p4iGxWqpfxzn0UUII4jJtMllUqJ2WxGqVgCSSarKSyXS/K5LKYbIsU+SydAlyJ+
      9sEvee93/xmJNaNUb6EQ0u2P2Gy3GQ965IoVjp88YPfmOwzODyk3tsjnMqiKTLfbp9GoEiHy
      wUen/K//4eCF38Gr3AS/Ti1QWg2aWqtfPDjlT3/y0QuXv+0ASKtBU2uVyyh890Z9bftPc4DU
      Wq1WK/L5/BtJ63VygLQdIHWtpUWg1HotHsPP/+c3kpREArzas0BpAKTWK7Rhfv+NJPU6j9Sl
      RaAr2Ks5jx4fYLn+c8s+3/JsWRZJkjCdTi//vyLNJIk5Ozli+Umr8PNrEMcxoe/gBtELVkno
      d86YP211dcwFx6fnxMnltq7t8KKG5EH3nJPzLlfd+lnm863qcejx+PHjT/f58i6P6esqzQGu
      MJ0v2GjVOT09R5cjVKOCuxxRqLUv2wFGfRSjgh4s6NlZjk/HtMoalWKe/tRkq17gvNentbnL
      aNCl1d7DHJ1j1Lc5Pzmk0WgiCpDEAdOlR6WoYZo2R0cXfP/9eyDKPO4NkAWBUrVOYM1RciU2
      GyUmsxWKE1LK73N0csH+doNHDx/QHczYbpQJBIH25iaDXo9avclkOmFv/wbLlUsxJzMYTZlP
      R2xsbtDrdigUKyhqFiEOmE1nlIo6czuiZCj4kUTTEJDzNfqdMyxdIxQz6JqMJAiY5oKl6SDK
      ClutOp3+iFq1zHQ8xijleHS/x3vvbWO6MTd2t3lDTz+/EWkAXCGJAkbjOaocszI93HmHWjGD
      4zjY1hJRgK1qCYEcv/r//oG9/W2cMGK1WjLo9BElgb26wT8+PiFrKNiOTRDFVDQVSZJYLWZE
      iCynA7RsiUnic/vWTQIf5MhmaolUG208e4E7H9Ebz2huaoR+Ftc2sYOEKEmQJBlF1ZDVDNtb
      2+TkhGKlwOHBQyLVQJ1PyebLqLKItZzQH0O7auFHAp2Lczb39hmenIEWQWAhCMLlZ+jNCTdr
      3L15i9gc0zk75vbNfeaDDhNzQrteJkREkSR0RUMtZDk+PEbJqAznJrdvbdPrTNne2kIWRHzP
      ISFBeK3CytuRBsAVisUi3eGUWqMJ0ZBSrkDirdAyGXJZFd9aMpouaFRL7N/cpV0v0VtFKKFJ
      s9WinFP58OEjtt79XcxRl5yu0yzv8+TwMeVai3ImYebLVAo6MzOgXisiCiIZTSBS8pSzKqKs
      EWkCYlJEUhQ0I4ekaJTKJURFRxBEGrUiR+cD9m/coHt2gpavoGpZ9m/dpdcfUKpU0bI6ALs3
      75JRBSwvIhiPadSrHD34GM1okI0txJxBMZfFsRY0NzLUGlVEQQAtx3e/8x6lnIa3nLBhlMgr
      IY5SoaBBHMZIqkzxpk53OKZWryKJGuVyjfGwSyIVUFT1a3TpX0rbAd4i37EYLyw2Wo2v3Rf/
      iTgK6PWHNFobKNKr3RIu5nMKxeKX6tG1Ovkp+V/+8Wtv/2WlOcBbpGZzbGZf7zmkr4ooKbTb
      7dfatlgqffkDECSQ9S+fDrxGJWiaA6TWLG0JTqXWKC0CpdYqmoxx/uNfPPe+WKuj/cE/f+v7
      TwMgtVbJYoH3l//vc+/Lt25/JQGQFoGuEEchjuMQRl/ckhlF0ZWtvp+lE+F6PmHg43oecRzh
      OA5RFJMkCZ7rEv+WnlFRFH2tW1S/qdIc4Aqdi1PCRKZWKTGZzpBlhWy+SGBOETMF5pMR25sN
      hnObailPTpOxgoRhf0B7o8505dCsV3n44GOMUp3VZEAmKxO4AV6myu2dFvPBOU4s0Ww2GPX7
      bGxtMe53yRoFHj24z71338P3I0QpwVxMEWWdZq2MpGVYDLscXIz43ru3GU+XtGol+sMxzY0N
      +p0Om9u7aMrLj6tzHaU5wFWSGMdxCcwJ5ErM5xbL6RjTDVhMhgCcdXro0ZLz3pBHRxecnTzB
      MqccHxziJAoCCZKaZWdrgySO8EMBI6fiOi5xAqYbcmNvj2W/S6XV5OjJAX6ksFwsqDfqyN4M
      O1FYTGcIgkw5J/Dw4wMsx2HpeDSaLXqdHsUMHDw+IlfI0+10ME0b1w/WfAK//tIAuEImk718
      bkXWKOSyVCpFjFyOxXSIoGQxjByFXIbBKuLWzR0s06TdqCOpOWr1KvXqZSORrggcHJ1SaWzw
      zrvvUS6XuHf3DkZWZaNR4cHDhyiGwfnxCeVag2Ixj2HkEJMYN1Gol4vkDIOMKtEZLNnaaXJx
      eoqmF/DMxeUoHKMljWadnK5jGAaaIhGEL3iYLvWptB3gNSyXSwqFwjPvWYspgZillM+u6ai+
      mWa//hXCn/2b596Xb93G+Ff/+pXSSvsEf0V+8+IHyBUraziS1JeV5gCptVqOx+S8L+gboWpI
      9VfrLJ/mAKlvHEHTkGqvN3Lfm5AGQGqtnCCkP5594bLbtfJb338aAKm1mtoO//6484XL/ut/
      9uO3vv+0GjR1raUBcIXOxTlBFBNHIa7nXT76EEcE4eXflxo2PfW1lhaBruD7PkkCDz78gJPu
      gv3be+RkCTuIMVSJ2vY+2fQMfqOlOcAVRCKeHBwi63lu3bnFXrNEb+Fxe6dBZ2qRkb+uHR1T
      Lyv9/brC7o07z733T37QYDkdcvPG3te2n2/q5aUB8BoKlca6DyH1hqQBkFqrYlbjP7m5s7b9
      p49CpNYq7RSfutbCOMIKXjRO6tuXBkBqrZ7MevwPf/N/rG3/aQCkrrU0AK4wHXUYjJfMJ33O
      u89OaD2ZTr9wcu7BcAgkDHsXPHpy/Nzy1WoFXA6T/vjBR3T6l+kOOmfcf3Af2/UxLYvJFdO7
      DgfDL/GpUp+X1gJdwfYibHeEIoUEbszPO8fkq3Uia4kTi1RLBpNBh0TNgztn7opkNZFmvc5s
      aXP37h1Ojx6zWDnkDB0/lllNumzu3qHdqjBfLNHyNZIkZm563Lu1z4cffcR0ZdOsVxh0zzCK
      Nfr9Lo1GjcnM5XvffZfFfIFtzbFMG90osPJCclmNVinLaLpi5sS0iipnvSn1qoFl2ZRLFZa2
      hy4nDCZz3v/Bj8go6e9fegZ+C1mIiQWFxLdZuTF6RkQQs2Q1Bd/38fyISqnAdLZgPvvsVzsK
      PKbzBa4fUshIyNkCy9mMcrVGqZgncpcoao6Dw2NAIAxcxuMRxWqTeq1KJpvjxt4m4/4QSdOR
      JYH2zj6fDPIgSCp77TqoOULrcnz+yXiMF4Rs7+4znU5x5gsCSWWn3WQxN6nWa8ymU4x8/ms1
      Rv86pdWgVwiCAIGYGIkkjnHtFXLGIPIsBCWLKotIQsLS9pGSAFHVUWURTdMIfZfp0qacz7Ky
      A4yszMoJKOWzLE2XUjHPbDJG1Q0MPUvou8yWNrVqmcV8ipbNo6mXE2TPp1OK5RKiKCNLIp7n
      IQgCsijghxEr06ZU0FmsbPJGDklR8e0VXgi6nkGWRJIE5vMFxUKO+dP9fJlRnd+Un5084Cen
      v+C//8P/6kunlU6UnfrGWXcApEWg1Frl1Szfqe+ubf9pDpBaq7QlOJVaozQAUmtlLh+znH+0
      tv2n7QCptYpjj+i3jIz9NqU5wBWs5ZSVE3zaeguX5cwkAWs54/79+3QHz7YQh56NGzwdxjxJ
      vrC1GMB3LZ4cHhH+xojncRSu9YK4btIc4Aqz5ZKVNUUSYxxzztyOmPVP2b79HTYbVVRpzEaz
      xuP7/0ipvsF4OKS9UQMp4OF5j0ajjkRE9/wEUcuTUxL6M4sffPddjo5PuXn7NuZsSHcwplGr
      MZwt0BOTYVzmd9/dW/fHvxbSHOBKIhVDZWp6nByf4nkelVqLVv3ZcUBFNUvkWgSrARf9EbZt
      U97cx3dM5osFaraAIiTYXkhG/Wy8flEQGU7m3NjbYDSaIUQ+ajZPe3Pzq/6g11aaA1yhXKqQ
      1XX8RERXayzdmFohw3A8o1WvUG9edo1sNlsQeTi1LUqVGlomQyzKoFSI4hhJlICE6aDDk+6I
      d+7eZW+nzeHRMZsbLc46I7Z3N+n1h1Sam3T7Ayhtr/fDXxNpO8BXyDaXBIlIMW+s+1C+Njrn
      f4OeUylXfudLp5UOjvs1pxvPD6t+3QmijCgo69t/mgOk1iltCU6l1igtAqXWyh7PufiLn336
      Wq+V2P3DH35l+08DILVWvunQ+Yf7n74u7W9+pQGQFoGukiSslsvPJspO4hdOmn3ZQpw88/q3
      J59grpYEL0gz9falOcAVeudHeIKG2elizsbcvLnNScfixo1tInuOmC0ixy6xrLMc9Ni4fYtg
      MWUwsxATjzgW2d7Z4vz0jI2tbaIgBCIi/3KbYDXGjhXqgsh5v0+zvcWwe4GR0zk4ueDu7RtY
      bshOu7XuU/GtleYAV7DdkK12G0UUKdeb1MsFStUGy1mPx49P6PX7XHQGlAq5T7dZLpf0jo5x
      ENneLPOzv/qA2tY2ZydPGA6n9Ps9Ot0hpUKOpe2xs72JPR5Qarc5Pz7EslyQNVobLVxzied5
      azwD335pAFxhc6PB44cP0PMlDE1mvPQoFXLkjQqNZplyuUxrYwNREMgZGY4ePyGIEwqFIgU9
      w+Fxl3ffv8vF0SGV+iaePSMRFZqtFqIgsNNu8fDBQwTdoHd0RLnWQFVlEEQ8a4WkZl+qKJV6
      fWk7QGqtzj98zKM//4tPX5f2N/mdf/lHr5VW2g6QSr2iNAdIrdV8OkNNPvsdFmWJTPH1npV6
      7WFRkiTBNM3X2mkq9WXYto2u628krSiKkCTpt6/4OWkOkFqrTn/M2fj54dHf3a9TzGmvlFb6
      NGjqG2cws/hf/v3zneL/m//yn7xyALyO9Cb4Gkji6IUt2Ned9Cd/8id/8tnLhPu/+DvEQguF
      gIOjE0oFA9Oy8T0PiQjTjwlcm0QUsVYmcRgQxTHHx6cYRg7fD4jCADcI6V6cI6kqjuUgKTJx
      FBEGHkGYoMgSg/NDujOXYi6DaVkoqspqPmIws5Ejm4cHJ4iyiqoqxFFE4Ll4QQxxiOW4qIrE
      cmmiKDKe59E9O0PQMgi+ycePDkGUkYiIEUmiANfzUWQZz1riRiKeYyLJCquViarKLJYrNE37
      3JiZMX/713/DxtY2nm0RRAlJHGC7PqIgQBITJwmL5YpMtOR4Dt6ki2wUuTg7RVUkwlhASCI8
      38a2IwLfQhAlTk9PyWRzXJyfkzey2G6AqiqcHR3QH83IF/LYtoMsCZimRRD4CKKMY5kkgkTo
      OwQRJFGA5bgossjKsj9dP/QsOoMpxUKB7tkxmlHkw5//HYXGJrHv4gYhQhJj2S6SePl5ozhm
      uVyi4HMyNEnsGT4CH374CDF2EZUMruuhKjLLxQJJVrDNFbKiMRt0OD7voKhZZFkijiI81yGI
      E5IwwHYDhoMues7AXJlomoogCPTGC3726Pnh3n//u1vUiq92bxDHMaL4ar/pzxSBksjHQ2Nw
      fsKEEC+MOT0+xF5Y6PU8YiQRZnSc0YqsoUAUMZ+N2Nq/xWI+x8wmdBydPAsenY3ZqOap1GuM
      BiNGkzECEcNOh0DJ8Ye//2NGM5MwsTkNVoiSQL/TRzU0wlhDzeQRiQjdFUemg+CZhIFHEguI
      qogCnIeQz2t0zi4IFRXRXpJvtpC1LLKQEHgWf/vrX6KX62h4NGpVxoJE4JgEQhZFVRB6F5x1
      epcNVV7A93/wXVTp8oKwxh20bJaL0ZJl/xAlY5AELokgo8gK1QxYmSJn939Je/sGQS5Lo1Xl
      8PgQSTE4PXzM0Iyp5kQ2d9vMxgnz8SFJpkRGhieHT9AUhQ9/9XPG85B/8Z/+c9ww5u6duzx5
      /BBZTDgzYxQDXFcmpyu4rodIQpxAgoBCBLFAIPgMB1M26hto+Qxx6GMHlzeElh/T8JegZOj2
      hniLAYKSRSZAAKJYY2Mjz8wM6R0/otLaRsiWKFYMPnp0Qi6XYeGECJMev7p/yO39PRQp4Mnp
      BcvpiI3d2+zWc8TDGZE94cjMI1gTfN8BQUaWEpIwIdE0/MNHnHe63Pre77FVW3/PuGfCZTbo
      U93cRhSAOMLzQzK5PI1qlUazjixKyLJEo9VCz6jIskKtVmGxssiqEiES21ttXM+nkM9RKRVY
      WQ6yqiEnLtlClWK5wu7ONnHgIms6haxMIOm0GjUUWcJcrRBFkTgKkRUV2/UwJ30sNyDwHWJR
      gijA8UMKRpbl0iSj59jealMpF7BMhziKkGUF23GpVCtstzeotzZp7+zS6/Ro1ctksxkca4Wi
      ZWlsbNHeaKAkLrb/WVFhvPLY2t4mNKdUaw3yRo5iuUK5XEARY067Q8zVinqzQRwlKJKIqBjM
      Bz022g38MCaXzVCuNSkZOUQ8EtlAUyTi0EeUFBRFJl8osXdjFwkBTYJHj58gyTKm7ZPLGTSb
      Deq1OqoiYz89ZjEJSQSRfLFMrVxCzxm0t3cpFfK0Wg0MI08cuMQJiCRMpgta7W0S36ZcrVEs
      GBiFErVqCVUVOTm5wLVN8tU6YgKKLCJlCviOyVazgh8mWJZDpVxEkiWWyyWyqlGtN2jWykRR
      jKLKWG7Ion+OG8T4ro0gKcSBjx9DRlHIZnUamzsUtATbcTCt9c0PBt+wWqDxZEytWvv073UT
      hz4z06VaerWuleZ8ApkCRubNdD20lzNOL7ps3bhD/oo0X+b7+sWDU/70J198E3xvp/pKx/Wt
      rwX65CRex4sfQJRVqiX1lbczSq92If02eqHMO++Wf+t634Tv6xuVA6S+fTr9MScj57n3v7Nf
      p2hkXimtdIKM1DfOujvFf6OKQKlvocgHq/tGkhKiCF7xUYg0AFLrNb8Pv/zjN5LUq136l9KW
      4NS1luYAV5gMu4ymSwrlOvmMhJo1CDwLWdNxbYuMphAj467mGJUKx8dnlAsGxVIB148o5DLM
      5ksKxRLWakG+WCJ0TA5PL8gVymw0ntbOJDGuH5HVFDzXZjpbUSkbJHKW0HOQJQlZyxD5DrKq
      oykijx/eJ1Oos9Nu0Ds/ZW66bLQ3WC4ssqqMnNEo5vOslkuMfB7P89AyWU4OHuInIjdu3sSx
      LArFAqvFHC2bQxJFIGE6mVIsGgSxQEZTCIMQVQj4x8enVCo1aqUcgqyhSOJlQ1oU4PkRSZKQ
      N3SWpo2R07FNE1WTGY1WNFtlHDekkDe+VlO0pgFwBdu2CMMA23EYnp3jiQZisGD71nssZmMi
      z2Fr7yalosovf/ExWrnEyjQJ3RW/fHDKO7d3UBKH086Q+WzA1t5dEnfJ3Xfe4cnjR5ycrBAE
      gdVsyGQRstkuU601GQ7H6JLLMpBYuTGRZ5HTVLqdC/RKix9/7y7T8ZiyWiBKYlZ2yL3buzw8
      OMZyYyq6gqDI9M5P6I+mNOotIkHkO+/cYbW8bBHuHB1w2utdNvAVC3idHmK2iBDYADirCU/O
      J2y2SjQ2dlFkD9Px0V2Xs+Meo1XEZqOMKAj4noNtuWj5HGLg0R+OqGxsUymouOOE5dwncGY4
      QoZ3v2bjoqZFoCvIkowkKRA7REKWrCZTq1RYLJYoioIogOP6iFqZIHbZL6vYiYLleFQLeSRZ
      YjFfoGV0qtUGjUqRzVqRjz56QIRCRVeI5Cz5Qond/R0KhTLNeg1NTogQURSVRqNBrVZDz2Yp
      V6tsbW4QhT5aLs+o30cQRCR87j88oN5qIxMiaTrNRo1sVqdWb9GoldnaaiOJAqVqg2oxh6go
      1BqbNKslzOWCMJGxZkMsN0BRFBwvoJjLoRcr1MoFEEX29m9x99YuQZCg6xqlnEwoZckXS9Sq
      NaqVMnrOoNXeoVTI02w10TMGQuxhlCtYqwXx16zSMa0GfYuWsxEX3RE37r5DRv4a5fufE3g2
      R8enVFvb1Eqv9uvcPT+l2tpCU17n9vPS6uSn5N/QTfDrSAMgtVZpAKSutdX4lLz9ZmaJvJyM
      5NVK9WkApNYqbQlOXWtJEBCNRy9cLhaLCMqrPwD4stIASK1VdH7G6s/+zQuXG//qXyPfuv3W
      9p9Wg6autTQHuMJk0GU0W7G5vUsh9/yjuf1+n2arxdUVnAmdsxPsUERNPGwvoFou0Js63Njf
      RQwtTjtDdvZuYGSfzeoXiwXFYhEAyzJxHIdarf5ZylHAyvEpGDlSrycNgCvYjkWcQLQa8LMn
      K2LXo1yr4SxHCGqejCLiWAuWS5tMvkQjrzCyfPoXp7QbG8xjhR+8s4/phty9c5sHH35IPq8y
      GY1wEwNBEOj0Rrxz7x7LcY8Pj6YYhsFsNCFXMOhenHP35jZ9U6aYhSRw6Hc7aEqWxk6b3skh
      vZnDbquKZTvkshor16dULNC5GPD+D39A7g31Avu2SotAVxAEiVKphCTEtPduUilX0CSQFZWn
      /eYJwghdFajXK3x8MkKNXCq1FhlZYP/mDQQEQs+hPxwjiCKFapuNWo79W3cwsipZVeS822Wx
      NDHyBr7n0WzvkNFUGvUqiiSyu79PHIZIsoKe1QhDn36vh6gZVEoFwjAkl1UJgpj9G3skgkQ+
      KzJdWus9gd8AaQ5whdZmm5Vpo+klcopKkrucvPr0xGdrZx9JBIEExwsQQoft9gY77QbL5Ypc
      LocoCQgC3Lt3D8sLqN25i6zIxPoNkqcBtLV3C3O1JNtq4VgmOcMgSRKSpETUaIAooagCxRs3
      SOIQ148xdI2VZaNndTzXQctoOK6PntUQBBF9I4tdLGAYb6Z68dssDYAryIpGuVhYrAkAABIK
      SURBVPy50cnEy9N18zdqJQxZAXRyl8X1T8vtn5AUlcLnqvJE6bNiiSAI5AuX6+cLz3Z2/3yd
      tijLgMwnyRSe1p3LxuXjC3njszRFUaRQSOckfhlpAKTWSsgXUH/vn754+VsO5LQlOLVW624J
      Tm+CU9daWgRKrVV/ZfK/3z985r0ftVv8eOurmRkzDYDUWkVxguUHz7wXRNFXtv+0CHSF5XJJ
      FKe3SN9maQ5whcl4REY3mI/7DCYrSqU8uiIycyOqGQm5WEdX0t+Qb7L023sJpyfHREFAEroc
      DeaU1ZiD3pzs17SbY+rlpTnAFerVMseHR9y8e4/x1GSjvYGSWaFlRXKZ8HMTaaS+qdIAuIJR
      rHC3WAGg+PRvo14h8Dxu3yxetWnqGyINgNegaG9/8rbrQpZEKtlnHzXPKl/dZZm2BKfWKm0J
      TqXWKA2A1Fp1VhP+p7//PzlbvLhj/NuUBkBqrVa+w992HrHw1tN5Jw2AK/iujRdEhL6L7frP
      LgsCXO/5GQ49/3K9KPAYjqdXpJ6wmE1w/RCA0HcZjad8ckPmB8ELt/Q9/4XLUq8mrQW6wnDY
      w/ZlNMnF9hSMTEKu3MRdjunNLHbbTTxrxcKJUPGJZB1zOePurVs8evSYVnuHxXTEaOHQKOuM
      Fy6z4QXNrZu0mxXOzs9RMgvu3d7n0eMD6pUijx4MGU5n1GsVFFFkc2uLbqdDa6PJdDJno73N
      6ckp1WqB6WxFs1ljMJ5TqZQwMgq267Nc2egZmZUTUswpTGcrNjdbdLsD6rUS45nJ/t4OYtqM
      keYAVxIVBEJiBERnzFFvyWTSwfEUqkWD6XTKcDJja6PBarXi9PT0c5uqVMpFBuMpZcmhO3Pw
      PZ9cqcrWRp04dFktTLwoISFBVjLU6nUESWJjc5OMqrLRyPPxrx9guS6DfodA0PlkHNrFyqRR
      0uhPTMLAp9Mf4lkLBr0+ZArY5oruySmjpUm1lOXg8Slbe7ucHh1irma4wVf3wNnXWRoAVzBy
      BvWygVFsUt7cpVlUKRTqJNGCMBYoFUuUDJ3z7hBBFCiXSpSKRRCgktd5+OSYUl5naIs08hpJ
      EtMqFzjvjRBEmXKljCwmCIJIydB4+OSY7Z1dEt8mkyugZnLs7m+jSDKlco165bK6sFgqUiyW
      0PQ8+ZwGSUKtYHDWm1CqVKgWdARBoFguUyqWyGQNtrYanBydUG+2yOh5VCn96iFtB0it2c9O
      HvA//uL/4r/7g/+C7zb2vlRaaTtAKvWK0hwgtVazxRwpo6IrGrL4+hNtQDo6dOobSBYl8pq+
      tv2nRaDUtZYGQOpaSwMgda2l9wBX6Jwe4GAgRDZbG03sAEadU2obO2hiyM8/+Eduv/sepZxC
      IsisTJuKIeOJOTxrSS5fxLFMFBkiFHRVZLq0aTVqnB0fYPsxe/s3WMwX1KtFhuMZUmgyj3Lc
      3mmu++NfC2kAXCGRNHBM3Djmw1//CiuSqRVyZLMaWS1Pe3OTjWaND3729+xutzl68DGr9g5G
      vsTIFtCXF0RRSOB5qGoG4hAnDGk1ajhBzL27dzk6eISR17n/YQdPlGiXVKQ13hReN2kR6AqK
      orCzvcliYVEqlWm3NynmdeYLEwD1ac+w9tY2vudRrpQQRBlZkanXKugZDU3TqFRr5I0cspgw
      na8AyGdUHj56hJrJMprMKTeaqImPoOYx55O1febrJm0H+AoNuufM7ZC7t/bXfShfG+vuEZYW
      gb5Czc1t0pL910taBEpda2kApK61tAiUWqvID1h1x8+8J6kKeu2rGXcpDYDUWq26Yx79+V88
      815pf5Pf+Zd/9JXsPy0Cpa61NACuYC2m3L9/n9OLPrP5HEKT4dT+wnWH3R7B52qUh6PfPsyH
      Z875+P4D5qbzzPtxFLJYrr7cwadeSloEukJ/MOLuvXd48uQxp4cPeOfeDZ6czJlV84zOniAV
      W+i4bN18F9s0KQKj7gn/8Ksn3L67w3TUQxQyuHGAYeQQYoU4trHmc9o332E6HPDOO/ewJ31+
      fXKEoWtcnPa4c2ePx8dn1Is5yJR49/beuk/Ft1aaA1whp6scHR8TRAKNeh1Fltnc2ScjJyiZ
      PO1Wk1K1SbVkQBJycd5hMFlQVhUCUURVFYIgQMtkiKKY2aTPwrQpPt2mlMvw5OiE+cJC1TTi
      WKRS1rEDgYKhU63VmU7WM2DUdZHmAFdotfcoex6yqkEcEScJBUkGDDY3t0EUkcTL35CdW7dx
      vQB1s0l0J0GWRYIgQtNUfM9D0TSC9iaSpCA+HY+ktrlDwfOQVZW676NoGr63iapphBt1REmk
      VG2s8Qx8+6UBcBVBQMs8HblYlPmsw56AqKrPrCpKMrp+eTo/aY2XpMt/PklD054dBVn4XPrS
      07+Zp38/ec4o/YLervT8ptZKK+TY+YP3n3kvW/3q5l4QkkvY9hfXbqRSb5Nt2+j6m3n8O45j
      RPHVbms/zQE+yXpTqa9SEARv7NqLoghJerWRJWS4LIu+6oap1Jtw0l/yb//s799QagnwagOe
      pvcAqbWKk+TTEbLX4ZkCU5IknBweMJwsXisxyzJx3eeHDI9DnyePHzGa/ma6MZb52b3HbDYD
      wLPm9Ibz59JZLhfEgcv9+/fpDsbPLf9tPkn/VZyenPBSXYZ8i6npM5/NSEie21eShFjW03OT
      xJ+29P7meuZ8wuODQ8L4lQ/1GXEU4j2dgX05HWG6AeenJ4Qv81lCj+nSxlrN8cOQi4su5nJO
      EL14Y98xefzoEQvz+e//E4vF/Gs38fgzOcCqd4Ja3aaWF7n/0UfoxQrecoLthyiZHOWczGg8
      R8so5I08+Vqb1WzIbDLEKDVQpZjDgwNu3b6FlqvguzYbrQaeNWfpxmzlMjx6cB8pm0eOHFSj
      CCHMxn18QSX0HMrlMv3BBCdKyCQmnfGCeqPJZDREkFVub1XRijWWszGhPcdLFKTQRtayLE2H
      9kadbm9AvVqmO5pRKpWRYwcfjcizKZfLL31yYm/FcDCi2GzTffIRsl5GjhzsUKBSKJBXwdMM
      xp1TmtUSo7jEtmrRmSi4sxn2ao4TSUihRaZYhCjLsHeCnC0x6p2TK9UQ4hDfWTFeeLzzzi0u
      +kPu3LnLqH/GeLainC8wWU5JEplqvcZsNEAvVEg8k1DU0AgwnYhmq8x4NKOQ05lZJjlV4mJi
      8Xs//hH98YxbN/IcTyco+SqLwQmxpKPLEaYdUCqWKZWyWF7MfNSnXCkz9WR2CgmdiwWjmYnn
      OZQDn95gyka9TG/QI1/ZwFlOKTc2wZkSSxo50aUzCcFdslpMQMmRkUJWTkQ2oxCFIcPBgI29
      OxR15Q1fzq/umRxAUhU81yWwZsj5Bq69JJMrohsGeV0lTETquTwbey2WszmW47BYmpRrTcQk
      wLZtGq02GxubdI/uI2cvu7op2SJ39ts8vP8RopYj8lZ4gUCjWsRaLhhN51ycdy4PIokZjUbM
      xyOWts/uTpvxqE91Y+fTEY2756c0Nzc5OT4njCIEOUOrUUMm4LzTY3Nnl8V4QKmxBbHDeDTn
      /OL8lU9O5/wCzchwcdYhVyijygKSlqVoZDBNk9ViRn80xneW9EdLALKVNsOH/0Ch2WY8GXN+
      3gFZo1HJYS6mTKYWF50O5XoLIg+Ak5MTkjAkBuIoIooiZkuHdj3PaGzS3m5SrjTwHJtCpU5o
      LwkElSTyEWSNel7n+OyUMI5xnZDd3W0kRaG9uYkkQILAbNDFFxQGvR4ZPU9Wk0FSaVZzzBcm
      lrlkOBxi2ha9/uXEHtlild75GVuNIqYXMZuMGQy69Edztls1uhfnzC2PMAwpVlu0qzqPnxyx
      Mm1m8wVaLo8UhySiQjGj4MUJ/YtT/DghDNZX7Pm8Z/oEJ0nCoHuOkqvgmxNy5QayAHESI4oC
      QgJCnCBlFQIvYtAfUK3XUBSZJIlJ4pjIdwmQuTi74N07u0ysmHopy+npGY3NbZzFGClbRI5d
      3Fgip6ksZmMUvUhWU8jpGrYboslguz66niUII0aDPsVKjYKuYgcJuYzGdNTHSxSKho6mipyd
      dWlvt+ledNjc3CBEgihgPhkh6wVymkLOMF765JimSS5nYFsmwtPgE57eZ8WBx2iypN6oMp5M
      qZbLoGQxMhLj8YRqtUq/c46YuRzCPKsp2HbIZNwnX65iLyZki3VUSUCIfUYLh93tTQLX4rw3
      ZrNZZTBe0KqVERWJKBKIfIsHjw+5+853CO05kZQll1GRSEjEhG5vTKtRR9VUwihkPBzSau8w
      vDhGNsrUy6XnPoskQhhGDMZT6rUqk8mESrmCoKgYWY3JZEK5aDC3fOTYY2b6FLMiH3zwS+7+
      zj8lWo6obWyjEHB20Wd7d5dB5xyjVOXkyQN2br3L6OKQQq1NqaCjKTKnZx02N5skiPz84zP+
      t//45M1e1a/grXSKT5KYKEqQ5bRm6U1KkoQkSV65rvtyOz59BONLH0cc44chqqIgCC9O85N6
      +avq53/x4JQ//clHb+S4Xscz9wBJktDvXlCqtchqz5fPQt8hFjVU+eovQBBEXrFzfuolCIJw
      5QV39XZv8DhEEe03HgX5Ip9c9FcFbEaV2Wu9mZbfJEle+fw8kwMsukf0I4N2xWAy6JIr13FX
      UyIxy3arxGgwQq806J2dUm/UGY0mNBsVhuMFN2/tp4+Wpl7ZuodFeeaaLWzsoUdLLk4fcdJb
      sJjPWTkB1WzMrz46IAotzo8uaOzfondxQhg4TOcWceSTTjmV+iZ6Jlw8a4XlhlSae4hCF8PI
      oyhFcsUCxblLuZTHqBl0jw6oNzaYzFfkcxkmrpPOOJh6Pcsj+PDP3khSUpLwqmW9dGS41Fqt
      Tn5K/pd/vLb9p8X2K3j2iuOTU7wvKN99/ulZ13VJkoTVanX5/xVpXlY1d7C9F0+EDZcTZ3tX
      NAdPRwNM53LCbN+16fSGn7ZY+573wmOYjgb0BuMrj9F1nm/NTaKA09MTTMe78ri/adK6miuM
      JlNq1RJPDo8wVMgUarjLMblKCyKfxWSImC2ieTOWeoHHBz02Klmq5QLDhcNWrcBZt8tGe49B
      74LN7RuYw1Mw6hwdPKa9uYkgQBIHTFce1WKW5WLJ4dEF779/D0FSOOwNkCWRYqVOYM1QcmWa
      1Ty9wQhptuLenZscPDlks1nh0cEjer0JW40yoSSx1W7T73RoNFtMZ1PaWzuMxjPyusxoLDGf
      jmhvtelenFMoVVHUDEIcMh6NKZd0lh6UDRXHT2jkBDwhy/nJMUUjQyzr6JqMJAhY1pKl6SKI
      ElsbdS56Ixr1MuPhiHwpx4OPu3z3u3ss7YD9na03WiP1ZaUBcIUk8jm/6JPNKJimw3hxTil3
      2VpuruZIAtzcKkGi89c//Tnt3S2COMI0V/TOe5BsslvT+fXDQ3RDYbFc4vkRW+UCi7HEdDoh
      QWA1HyEpeXzP4vbtW3geyKHF1BQpVFt49hxz0mcwmVNrSlQLGvZqgWzIREmCLGsUikVGC5d2
      e4usFFOsFDh6+DGxmkMcDpH0Aoos4phzRjOBdsXDixKOj4/YvnGD4fEZSaaAEFzmbKZp0e/N
      cBsl7ty8DfaEQe+CG7vbmLMRE3NCq1oiRkASBRQENCPD4cEhkirRHQnc3Ntk0Jux1d4iiUKC
      wCchQXjFJzbfpjQArpA3CljuDN3IE7ge5UIBMXQQRYlKuYxnLRlO5jRrZTa3N9huFOksIqTI
      pFKpUNRVHhw8YePm97HGPYycTqu8w+OHDylU6lSzMPFl8rrK0omoVorIooQiR4RSgUJBRVIz
      6EoRISmAIJA1DERJoVguk4gKgiBSLuo8Prxg/+ZNOifHqIUqqpZlZ/8G/cGIUrmCpusIwNbe
      LTQFHC/Cnc5o1KucPXkMUpGMv0RQc5TyOo61oFQp06jXkSWRSM3y3rvvUslnOFpNqZQrlHSR
      JQUKGiS5CElTyO2oDCYzKtXK08CsMOp3QCzxqo8qfxXSm+C3yDEX9Carr122/3lR6HN6ekF7
      ZxdNebWW+/FoRKVWQ/wSH27dN8FpDvAWZY0iN4yvrn/r65BklRs3b7zWtrV6/Q0fzVcvzQFS
      a7VaLsjn3kyXyDCKkF+nS2QqtTaCCJL2ZtJKQpDSGWJS3yDxfIb793/zZtKKE8LfeCRBvn0X
      eXfvhdukAZBaq3g6xf2/f/LW0s/85390ZQD8/xQs7ouVoZJpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Labour Costs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Wage Change by Industry(%)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uni Courses' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Uni Enrolment' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAACTpAAAk6QFQJOf4
      AAAZlUlEQVR4nO3de1SUd57n8XddrKKQW1Hc5CYKFgqixjtGxSga4i1Jn47bSe/pk/RMZ2d6
      Mz09vb2zZ3d7ZzOZSbLpTk4nPTPJzqRnujPp01lN2htKQPCCGBAVFFGRqwKCIPebBdRt/ygb
      RSOoVBXE5/s6J+fkeXzqV18e+FQ9Vc/zfX4qp9PpRAiFUk92AUJMJgmAB50pyOG//PgveO0v
      f8LR4vKHfHQ3P/nxGw/9nJaOK/zq1ztHrSvNz+RQkev5WypLyczM/5pH9vOz//n2Qz/f3Q79
      4RPySysZ7qzn488yXSuHO/nZ37434bE9QfP666+/PtlFPI4aLxby/u/yeP2NN9j2dBpqVBiD
      AqgsK2bvgRz8Q6IwBfqRk32Q61eqOVZcRuK8JLTOYb7ct5tTZReov9bD5ow0ai+WsHv/lxiM
      EYQa/cnJyUbvtFByuZFZsZGjnvfI/i9IXruViCDDyLpLJfm0WANZaI6lvf4S5yo7CJjWR3Vj
      K4cPZYOvkYiQMKy2AaKCfSk4W82smBnUXjxD64CaadZudu36nI5BFbNiZlCcn43aEEh23jHi
      o0L4wxe7OHuhipi4eHQqO8bwmRQc/D378grp6upn4dLF2AcHSUiYzY1rtez6fDeDKgMxM0Jp
      qC7ni937aeq8SWL8TG//muQdwFNOnijg29/9Ppr+Fj759DPqmlrobrzErz7ZT0pyIr946y2G
      nbDr3z+mz+lLV91pjp2pYu8n/8iFlmESZkbhBAZu1PLuP+8kZf5cPnj7TQbskPnFp3y27wix
      0TPuelYnZfWdLIgLHre+6vPFHDxcjNkcy0f/9GsAcnKyMQQa2btrJ05g765dTDcG8OYbf0es
      OZkTe35DSe0NivOz+cd//oSo2DgyP/uYppt64mYY6e6zUH2+mCvNXSTMSSA4NJLFT8xHjY2c
      7MNgG+CNv3sXc3IKe37zAbU3Bnjn7beJS0zCaR9y++/gQUgAPMTHR0//QD8+/kYSo/w4/FUJ
      tVUVoFZx7vxFwo0+dFsgMCKOzZueImVeAg67nQvl9Xz/B/+RFalL0QMN1Zexq9ScK7tAeKgf
      nX020Pry47/6EQkzo0Y9Z8+1CwREz7/nl6rVanE6HADY7Q5Qu7ZYl/4MqU+uZrrafntjjYHk
      GTqqr7fRMuRLrE8vDTcsVF4owzc4jO72NgBe+v6fsWpxMms2bqOj+hT/8tvf03vTMjLMnIQE
      jGEzWPpEykg9g+0N3LDYuVB2juCwcNrbOvnOjm/zh9/9Gzl5J7DcUYa3SAA8ZM2mzez+1w8o
      OHMBq9UKQFx8AoMDN1n4xGKWL12Nn++9j4udaeTz/7eXIzmHuQlEzUrAarnJgkWLWb4slcDp
      WnSG6eg0qnsem3foGBs2PnXP+jmJyRw5sJuTxaf4dOduYubPHbP2DevX8Otf/oJ5K9aBj4mw
      ADWzzEksX76c6PAQAKb7+QFwteEaTz/7AhmpyZRXXhkZQ6PzobG6glMlZfzx79rHFEWA2oo5
      aQHLly8nPCSQtp6bvPyDP0M/0Ej3oPe/kJxSnwF6e3vR6/WTXYZb+PibWL0ihbLSUnptPjy/
      7RmiYuMxRwVw5ux5jDNiMc+ORQ0kJCQAToyhkaxdu4YrFWfxCY0lcWYsyU8sITkuhFMl5wgI
      iyYxPg6N6o+PuZOdzEMFbH963T21+IdEMyfSn5JzF0halsYzacsAMEVEYfQ3AGoSEmbDrVqC
      I2bQ3NDIM1u34eejY+XyxZSWnOamXcfClGQMei1RcQkYtDBNq+JcaQnaoFi+tWUDWrUKU0QU
      IWGRRPg5uFTXysKFSahRk5A4j+WLkyk5fQq7LoCU5ERUQ72Ull1kzTPfJjku3JO/kq+lmkrn
      AXp7ewkICJjsMr6RWi4XkX15mJefSxtzu76+Pvz9/b1U1dSnnewChHvoTTP51tOhk13GN458
      BrjL3l2fkpmZSWZmFjdtExsrN/eQe4p6AMbQSAIM07z2fO60f+dvqWnqGln+Km8/heeqvnZb
      d+9TeQe4i3a6ka1bto4s93a0UFhcQtzchcydHU1tTSV9XR209dlJNsdQdv4iC5atJirUj9KT
      RTS397Bg6UpiI0wjY1gt/Zw48RUGUzQrFidz78dXZfMJCqH20nkSotJwWgfo7x9keFofYPf4
      PpV3gLv093RSWVlJZXUdDqeN4yfOsH5TBm0152gbsHL5wnnC4uYx2whnazvZuDGds2dOAk6i
      Zs1j8+anOXfm5Kgx8/PzWbwqjQhdH2ermifnB5vK1Hr0DDHsgNqLZcxZsPjWP3h+n8o7wFgs
      HdQ1tZDzZRbWwX5mdPejmx5IZKiR652+xBpnop2mR6dVM9zfy4mCo+j0eupbOkcN03ztKseP
      5ILThik6EIj8+udTsAVzoymvbqK7w8L6hOlcbOzxyj6VANzFLzCYxMRE14JzmKjQYDZmbMbS
      3Qp6H67c53EdzVeJSV5JUqQvu/Z9OerfQsIiSV2Xjo9qiK6bk3C25xsgOGYuZw7uQx8cN3I4
      4419OqXOAwwNDU2J8wAm061jTZWGyLBAThScoNviIC4uBo1aRXCw61IDna8/fj6uD56xCXNp
      rCiloa2XxEQzoSbXNsHBwcTGRHGq6Cvqr3cwa9YsfHST97ozPDw8Jfbx3YKDTTitg8xKnI9B
      pwaNjrjZ8R7fp3IeQGHkPMBo8iFYKNqU+gxgt9vp7e2d7DIeaxaLhSn0pj/pplQANBqNHAJ5
      mEqlkkOgO8ghkFA0CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0CYBQtAkHwDo4QNGJIxSeuThq
      fd3Fs+w95LoD2VB/J/v27Gb3nn109g8BVoqKTgPQfq2a8uqmiZYhxCOZ8JngjvZ25i1M4XRR
      zcg6m6WHy009aKwDABzPL2D95u0YsHAw7zjPbkmjs6MLq6WHgtJantueMdEy3KqyocMj48aE
      BeDr881sW3xcTTgAEdEzgf5R606cKCRt3SaO5GYDYFXp8NdrAX90Ktc9chprLvFpeys7XnwR
      FeBwOHA4HNhsE2zEdYNffHZy/I0ewU92LMMcM/5d2zzJbrdPiX08Vbj9WqBrlSV02wxcu1JD
      R3s7LW2dd/VrupZiEpKYFe5DTX0Li8zRqNVq1Go1Wu2UujzJrdQazaT/fJopUMNU4vYPwX6m
      aObNHn3PSqNBRU1TO+1NNah9jSPrk5atoa36NG29lruHEcIrJvxSUF5SyNVm1zFz1uECNm9Y
      Q1DIrTt8qVREhAYTnpZO8VcFNGJg/doVgIM55nhAxYZNGVTUNhEacPedzoTwvAkHIGXJKlKW
      fP2/JZrNAKjUWlauufOelRrM5ngA1NMMJM+VP34xOeQ8gFA0CYBQNAmAUDQJgFA0CYBQNAmA
      UDQJgFA0CYBQNAmAUDS3BMBhG6Kj6/Yd3fq6O6iqqqKn//Y1Pm0tTTS1tP3xEXR0uG537XRY
      aevodkcZQjy0CQfgWm0FucfyKD7taoixDXRSfO4SDoeDIwd3c71nkKqzhZRcrqf+cgmFZ6sA
      GyeLzgBwPC8Hm0quThSTY8IBiI6fx9PpafyxzUM7PZj0dWuIi4nEPzAQvVZD7fVuMtatYtW6
      DLqv1448tvp8Mf4x85kR7DfRMoR4JB556b1aWU7J+Qp8AkOZ7qPFcee9WJ2uGcsbay7R3BrE
      d7/nmrN2KjXEeIpjCjSjSEPMaB4JQFxiCnGJKXQ1XKT0Uj0qhx27EzTYsTtuN8Skpy3hYHYu
      z297WhpivEQaYkZzUz/Adepqb2DV2FiWGElh6UXUKhWDg0NseGY7DqONz3d9gVZlY9GTG0ce
      q/c3sTIpkuOnLpC2fP5ESxHiockMMV/jT9856JFxf/riSubGmsbf0INkhpjR5DyAUDQJgFA0
      CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0CYBQNAmAUDS3BKC1sY7KusaR5eb6arIOHuB02WWc
      uJpeio4f5ejxIqwOJ2Cnqsp1WfRQfyfVV5vdUYYQD80tDTFNPd3U11wDwDbQwdU2C5syNqPv
      b6DyWjcnj+URGp9CSnwoeceKADvVVbXgtHEoN5/oqIiJliHEI5nw1aDR8fOIpp/c5nLXgNNN
      rFpqwumw0d47SEqgL1cGITUqBAiBsmoAejrbOJR1kEWrN2CYppZ+AC+RfoDRPHJheF/HdY5+
      dYYVq58i1F/H6MtNby/Z7Q40GtebkPQDeIf0A4zm9j3htN3kWNF5tmzbhubW1DA6rPQN2TBg
      wYoOgMDgUDKeSWPP3gNsee5b6DWqMUYVj52Kf/HMuLFbYXrkA2/upoaYG3R1DZB12MbalBh6
      +3vJOpAJwKLla1izdg3ZX2biQM269AxARbDJiEqjJ2PDakrPXSR1iTTEKMrljz0zbsgS7wbg
      6ybI+O534u7Z7tnnnh+1nJrq6gX2DQondUn4RMsQ4pHIeQChaBIAoWgSAKFoEgChaBIAoWgS
      AKFoEgChaBIAoWgSAKFoEgChaBMOQMf1er7M3s/B3KJbaxycLDjC//3o3xi6tabtWhWf7fyc
      z3d+RtW1NmCYgwcOAVBxtpDy6qaJliHEI5lwAAyBoWRkrEd3xzXPC5akMi8+ZmT59NlKXtjx
      Ai/s2EHl2dMj6zuv19HYqyVlTtREyxDikUz4YjhfX1+g/441anx9DaO2cao1aFUAGjRqV1Ia
      ay5R39TMq6++DMgEGd5yT0NMTxVY++//gEflO8P13314qiPB7rDjfIh97JXOCJXq3oWYhCSW
      L4jlWGEp6U8uloYYL7mnIebSB9Be6v4nmvsDmPeq+8cdh0atgYfYxxM+BGptbqSysoa2thaq
      6+qxD92ksrKS1rY2aior6ezpZ05UMDnHCik8lkNwlHnksaGxcwlRdVFxtXWiZQjxSNz0cmRg
      ydKkUWsWLr3dJDBn4UqMLU0MoScqIgRwsDJ1KQCLVq2n9UYbQkyGCQcgPDKGu9tZEhMT79ku
      JOLOD7pqTKbgW/+vIjwsbKJlCPFI5DyAUDQJgFC0Kf2VS0NrD5Yh939taAo0EBLo6/ZxxTfP
      lA7AzsOXqGzsdPu4256cw7OrzeNvKB57cggkFE0CIBRNAiAUTQIgFE0CIBTNIxNktDVfJetg
      FlebXZc4yAQZYqpy+wQZjqFejhSeZ+PTGzlfeITeIYdMkCGmLLdPkHGjoYY5C5czTTuN5QvN
      1DTcoPsRJ8hwOp1f95QT5pykvoOp2A+gcTrxxI3pHQ4HjjF+1se2H8Bms6PVu4bVajTYh2yP
      PEGGSuWZOQNUk9R3MCX7ATy0j9VqNepJ+Fm93g9wt7DoGBrqqgCoqmskJjpsZIIM21Df6Aky
      tmzm5NEchuyeeaUXYjxunyBj84Y1zAyqZd++fYREzSbCX4dRJsgQU5RHJshIWfokKUtvL+v9
      jDJBhpiS5DyAUDQJgFA0CYBQNAmAUDQJgFA0CYBQNAmAUDQJgFA0CYBQNAmAUDT3B8Bpp+Bw
      Dvv376P4XAXganrZt2c3u/fso7N/CLBSVOSaJ6D9WrVMkCEmjdsD0FBxhqD4JWzf/ixDrdW0
      D9g4nl/A+s3b2b55PQX5xwEnnR1dWC09FJTWMl8myBCTxO0XbOt0Otrb2nHEBhMcYKCxuQOr
      Soe/Xgv4o1NZAdcEGZ+2t7LjxRdR8fUTZEhDjPtJQ4yH64hIWERX2RmyvsxG57hJTIzPXTv4
      9gQZs8J9qKlvYZE5WhpivEQaYkZz/2cAh43w2Lls2rCWviE1CZGBGA0qapraaW+qQe1rHNk0
      adka2qpP09ZrcXsZQjwIj0S0svwM3RY7T23KYJoaVqSlU/xVAY0YWL92BeBgjjkeULFhUwYV
      tU2EBiR4ohQhxuT+AKinkbr2qVGrVGotK9fcuU6D2Rx/a3MDyXPlj19MDjkPIBRNAiAUTQIg
      FG3sANgGqWu4fdvCq1evergcIbxr7AD0t/B/PvrdrQUHf//W256vSAgvuu+3QFWlx3n/o99Q
      Xd/KD394FYdtmPgFad6sTQiPu28AzIvX8uEHyfw+t5SXnt3ozZqE8JqxzwP4TKeyYD9/nrPH
      dQGDfyQfvvMzrxQmhDeMHYDBLm4Qxkcf/i8vlSOEd40dAG0A9DaSk5eHBkA3nfS1qeMOOjjQ
      R0PTdWZExeI/3QeAtpYmhtERFREKOOjo6MZkCsbpsNLeNUCoKWjiP40QD2nsb4GcDjZmZDDQ
      20tvby+9fQPjDjjU28ruA7k4HA5yD+ymtXeIqrOFlFyup/5yCYVnqwAbJ4vOAHA8LwebakpP
      VyweY2MHQO/PqqUpdHe0sXRlKgH+AeMO6LDbCQ6LZI55DpFhwdjtDmqvd5OxbhWr1mXQfb12
      ZNvq88X4x8xnRrDfhH8QIR7F2C+9tj5+9r/fIW3VfG4M6dmz61PS1y4f8yF6/2CcfcUcyDyA
      U61nkb8ex519LU4H4GqIaW4N4rvfc90lWhpivEMaYh6mDqsFh8HE3Nkx2Ab76LOMP/DViyXM
      fOIpkmKC6G68RMnFK6gcduxO0GDH7rjdEJOetoSD2bk8v+1paYjxEmmIGW3sLQ1hvLQphY9/
      n4lNc5gXX/7BuANGz0lm/4FD1J4zYLEMsXHrduwmJ5/v+gKtysaiJ2+fU9D7m1iZFMnxUxdI
      Wy4TZAjvGzcq8xat5D/FzLu1tX7cAXW+QXx7x47RK30T+M5/GH3N/5atmwCIjE8hMv4BqxXC
      zcYOgOUGP/qvf8PWLZtcx4kGI0sWJnulMCG8YewA6PwxJ87jlZdf9k41QnjZ2AFwOmitPc9P
      //qvXd+X+kXw87/5iVcKE8Ibxvka1IJfzALe/blcCiEeT2MHwKHiel0Zb7/zjusdYHoI/+21
      P/FKYUJ4w9gB0Afw7nvv3V5WT/NwOUJ4130DkPX5b/jyeOnolQEz+Ic3/4enaxLCa+4bgM0v
      vMLmF17xZi1CeN24J8IunD7Gbz/bAzp/Xv7TP2d+gtzJWTw+xg7AcBfvfbSTX/7D+zj7rvNX
      f/suv/3ol14qTQjPG+dbIBsOjZ7pBh2og3DahscdsLu1kYJT5wBou3aFZc+8RIS2k7yvytBi
      Y+GT6ZijAzl44Bhbtm6i4mwhNr+ZpMgcAWISjNMTHMor21fw49f+M6i0vPLqD8cdMCg8hm3b
      YgAnWQeySI4LITuziBd2vIAWO5kHcjBHpwPQeb2Oxl4tm56QP34xOcbtCe7UzuCfPvzwoQdu
      qT1PeMJC1IBTrUGrAtCgUbuu8W+suUR9UzOvvvoyIP0A3iL9AA9Th96fhtJ8KpKTmBcb9hBl
      OCmtuEbG1oXAXZecq273AyxfEMuxwlLSn1ws/QBeIv0Ao4295UA7VU0tfPXTvyA0xPTAt0Vp
      vVJO6KyUkX7LOVHB5BwrxJ8+gqPMI9uFxs4l5NphKq62Mi8u/IGLFsJdxg6AXwS/ev99+gZu
      upZVD3YvXV1AFEtmmUaW5yxcibGliSH0REWEAA5Wpi4FYNGq9bTeaHuk4oWYqHG+Bu3mey/9
      CXGJc13HiX7hvPnffzTuoEaT6Z51IRF3ftBVYzIF3/p/FeFhD3N4JYT7jHOw5CQiYRFvvSlX
      g4rH0ziXQztoqjnPW++847oxllwNKh4z414N+vP33r29LFeDisfMfT/VVpbmk3minJkhvuQW
      nWfmzJl88cVOb9YmhMfdNwD9Xe00t3WBdYBTZRUAVFVXe60wIbxhzEOgG80NlFfYGejpoLy8
      nP7ByT2LKYS73fcdICIuEaN6gPySKlKTYsjPzyd19VP321yIb6T7vgNExc/ntdfkbm3i8SbT
      pApF80gALH1d5B3K5ujxYuyA02Gl6PhRjh4vwupwAnaqqly3SR/q76T6avOY4wnhKe4PgMPK
      odx8Vq5Zz5IUM07g5LE8QuNTSIkPJe9YEWCnuqoWnDYO5eYTHRXh9jKEeBBuv161p7kGpyGQ
      gqO5mKJms8xopHsQUqNCgBAoc32V2tPZxqGsgyxavQHDNLX0A3iJ9AN4uI5ByyA+fkY2PpnG
      5dNHOVcdxOg/49tLdrsDjcb1JiT9AN4h/QCjuf0QyBQVy2B/Fxq1mhkzIhgcGkKHlb4hG7ah
      PqzoAAgMDiVjy2ZOHs1hyO6ZV3ohxuP2iGp9TSRF+7N33350Bn82pj+FIy6Q7C8zcaBmXXoG
      oCLYZESl0ZOxYTWl5y6SukS+chXe55H3KHPKUswpd6zwM/Lsc8+P2iY11TU3mG9QOKlLpBtM
      TA45DyAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUTQIgFE0CIBRNAiAUzSOXQhzO2stNuwaA
      dZu2obN2kp17DDsa1m3MINhPTVHROVJTl9F+rZrrFl+ZIENMCg8EwIld68u2zZtG1uTmFbB+
      83YMWDiYd5xnt6TR2dGF1dJDQWktz23PcH8ZQjwA9wfA1ktVRQ3DwzZmz00mKWEmVpUOf70W
      8EensgKuCTI+bW9lx4svokImyPAWaYjxdB3aQF77yx/isNs4eSSL6ulBd+3g2xNkzAr3oaa+
      hUXmaGmI8RJpiBnN7R+C+zpaqGtscc0loFKh1WgwGlTUNLXT3lSD2tc4sm3SsjW0VZ+mrdfi
      7jKEeCBuD4CfMYT+G/VkZWURFLeQWWF+rEhLp72unPK6dtavXQFomGOOB1Rs2JTBjeYmd5ch
      xANx+3uUSq1lwZIVLLhr3co1d95VToPZHA+AepqB5LkJ7i5DiAci5wGEokkAhKJJAISiSQCE
      okkAhKJJAISiSQCEokkAhKL9f8HGGKMn+g0pAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Uni Salary (Line)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
